###############################################################################
#
# IAR ANSI C/C++ Compiler V8.22.1.15669/W32 for ARM       28/Dec/2020  22:14:02
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\nano\Src\usart.c
#    Command line =  
#        -f C:\Users\ADMINI~1\AppData\Local\Temp\EW1357.tmp
#        (F:\nano\Src\usart.c -D USE_HAL_DRIVER -D STM32F103xE -D MKS_ROBIN -D
#        MARLIN -D __arm__ -D USE_MKS_WIFI --preprocess=s
#        F:\nano\EWARM\mksRobinLite\List -lC F:\nano\EWARM\mksRobinLite\List
#        -lA F:\nano\EWARM\mksRobinLite\List --diag_suppress Pa050 -o
#        F:\nano\EWARM\mksRobinLite\Obj --no_unroll --no_inline --no_tbaa
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e
#        --char_is_signed --fpu=None --dlib_config "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.0\arm\INC\c\DLib_Config_Full.h" -I
#        F:\nano\EWARM/../Inc\ -I F:\nano\EWARM/../Src\ -I
#        F:\nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\ -I
#        F:\nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\ -I
#        F:\nano\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/Inc\ -I
#        F:\nano\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\ -I
#        F:\nano\EWARM/../Drivers/CMSIS/Include\ -I
#        F:\nano\EWARM/../Drivers/BSP/STM32MKS-3dPrinter\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/Common\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/l6474\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/at24cxx\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/w25qxx\ -I
#        F:\nano\EWARM/../Drivers/BSP/MotorControl\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/FatFs/src\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/Marlin\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/u8glib_arm_v1.17/src\ -I
#        F:\nano\EWARM/../Middlewares/arduino\ -I
#        F:\nano\EWARM/../Middlewares/arduino/avr\ -I
#        F:\nano\EWARM/../Inc/Logo\ -Om --use_c++_inline -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.0\arm\CMSIS\Core\Include\" -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  F:\nano\EWARM\mksRobinLite\List\usart.lst
#    Object file  =  F:\nano\EWARM\mksRobinLite\Obj\usart.o
#
###############################################################################

F:\nano\Src\usart.c
      1          /**
      2            ******************************************************************************
      3            * File Name          : USART.c
      4            * Description        : This file provides code for the configuration
      5            *                      of the USART instances.
      6            ******************************************************************************
      7            *
      8            * COPYRIGHT(c) 2017 STMicroelectronics
      9            *
     10            * Redistribution and use in source and binary forms, with or without modification,
     11            * are permitted provided that the following conditions are met:
     12            *   1. Redistributions of source code must retain the above copyright notice,
     13            *      this list of conditions and the following disclaimer.
     14            *   2. Redistributions in binary form must reproduce the above copyright notice,
     15            *      this list of conditions and the following disclaimer in the documentation
     16            *      and/or other materials provided with the distribution.
     17            *   3. Neither the name of STMicroelectronics nor the names of its contributors
     18            *      may be used to endorse or promote products derived from this software
     19            *      without specific prior written permission.
     20            *
     21            * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
     22            * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     23            * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     24            * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
     25            * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
     26            * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
     27            * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
     28            * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
     29            * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
     30            * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     31            *
     32            ******************************************************************************
     33            */
     34          
     35          /* Includes ------------------------------------------------------------------*/
     36          #include "usart.h"
     37          
     38          #include "gpio.h"
     39          
     40          /* USER CODE BEGIN 0 */
     41          #include "stm32f1xx_3dprinter_uart.h"
     42          /* USER CODE END 0 */
     43          

   \                                 In section .bss, align 4
     44          UART_HandleTypeDef huart1;
   \                     huart1:
   \   00000000                      DS8 64
     45          
     46          /* USART1 init function */
     47          

   \                                 In section .text, align 2, keep-with-next
     48          void MX_USART1_UART_Init(void)
     49          {
   \                     MX_USART1_UART_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     50          
     51            huart1.Instance = USART1;
   \   00000002   0x....             LDR.N    R0,??DataTable2
   \   00000004   0x....             LDR.N    R1,??DataTable2_1  ;; 0x40013800
   \   00000006   0x6001             STR      R1,[R0, #+0]
     52            huart1.Init.BaudRate = 115200;
   \   00000008   0xF44F 0x31E1      MOV      R1,#+115200
   \   0000000C   0x6041             STR      R1,[R0, #+4]
     53            huart1.Init.WordLength = UART_WORDLENGTH_8B;
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x6081             STR      R1,[R0, #+8]
     54            huart1.Init.StopBits = UART_STOPBITS_1;
   \   00000012   0x60C1             STR      R1,[R0, #+12]
     55            huart1.Init.Parity = UART_PARITY_NONE;
   \   00000014   0x6101             STR      R1,[R0, #+16]
     56            huart1.Init.Mode = UART_MODE_TX_RX;
   \   00000016   0x210C             MOVS     R1,#+12
   \   00000018   0x6141             STR      R1,[R0, #+20]
     57            huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
   \   0000001A   0x2100             MOVS     R1,#+0
   \   0000001C   0x6181             STR      R1,[R0, #+24]
     58            huart1.Init.OverSampling = UART_OVERSAMPLING_16;
   \   0000001E   0x61C1             STR      R1,[R0, #+28]
     59            if (HAL_UART_Init(&huart1) != HAL_OK)
   \   00000020   0x.... 0x....      BL       HAL_UART_Init
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD003             BEQ.N    ??MX_USART1_UART_Init_0
     60            {
     61              Error_Handler();
   \   00000028   0xE8BD 0x4001      POP      {R0,LR}
   \   0000002C   0x.... 0x....      B.W      Error_Handler
     62            }
     63          
     64          }
   \                     ??MX_USART1_UART_Init_0: (+1)
   \   00000030   0xBD01             POP      {R0,PC}          ;; return
     65          

   \                                 In section .text, align 2, keep-with-next
     66          void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
     67          {
   \                     HAL_UART_MspInit: (+1)
   \   00000000   0xB518             PUSH     {R3,R4,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
     68          
     69            GPIO_InitTypeDef GPIO_InitStruct;
     70            if(uartHandle->Instance==USART1)
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x....             LDR.N    R1,??DataTable2_1  ;; 0x40013800
   \   00000008   0x4288             CMP      R0,R1
   \   0000000A   0xD120             BNE.N    ??HAL_UART_MspInit_0
     71            {
     72            /* USER CODE BEGIN USART1_MspInit 0 */
     73          
     74            /* USER CODE END USART1_MspInit 0 */
     75              /* Peripheral clock enable */
     76              __HAL_RCC_USART1_CLK_ENABLE();
   \   0000000C   0x....             LDR.N    R0,??DataTable2_2  ;; 0x40021018
   \   0000000E   0x6801             LDR      R1,[R0, #+0]
   \   00000010   0xF441 0x4180      ORR      R1,R1,#0x4000
   \   00000014   0x6001             STR      R1,[R0, #+0]
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF400 0x4080      AND      R0,R0,#0x4000
   \   0000001C   0x9004             STR      R0,[SP, #+16]
   \   0000001E   0x9804             LDR      R0,[SP, #+16]
     77            
     78              /**USART1 GPIO Configuration    
     79              PA9     ------> USART1_TX
     80              PA10     ------> USART1_RX 
     81              */
     82              GPIO_InitStruct.Pin = GPIO_PIN_9;
   \   00000020   0xF44F 0x7000      MOV      R0,#+512
   \   00000024   0x9000             STR      R0,[SP, #+0]
     83              GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   00000026   0x2002             MOVS     R0,#+2
   \   00000028   0x9001             STR      R0,[SP, #+4]
     84              GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
   \   0000002A   0x2003             MOVS     R0,#+3
   \   0000002C   0x9003             STR      R0,[SP, #+12]
     85              HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   \   0000002E   0x....             LDR.N    R4,??DataTable2_3  ;; 0x40010800
   \   00000030   0x4669             MOV      R1,SP
   \   00000032   0x4620             MOV      R0,R4
   \   00000034   0x.... 0x....      BL       HAL_GPIO_Init
     86          
     87              GPIO_InitStruct.Pin = GPIO_PIN_10;
   \   00000038   0xF44F 0x6080      MOV      R0,#+1024
   \   0000003C   0x9000             STR      R0,[SP, #+0]
     88              GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x9001             STR      R0,[SP, #+4]
     89              GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000042   0x9002             STR      R0,[SP, #+8]
     90              HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   \   00000044   0x4669             MOV      R1,SP
   \   00000046   0x4620             MOV      R0,R4
   \   00000048   0x.... 0x....      BL       HAL_GPIO_Init
   \   0000004C   0xE020             B.N      ??HAL_UART_MspInit_1
     91          
     92          #ifndef USE_MKS_WIFI
     93            /* Peripheral interrupt init */
     94            HAL_NVIC_SetPriority(USART1_IRQn, 3, 0);
     95            HAL_NVIC_EnableIRQ(USART1_IRQn);
     96          #endif
     97          
     98            /* USER CODE BEGIN USART1_MspInit 1 */
     99          
    100            /* USER CODE END USART1_MspInit 1 */
    101            }
    102          #ifdef USE_MKS_WIFI  
    103            else if(uartHandle->Instance==USART2)
   \                     ??HAL_UART_MspInit_0: (+1)
   \   0000004E   0x....             LDR.N    R1,??DataTable2_4  ;; 0x40004400
   \   00000050   0x4288             CMP      R0,R1
   \   00000052   0xD11D             BNE.N    ??HAL_UART_MspInit_1
    104            {
    105            /* USER CODE BEGIN USART2_MspInit 0 */
    106          
    107            /* USER CODE END USART2_MspInit 0 */
    108              /* Peripheral clock enable */
    109              __HAL_RCC_USART2_CLK_ENABLE();
   \   00000054   0x....             LDR.N    R0,??DataTable2_2  ;; 0x40021018
   \   00000056   0x6841             LDR      R1,[R0, #+4]
   \   00000058   0xF441 0x3100      ORR      R1,R1,#0x20000
   \   0000005C   0x6041             STR      R1,[R0, #+4]
   \   0000005E   0x6840             LDR      R0,[R0, #+4]
   \   00000060   0xF400 0x3000      AND      R0,R0,#0x20000
   \   00000064   0x9004             STR      R0,[SP, #+16]
   \   00000066   0x9804             LDR      R0,[SP, #+16]
    110            
    111              /**USART2 GPIO Configuration    
    112              PA2     ------> USART2_TX
    113              PA3     ------> USART3_RX 
    114              */
    115              GPIO_InitStruct.Pin = GPIO_PIN_2;
   \   00000068   0x2004             MOVS     R0,#+4
   \   0000006A   0x9000             STR      R0,[SP, #+0]
    116              GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   0000006C   0x2002             MOVS     R0,#+2
   \   0000006E   0x9001             STR      R0,[SP, #+4]
    117              GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
   \   00000070   0x2003             MOVS     R0,#+3
   \   00000072   0x9003             STR      R0,[SP, #+12]
    118              HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   \   00000074   0x....             LDR.N    R4,??DataTable2_3  ;; 0x40010800
   \   00000076   0x4669             MOV      R1,SP
   \   00000078   0x4620             MOV      R0,R4
   \   0000007A   0x.... 0x....      BL       HAL_GPIO_Init
    119          
    120              GPIO_InitStruct.Pin = GPIO_PIN_3;
   \   0000007E   0x2008             MOVS     R0,#+8
   \   00000080   0x9000             STR      R0,[SP, #+0]
    121              GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
   \   00000082   0x2000             MOVS     R0,#+0
   \   00000084   0x9001             STR      R0,[SP, #+4]
    122              GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000086   0x9002             STR      R0,[SP, #+8]
    123              HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   \   00000088   0x4669             MOV      R1,SP
   \   0000008A   0x4620             MOV      R0,R4
   \   0000008C   0x.... 0x....      BL       HAL_GPIO_Init
    124          
    125             
    126            /* USER CODE BEGIN USART2_MspInit 1 */
    127          
    128            /* USER CODE END USART2_MspInit 1 */
    129            }
    130          #endif
    131          }
   \                     ??HAL_UART_MspInit_1: (+1)
   \   00000090   0xB006             ADD      SP,SP,#+24
   \   00000092   0xBD10             POP      {R4,PC}          ;; return
    132          

   \                                 In section .text, align 2, keep-with-next
    133          void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
    134          {
   \                     HAL_UART_MspDeInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    135          
    136            if(uartHandle->Instance==USART1)
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x....             LDR.N    R1,??DataTable2_1  ;; 0x40013800
   \   00000006   0x4288             CMP      R0,R1
   \   00000008   0xD10E             BNE.N    ??HAL_UART_MspDeInit_0
    137            {
    138            /* USER CODE BEGIN USART1_MspDeInit 0 */
    139          
    140            /* USER CODE END USART1_MspDeInit 0 */
    141              /* Peripheral clock disable */
    142              __HAL_RCC_USART1_CLK_DISABLE();
   \   0000000A   0x....             LDR.N    R0,??DataTable2_2  ;; 0x40021018
   \   0000000C   0x6801             LDR      R1,[R0, #+0]
   \   0000000E   0xF421 0x4180      BIC      R1,R1,#0x4000
   \   00000012   0x6001             STR      R1,[R0, #+0]
    143            
    144              /**USART1 GPIO Configuration    
    145              PA9     ------> USART1_TX
    146              PA10     ------> USART1_RX 
    147              */
    148              HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
   \   00000014   0xF44F 0x61C0      MOV      R1,#+1536
   \   00000018   0x....             LDR.N    R0,??DataTable2_3  ;; 0x40010800
   \   0000001A   0x.... 0x....      BL       HAL_GPIO_DeInit
    149          
    150              /* Peripheral interrupt Deinit*/
    151              HAL_NVIC_DisableIRQ(USART1_IRQn);
   \   0000001E   0x2025             MOVS     R0,#+37
   \   00000020   0xE8BD 0x4002      POP      {R1,LR}
   \   00000024   0x.... 0x....      B.W      HAL_NVIC_DisableIRQ
    152          
    153          	 /* USER CODE BEGIN USART1_MspDeInit 0 */
    154          
    155            /* USER CODE END USART1_MspDeInit 0 */
    156          
    157            }
    158          #ifdef USE_MKS_WIFI  
    159            else if(uartHandle->Instance==USART2)
   \                     ??HAL_UART_MspDeInit_0: (+1)
   \   00000028   0x....             LDR.N    R1,??DataTable2_4  ;; 0x40004400
   \   0000002A   0x4288             CMP      R0,R1
   \   0000002C   0xD10D             BNE.N    ??HAL_UART_MspDeInit_1
    160            {
    161           
    162              /* Peripheral clock disable */
    163              __HAL_RCC_USART2_CLK_DISABLE();
   \   0000002E   0x....             LDR.N    R0,??DataTable2_2  ;; 0x40021018
   \   00000030   0x6841             LDR      R1,[R0, #+4]
   \   00000032   0xF421 0x3100      BIC      R1,R1,#0x20000
   \   00000036   0x6041             STR      R1,[R0, #+4]
    164            
    165              /**USART2 GPIO Configuration    
    166              PA2     ------> USART2_TX
    167              PA3    ------> USART2_RX 
    168              */
    169              HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
   \   00000038   0x210C             MOVS     R1,#+12
   \   0000003A   0x....             LDR.N    R0,??DataTable2_3  ;; 0x40010800
   \   0000003C   0x.... 0x....      BL       HAL_GPIO_DeInit
    170          
    171              /* Peripheral interrupt Deinit*/
    172              HAL_NVIC_DisableIRQ(USART2_IRQn);
   \   00000040   0x2026             MOVS     R0,#+38
   \   00000042   0xE8BD 0x4002      POP      {R1,LR}
   \   00000046   0x.... 0x....      B.W      HAL_NVIC_DisableIRQ
    173          
    174            }
    175          #endif
    176            /* USER CODE BEGIN USART2_MspDeInit 1 */
    177          
    178            /* USER CODE END USART2_MspDeInit 1 */
    179          } 
   \                     ??HAL_UART_MspDeInit_1: (+1)
   \   0000004A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     huart1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x40013800         DC32     0x40013800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x40021018         DC32     0x40021018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x40010800         DC32     0x40010800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x40004400         DC32     0x40004400
    180          
    181          /* USER CODE BEGIN 1 */
    182          
    183          /* USER CODE END 1 */
    184          
    185          /**
    186            * @}
    187            */
    188          
    189          /**
    190            * @}
    191            */
    192          
    193          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   HAL_UART_MspDeInit
         8   -> HAL_GPIO_DeInit
         0   -> HAL_NVIC_DisableIRQ
      32   HAL_UART_MspInit
        32   -> HAL_GPIO_Init
       8   MX_USART1_UART_Init
         0   -> Error_Handler
         8   -> HAL_UART_Init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
      76  HAL_UART_MspDeInit
     148  HAL_UART_MspInit
      50  MX_USART1_UART_Init
      64  huart1

 
  64 bytes in section .bss
 294 bytes in section .text
 
 294 bytes of CODE memory
  64 bytes of DATA memory

Errors: none
Warnings: none
