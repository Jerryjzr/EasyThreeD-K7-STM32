###############################################################################
#
# IAR ANSI C/C++ Compiler V8.22.1.15669/W32 for ARM       28/Dec/2020  21:37:06
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\nano\Middlewares\Third_Party\u8glib_arm_v1.17\src\u8g_dev_a2_micro_printer.c
#    Command line =  
#        -f C:\Users\ADMINI~1\AppData\Local\Temp\EW4202.tmp
#        (F:\nano\Middlewares\Third_Party\u8glib_arm_v1.17\src\u8g_dev_a2_micro_printer.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D MKS_ROBIN -D MARLIN -D __arm__ -D
#        USE_MKS_WIFI --preprocess=s F:\nano\EWARM\mksRobinLite\List -lC
#        F:\nano\EWARM\mksRobinLite\List -lA F:\nano\EWARM\mksRobinLite\List
#        --diag_suppress Pa050 -o F:\nano\EWARM\mksRobinLite\Obj --no_unroll
#        --no_inline --no_tbaa --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --char_is_signed --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Full.h" -I F:\nano\EWARM/../Inc\ -I
#        F:\nano\EWARM/../Src\ -I
#        F:\nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\ -I
#        F:\nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\ -I
#        F:\nano\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/Inc\ -I
#        F:\nano\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\ -I
#        F:\nano\EWARM/../Drivers/CMSIS/Include\ -I
#        F:\nano\EWARM/../Drivers/BSP/STM32MKS-3dPrinter\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/Common\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/l6474\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/at24cxx\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/w25qxx\ -I
#        F:\nano\EWARM/../Drivers/BSP/MotorControl\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/FatFs/src\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/Marlin\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/u8glib_arm_v1.17/src\ -I
#        F:\nano\EWARM/../Middlewares/arduino\ -I
#        F:\nano\EWARM/../Middlewares/arduino/avr\ -I
#        F:\nano\EWARM/../Inc/Logo\ -Om --use_c++_inline -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.0\arm\CMSIS\Core\Include\" -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  
#        F:\nano\EWARM\mksRobinLite\List\u8g_dev_a2_micro_printer.lst
#    Object file  =  F:\nano\EWARM\mksRobinLite\Obj\u8g_dev_a2_micro_printer.o
#
###############################################################################

F:\nano\Middlewares\Third_Party\u8glib_arm_v1.17\src\u8g_dev_a2_micro_printer.c
      1          /*
      2          
      3            u8g_dev_a2_micro_printer_ds.c
      4          
      5            Use DC2 bitmap command of the A2 Micro panel termal printer
      6            double stroke
      7          
      8            Universal 8bit Graphics Library
      9            
     10            Copyright (c) 2013, olikraus@gmail.com
     11            All rights reserved.
     12          
     13            Redistribution and use in source and binary forms, with or without modification, 
     14            are permitted provided that the following conditions are met:
     15          
     16            * Redistributions of source code must retain the above copyright notice, this list 
     17              of conditions and the following disclaimer.
     18              
     19            * Redistributions in binary form must reproduce the above copyright notice, this 
     20              list of conditions and the following disclaimer in the documentation and/or other 
     21              materials provided with the distribution.
     22          
     23            THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
     24            CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
     25            INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
     26            MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
     27            DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
     28            CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
     29            SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
     30            NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
     31            LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
     32            CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
     33            STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
     34            ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
     35            ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
     36            
     37            
     38          */
     39          
     40          #include "u8g.h"
     41          
     42          #define LINE_DELAY 40
     43          
     44          

   \                                 In section .text, align 2, keep-with-next
     45          uint8_t u8g_dev_a2_micro_printer_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg)
     46          {
   \                     u8g_dev_a2_micro_printer_fn: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
   \   00000008   0x4692             MOV      R10,R2
   \   0000000A   0x461E             MOV      R6,R3
     47            switch(msg)
   \   0000000C   0x4650             MOV      R0,R10
   \   0000000E   0x280A             CMP      R0,#+10
   \   00000010   0xD002             BEQ.N    ??u8g_dev_a2_micro_printer_fn_0
   \   00000012   0x2815             CMP      R0,#+21
   \   00000014   0xD005             BEQ.N    ??u8g_dev_a2_micro_printer_fn_1
   \   00000016   0xE06E             B.N      ??u8g_dev_a2_micro_printer_fn_2
     48            {
     49              case U8G_DEV_MSG_INIT:
     50                u8g_InitCom(u8g, dev, U8G_SPI_CLK_CYCLE_NONE);
   \                     ??u8g_dev_a2_micro_printer_fn_0: (+1)
   \   00000018   0x22FF             MOVS     R2,#+255
   \   0000001A   0x4620             MOV      R0,R4
   \   0000001C   0x.... 0x....      BL       u8g_InitCom
     51                break;
   \   00000020   0xE069             B.N      ??u8g_dev_a2_micro_printer_fn_2
     52              case U8G_DEV_MSG_STOP:
     53                break;
     54              case U8G_DEV_MSG_PAGE_NEXT:
     55                {
     56                  uint8_t y, i, j;
     57                  uint8_t *ptr;
     58                  u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
   \                     ??u8g_dev_a2_micro_printer_fn_1: (+1)
   \   00000022   0xF8D5 0x9004      LDR      R9,[R5, #+4]
     59                  
     60                  y = pb->p.page_y0;
     61                  ptr = pb->buf;
   \   00000026   0xF8D9 0x8008      LDR      R8,[R9, #+8]
     62          
     63          	u8g_WriteByte(u8g, dev, 27);      /* ESC */
   \   0000002A   0x221B             MOVS     R2,#+27
   \   0000002C   0x4620             MOV      R0,R4
   \   0000002E   0x.... 0x....      BL       u8g_WriteByte
     64          	u8g_WriteByte(u8g, dev, 55 );      /* parameter command */
   \   00000032   0x2237             MOVS     R2,#+55
   \   00000034   0x4629             MOV      R1,R5
   \   00000036   0x4620             MOV      R0,R4
   \   00000038   0x.... 0x....      BL       u8g_WriteByte
     65          	u8g_WriteByte(u8g, dev, 7);      /* Max printing dots,Unit(8dots),Default:7(64 dots) 8*(x+1)*/
   \   0000003C   0x2207             MOVS     R2,#+7
   \   0000003E   0x4629             MOV      R1,R5
   \   00000040   0x4620             MOV      R0,R4
   \   00000042   0x.... 0x....      BL       u8g_WriteByte
     66          	u8g_WriteByte(u8g, dev, 160);      /* 3-255 Heating time,Unit(10us),Default:80(800us) */
   \   00000046   0x22A0             MOVS     R2,#+160
   \   00000048   0x4629             MOV      R1,R5
   \   0000004A   0x4620             MOV      R0,R4
   \   0000004C   0x.... 0x....      BL       u8g_WriteByte
     67          	u8g_WriteByte(u8g, dev, 20);      /* 0-255 Heating interval,Unit(10us),Default:2(20us)*/
   \   00000050   0x2214             MOVS     R2,#+20
   \   00000052   0x4629             MOV      R1,R5
   \   00000054   0x4620             MOV      R0,R4
   \   00000056   0x.... 0x....      BL       u8g_WriteByte
     68          	
     69          	u8g_WriteByte(u8g, dev, 18);      /* DC2 */
   \   0000005A   0x2212             MOVS     R2,#+18
   \   0000005C   0x4629             MOV      R1,R5
   \   0000005E   0x4620             MOV      R0,R4
   \   00000060   0x.... 0x....      BL       u8g_WriteByte
     70          	u8g_WriteByte(u8g, dev, 42 );      /* *  */
   \   00000064   0x222A             MOVS     R2,#+42
   \   00000066   0x4629             MOV      R1,R5
   \   00000068   0x4620             MOV      R0,R4
   \   0000006A   0x.... 0x....      BL       u8g_WriteByte
     71          	u8g_WriteByte(u8g, dev, pb->p.page_height ); 
   \   0000006E   0xF899 0x2000      LDRB     R2,[R9, #+0]
   \   00000072   0x4629             MOV      R1,R5
   \   00000074   0x4620             MOV      R0,R4
   \   00000076   0x.... 0x....      BL       u8g_WriteByte
     72          	u8g_WriteByte(u8g, dev, pb->width/8 ); 
   \   0000007A   0xF899 0x2005      LDRB     R2,[R9, #+5]
   \   0000007E   0x08D2             LSRS     R2,R2,#+3
   \   00000080   0x4629             MOV      R1,R5
   \   00000082   0x4620             MOV      R0,R4
   \   00000084   0x.... 0x....      BL       u8g_WriteByte
     73          	
     74                  for( i = 0; i < pb->p.page_height; i ++ )
   \   00000088   0x2700             MOVS     R7,#+0
   \   0000008A   0xE012             B.N      ??u8g_dev_a2_micro_printer_fn_3
     75                  {
     76          	  for( j = 0; j < pb->width/8; j++ )
     77          	  {
     78          	    u8g_WriteByte(u8g, dev, *ptr);
   \                     ??u8g_dev_a2_micro_printer_fn_4: (+1)
   \   0000008C   0xF818 0x2B01      LDRB     R2,[R8], #+1
   \   00000090   0x4629             MOV      R1,R5
   \   00000092   0x4620             MOV      R0,R4
   \   00000094   0x.... 0x....      BL       u8g_WriteByte
     79          	    ptr++;
     80          	  }
   \   00000098   0xF10B 0x0B01      ADD      R11,R11,#+1
   \                     ??u8g_dev_a2_micro_printer_fn_5: (+1)
   \   0000009C   0x4658             MOV      R0,R11
   \   0000009E   0xF899 0x1005      LDRB     R1,[R9, #+5]
   \   000000A2   0xB2C0             UXTB     R0,R0
   \   000000A4   0xEBB0 0x0FD1      CMP      R0,R1, LSR #+3
   \   000000A8   0xD3F0             BCC.N    ??u8g_dev_a2_micro_printer_fn_4
     81          	  u8g_Delay(LINE_DELAY);
   \   000000AA   0x2028             MOVS     R0,#+40
   \   000000AC   0x.... 0x....      BL       u8g_Delay
     82                    y++;
   \   000000B0   0x1C7F             ADDS     R7,R7,#+1
   \                     ??u8g_dev_a2_micro_printer_fn_3: (+1)
   \   000000B2   0x4638             MOV      R0,R7
   \   000000B4   0xF899 0x1000      LDRB     R1,[R9, #+0]
   \   000000B8   0xB2C0             UXTB     R0,R0
   \   000000BA   0x4288             CMP      R0,R1
   \   000000BC   0xD202             BCS.N    ??u8g_dev_a2_micro_printer_fn_6
   \   000000BE   0xF04F 0x0B00      MOV      R11,#+0
   \   000000C2   0xE7EB             B.N      ??u8g_dev_a2_micro_printer_fn_5
     83                  }
     84          
     85          	/* set parameters back to their default values */
     86          	u8g_WriteByte(u8g, dev, 27);      /* ESC */
   \                     ??u8g_dev_a2_micro_printer_fn_6: (+1)
   \   000000C4   0x221B             MOVS     R2,#+27
   \   000000C6   0x4629             MOV      R1,R5
   \   000000C8   0x4620             MOV      R0,R4
   \   000000CA   0x.... 0x....      BL       u8g_WriteByte
     87          	u8g_WriteByte(u8g, dev, 55 );      /* parameter command */
   \   000000CE   0x2237             MOVS     R2,#+55
   \   000000D0   0x4629             MOV      R1,R5
   \   000000D2   0x4620             MOV      R0,R4
   \   000000D4   0x.... 0x....      BL       u8g_WriteByte
     88          	u8g_WriteByte(u8g, dev, 7);      /* Max printing dots,Unit(8dots),Default:7(64 dots) 8*(x+1)*/
   \   000000D8   0x2207             MOVS     R2,#+7
   \   000000DA   0x4629             MOV      R1,R5
   \   000000DC   0x4620             MOV      R0,R4
   \   000000DE   0x.... 0x....      BL       u8g_WriteByte
     89          	u8g_WriteByte(u8g, dev, 80);      /* 3-255 Heating time,Unit(10us),Default:80(800us) */
   \   000000E2   0x2250             MOVS     R2,#+80
   \   000000E4   0x4629             MOV      R1,R5
   \   000000E6   0x4620             MOV      R0,R4
   \   000000E8   0x.... 0x....      BL       u8g_WriteByte
     90          	u8g_WriteByte(u8g, dev, 2);      /* 0-255 Heating interval,Unit(10us),Default:2(20us)*/
   \   000000EC   0x2202             MOVS     R2,#+2
   \   000000EE   0x4629             MOV      R1,R5
   \   000000F0   0x4620             MOV      R0,R4
   \   000000F2   0x.... 0x....      BL       u8g_WriteByte
     91          	
     92                }
     93                break;
   \                     ??u8g_dev_a2_micro_printer_fn_2: (+1)
   \   000000F6   0x4633             MOV      R3,R6
     94            }
     95            return u8g_dev_pb8h1_base_fn(u8g, dev, msg, arg);
   \   000000F8   0x4652             MOV      R2,R10
   \   000000FA   0x4629             MOV      R1,R5
   \   000000FC   0x4620             MOV      R0,R4
   \   000000FE   0xB001             ADD      SP,SP,#+4
   \   00000100   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   00000104   0x.... 0x....      B.W      u8g_dev_pb8h1_base_fn
     96          }
     97          

   \                                 In section .text, align 2, keep-with-next
     98          static uint8_t u8g_dev_expand4(uint8_t val)
     99          {
    100            uint8_t a,b,c,d;
    101            a = val&1;
    102            b = (val&2)<<1;
    103            c = (val&4)<<2;
    104            d = (val&8)<<3;
    105            a |=b;
    106            a |=c;
    107            a |=d;
   \                     u8g_dev_expand4: (+1)
   \   00000000   0xF000 0x0101      AND      R1,R0,#0x1
   \   00000004   0x0042             LSLS     R2,R0,#+1
   \   00000006   0xF002 0x0204      AND      R2,R2,#0x4
   \   0000000A   0x4311             ORRS     R1,R2,R1
   \   0000000C   0x0082             LSLS     R2,R0,#+2
   \   0000000E   0xF002 0x0210      AND      R2,R2,#0x10
   \   00000012   0x4311             ORRS     R1,R2,R1
   \   00000014   0x00C0             LSLS     R0,R0,#+3
   \   00000016   0xF000 0x0040      AND      R0,R0,#0x40
   \   0000001A   0x4308             ORRS     R0,R0,R1
    108            a |= a<<1;
    109            return a;
   \   0000001C   0xEA40 0x0040      ORR      R0,R0,R0, LSL #+1
   \   00000020   0x4770             BX       LR               ;; return
    110          }
    111          

   \                                 In section .text, align 2, keep-with-next
    112          uint8_t u8g_dev_a2_micro_printer_double_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg)
    113          {
   \                     u8g_dev_a2_micro_printer_double_fn: (+1)
   \   00000000   0xE92D 0x4FF4      PUSH     {R2,R4-R11,LR}
   \   00000004   0x4607             MOV      R7,R0
   \   00000006   0x4688             MOV      R8,R1
   \   00000008   0x461C             MOV      R4,R3
    114            switch(msg)
   \   0000000A   0x4610             MOV      R0,R2
   \   0000000C   0x280A             CMP      R0,#+10
   \   0000000E   0xD002             BEQ.N    ??u8g_dev_a2_micro_printer_double_fn_0
   \   00000010   0x2815             CMP      R0,#+21
   \   00000012   0xD005             BEQ.N    ??u8g_dev_a2_micro_printer_double_fn_1
   \   00000014   0xE0AA             B.N      ??u8g_dev_a2_micro_printer_double_fn_2
    115            {
    116              case U8G_DEV_MSG_INIT:
    117                u8g_InitCom(u8g, dev, U8G_SPI_CLK_CYCLE_NONE);
   \                     ??u8g_dev_a2_micro_printer_double_fn_0: (+1)
   \   00000016   0x22FF             MOVS     R2,#+255
   \   00000018   0x4638             MOV      R0,R7
   \   0000001A   0x.... 0x....      BL       u8g_InitCom
    118                break;
   \   0000001E   0xE0A5             B.N      ??u8g_dev_a2_micro_printer_double_fn_2
    119              case U8G_DEV_MSG_STOP:
    120                break;
    121              case U8G_DEV_MSG_PAGE_FIRST:
    122                {
    123                  //u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
    124          	//u8g_WriteByte(u8g, dev, 18);      /* DC2 */
    125          	//u8g_WriteByte(u8g, dev, 42 );      /* *  */
    126          	//u8g_WriteByte(u8g, dev, pb->p.total_height*2 ); 
    127          	//u8g_WriteByte(u8g, dev, pb->width/8*2 ); 
    128                }
    129                break;
    130              case U8G_DEV_MSG_PAGE_NEXT:
    131                {
    132                  uint8_t y, i, j;
    133                  uint8_t *ptr;
    134                  uint8_t *p2;
    135                  u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
   \                     ??u8g_dev_a2_micro_printer_double_fn_1: (+1)
   \   00000020   0xF8D8 0x9004      LDR      R9,[R8, #+4]
    136                  
    137                  y = pb->p.page_y0;
    138                  ptr = pb->buf;
   \   00000024   0xF8D9 0x5008      LDR      R5,[R9, #+8]
    139          	//u8g_WriteByte(u8g, dev, 18);      /* DC2 */
    140          	//u8g_WriteByte(u8g, dev, 35 );      /* #  */
    141          	//u8g_WriteByte(u8g, dev, 0x0ff );      /* max  */
    142          
    143          	u8g_WriteByte(u8g, dev, 27);      /* ESC */
   \   00000028   0x221B             MOVS     R2,#+27
   \   0000002A   0x4638             MOV      R0,R7
   \   0000002C   0x.... 0x....      BL       u8g_WriteByte
    144          	u8g_WriteByte(u8g, dev, 55 );      /* parameter command */
   \   00000030   0x2237             MOVS     R2,#+55
   \   00000032   0x4641             MOV      R1,R8
   \   00000034   0x4638             MOV      R0,R7
   \   00000036   0x.... 0x....      BL       u8g_WriteByte
    145          	u8g_WriteByte(u8g, dev, 7);      /* Max printing dots,Unit(8dots),Default:7(64 dots) 8*(x+1)*/
   \   0000003A   0x2207             MOVS     R2,#+7
   \   0000003C   0x4641             MOV      R1,R8
   \   0000003E   0x4638             MOV      R0,R7
   \   00000040   0x.... 0x....      BL       u8g_WriteByte
    146          	u8g_WriteByte(u8g, dev, 160);      /* 3-255 Heating time,Unit(10us),Default:80(800us) */
   \   00000044   0x22A0             MOVS     R2,#+160
   \   00000046   0x4641             MOV      R1,R8
   \   00000048   0x4638             MOV      R0,R7
   \   0000004A   0x.... 0x....      BL       u8g_WriteByte
    147          	u8g_WriteByte(u8g, dev, 20);      /* 0-255 Heating interval,Unit(10us),Default:2(20us)*/
   \   0000004E   0x2214             MOVS     R2,#+20
   \   00000050   0x4641             MOV      R1,R8
   \   00000052   0x4638             MOV      R0,R7
   \   00000054   0x.... 0x....      BL       u8g_WriteByte
    148          	
    149          	u8g_WriteByte(u8g, dev, 18);      /* DC2 */
   \   00000058   0x2212             MOVS     R2,#+18
   \   0000005A   0x4641             MOV      R1,R8
   \   0000005C   0x4638             MOV      R0,R7
   \   0000005E   0x.... 0x....      BL       u8g_WriteByte
    150          	u8g_WriteByte(u8g, dev, 42 );      /* *  */
   \   00000062   0x222A             MOVS     R2,#+42
   \   00000064   0x4641             MOV      R1,R8
   \   00000066   0x4638             MOV      R0,R7
   \   00000068   0x.... 0x....      BL       u8g_WriteByte
    151          	u8g_WriteByte(u8g, dev, pb->p.page_height*2 ); 
   \   0000006C   0xF899 0x2000      LDRB     R2,[R9, #+0]
   \   00000070   0x0052             LSLS     R2,R2,#+1
   \   00000072   0xB2D2             UXTB     R2,R2
   \   00000074   0x4641             MOV      R1,R8
   \   00000076   0x4638             MOV      R0,R7
   \   00000078   0x.... 0x....      BL       u8g_WriteByte
    152          	u8g_WriteByte(u8g, dev, pb->width/8*2 ); 
   \   0000007C   0xF899 0x2005      LDRB     R2,[R9, #+5]
   \   00000080   0x08D2             LSRS     R2,R2,#+3
   \   00000082   0x0052             LSLS     R2,R2,#+1
   \   00000084   0x4641             MOV      R1,R8
   \   00000086   0x4638             MOV      R0,R7
   \   00000088   0x.... 0x....      BL       u8g_WriteByte
    153          	
    154                  for( i = 0; i < pb->p.page_height; i ++ )
   \   0000008C   0x2600             MOVS     R6,#+0
   \   0000008E   0xE025             B.N      ??u8g_dev_a2_micro_printer_double_fn_3
    155                  {
    156          	  p2 = ptr;
    157          	  for( j = 0; j < pb->width/8; j++ )
    158          	  {
    159          	    u8g_WriteByte(u8g, dev, u8g_dev_expand4(*p2 >> 4));
    160          	    u8g_WriteByte(u8g, dev, u8g_dev_expand4(*p2 & 15));
    161          	    p2++;
    162          	  }
    163          	  u8g_Delay(LINE_DELAY);
    164          	  p2 = ptr;
    165          	  for( j = 0; j < pb->width/8; j++ )
    166          	  {
    167          	    u8g_WriteByte(u8g, dev, u8g_dev_expand4(*p2 >> 4));
   \                     ??u8g_dev_a2_micro_printer_double_fn_4: (+1)
   \   00000090   0xF89A 0x0000      LDRB     R0,[R10, #+0]
   \   00000094   0x0900             LSRS     R0,R0,#+4
   \   00000096   0x.... 0x....      BL       u8g_dev_expand4
   \   0000009A   0x4602             MOV      R2,R0
   \   0000009C   0x4641             MOV      R1,R8
   \   0000009E   0x4638             MOV      R0,R7
   \   000000A0   0x.... 0x....      BL       u8g_WriteByte
    168          	    u8g_WriteByte(u8g, dev, u8g_dev_expand4(*p2 & 15));
   \   000000A4   0xF81A 0x0B01      LDRB     R0,[R10], #+1
   \   000000A8   0xF000 0x000F      AND      R0,R0,#0xF
   \   000000AC   0x.... 0x....      BL       u8g_dev_expand4
   \   000000B0   0x4602             MOV      R2,R0
   \   000000B2   0x4641             MOV      R1,R8
   \   000000B4   0x4638             MOV      R0,R7
   \   000000B6   0x.... 0x....      BL       u8g_WriteByte
    169          	    p2++;
    170          	  }
   \   000000BA   0xF10B 0x0B01      ADD      R11,R11,#+1
   \                     ??u8g_dev_a2_micro_printer_double_fn_5: (+1)
   \   000000BE   0x4658             MOV      R0,R11
   \   000000C0   0xF899 0x1005      LDRB     R1,[R9, #+5]
   \   000000C4   0xB2C0             UXTB     R0,R0
   \   000000C6   0xEBB0 0x0FD1      CMP      R0,R1, LSR #+3
   \   000000CA   0xD3E1             BCC.N    ??u8g_dev_a2_micro_printer_double_fn_4
    171          	  u8g_Delay(LINE_DELAY);
   \   000000CC   0x2028             MOVS     R0,#+40
   \   000000CE   0x.... 0x....      BL       u8g_Delay
    172          	  ptr += pb->width/8;
   \   000000D2   0xF899 0x0005      LDRB     R0,[R9, #+5]
   \   000000D6   0xEB05 0x05E0      ADD      R5,R5,R0, ASR #+3
    173                    y++;
   \   000000DA   0x1C76             ADDS     R6,R6,#+1
   \                     ??u8g_dev_a2_micro_printer_double_fn_3: (+1)
   \   000000DC   0x4630             MOV      R0,R6
   \   000000DE   0xF899 0x1000      LDRB     R1,[R9, #+0]
   \   000000E2   0xB2C0             UXTB     R0,R0
   \   000000E4   0x4288             CMP      R0,R1
   \   000000E6   0xD228             BCS.N    ??u8g_dev_a2_micro_printer_double_fn_6
   \   000000E8   0x46AA             MOV      R10,R5
   \   000000EA   0xF04F 0x0B00      MOV      R11,#+0
   \   000000EE   0xE016             B.N      ??u8g_dev_a2_micro_printer_double_fn_7
   \                     ??u8g_dev_a2_micro_printer_double_fn_8: (+1)
   \   000000F0   0xF89A 0x0000      LDRB     R0,[R10, #+0]
   \   000000F4   0x0900             LSRS     R0,R0,#+4
   \   000000F6   0x.... 0x....      BL       u8g_dev_expand4
   \   000000FA   0x4602             MOV      R2,R0
   \   000000FC   0x4641             MOV      R1,R8
   \   000000FE   0x4638             MOV      R0,R7
   \   00000100   0x.... 0x....      BL       u8g_WriteByte
   \   00000104   0xF81A 0x0B01      LDRB     R0,[R10], #+1
   \   00000108   0xF000 0x000F      AND      R0,R0,#0xF
   \   0000010C   0x.... 0x....      BL       u8g_dev_expand4
   \   00000110   0x4602             MOV      R2,R0
   \   00000112   0x4641             MOV      R1,R8
   \   00000114   0x4638             MOV      R0,R7
   \   00000116   0x.... 0x....      BL       u8g_WriteByte
   \   0000011A   0xF10B 0x0B01      ADD      R11,R11,#+1
   \                     ??u8g_dev_a2_micro_printer_double_fn_7: (+1)
   \   0000011E   0x4658             MOV      R0,R11
   \   00000120   0xF899 0x1005      LDRB     R1,[R9, #+5]
   \   00000124   0xB2C0             UXTB     R0,R0
   \   00000126   0xEBB0 0x0FD1      CMP      R0,R1, LSR #+3
   \   0000012A   0xD3E1             BCC.N    ??u8g_dev_a2_micro_printer_double_fn_8
   \   0000012C   0x2028             MOVS     R0,#+40
   \   0000012E   0x.... 0x....      BL       u8g_Delay
   \   00000132   0x46AA             MOV      R10,R5
   \   00000134   0xF04F 0x0B00      MOV      R11,#+0
   \   00000138   0xE7C1             B.N      ??u8g_dev_a2_micro_printer_double_fn_5
    174                  }
    175          	
    176          	/* set parameters back to their default values */
    177          	u8g_WriteByte(u8g, dev, 27);      /* ESC */
   \                     ??u8g_dev_a2_micro_printer_double_fn_6: (+1)
   \   0000013A   0x221B             MOVS     R2,#+27
   \   0000013C   0x4641             MOV      R1,R8
   \   0000013E   0x4638             MOV      R0,R7
   \   00000140   0x.... 0x....      BL       u8g_WriteByte
    178          	u8g_WriteByte(u8g, dev, 55 );      /* parameter command */
   \   00000144   0x2237             MOVS     R2,#+55
   \   00000146   0x4641             MOV      R1,R8
   \   00000148   0x4638             MOV      R0,R7
   \   0000014A   0x.... 0x....      BL       u8g_WriteByte
    179          	u8g_WriteByte(u8g, dev, 7);      /* Max printing dots,Unit(8dots),Default:7(64 dots) 8*(x+1)*/
   \   0000014E   0x2207             MOVS     R2,#+7
   \   00000150   0x4641             MOV      R1,R8
   \   00000152   0x4638             MOV      R0,R7
   \   00000154   0x.... 0x....      BL       u8g_WriteByte
    180          	u8g_WriteByte(u8g, dev, 80);      /* 3-255 Heating time,Unit(10us),Default:80(800us) */
   \   00000158   0x2250             MOVS     R2,#+80
   \   0000015A   0x4641             MOV      R1,R8
   \   0000015C   0x4638             MOV      R0,R7
   \   0000015E   0x.... 0x....      BL       u8g_WriteByte
    181          	u8g_WriteByte(u8g, dev, 2);      /* 0-255 Heating interval,Unit(10us),Default:2(20us)*/
   \   00000162   0x2202             MOVS     R2,#+2
   \   00000164   0x4641             MOV      R1,R8
   \   00000166   0x4638             MOV      R0,R7
   \   00000168   0x.... 0x....      BL       u8g_WriteByte
    182          	
    183                }
    184                break;
   \                     ??u8g_dev_a2_micro_printer_double_fn_2: (+1)
   \   0000016C   0x4623             MOV      R3,R4
    185            }
    186            return u8g_dev_pb8h1_base_fn(u8g, dev, msg, arg);
   \   0000016E   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   00000172   0x4641             MOV      R1,R8
   \   00000174   0x4638             MOV      R0,R7
   \   00000176   0xB001             ADD      SP,SP,#+4
   \   00000178   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   0000017C   0x.... 0x....      B.W      u8g_dev_pb8h1_base_fn
    187          }
    188          
    189          #if defined(U8G_16BIT)
    190          U8G_PB_DEV(u8g_dev_a2_micro_printer_384x240, 384, 240, 8, u8g_dev_a2_micro_printer_fn, u8g_com_null_fn);
    191          U8G_PB_DEV(u8g_dev_a2_micro_printer_192x360_ds, 192, 360, 8, u8g_dev_a2_micro_printer_double_fn, u8g_com_null_fn);
    192          U8G_PB_DEV(u8g_dev_a2_micro_printer_192x720_ds, 192, 720, 8, u8g_dev_a2_micro_printer_double_fn, u8g_com_null_fn);
    193          #else

   \                                 In section .bss, align 4
    194          U8G_PB_DEV(u8g_dev_a2_micro_printer_384x240, 240, 240, 8, u8g_dev_a2_micro_printer_fn, u8g_com_null_fn);
   \                     u8g_dev_a2_micro_printer_384x240_buf:
   \   00000000                      DS8 240

   \                                 In section .data, align 4
   \   __absolute u8g_pb_t u8g_dev_a2_micro_printer_384x240_pb
   \                     u8g_dev_a2_micro_printer_384x240_pb:
   \   00000000   0x08 0xF0          DC8 8, 240, 0, 0, 0, 240, 0, 0
   \              0x00 0x00    
   \              0x00 0xF0    
   \              0x00 0x00    
   \   00000008   0x........         DC32 u8g_dev_a2_micro_printer_384x240_buf

   \                                 In section .data, align 4
   \   __absolute u8g_dev_t u8g_dev_a2_micro_printer_384x240
   \                     u8g_dev_a2_micro_printer_384x240:
   \   00000000   0x........         DC32 u8g_dev_a2_micro_printer_fn, u8g_dev_a2_micro_printer_384x240_pb
   \              0x........   
   \   00000008   0x........         DC32 u8g_com_null_fn

   \                                 In section .bss, align 4
    195          U8G_PB_DEV(u8g_dev_a2_micro_printer_192x360_ds, 192, 240, 8, u8g_dev_a2_micro_printer_double_fn, u8g_com_null_fn);
   \                     u8g_dev_a2_micro_printer_192x360_ds_buf:
   \   00000000                      DS8 192

   \                                 In section .data, align 4
   \   __absolute u8g_pb_t u8g_dev_a2_micro_printer_192x360_ds_pb
   \                     u8g_dev_a2_micro_printer_192x360_ds_pb:
   \   00000000   0x08 0xF0          DC8 8, 240, 0, 0, 0, 192, 0, 0
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x00 0x00    
   \   00000008   0x........         DC32 u8g_dev_a2_micro_printer_192x360_ds_buf

   \                                 In section .data, align 4
   \   __absolute u8g_dev_t u8g_dev_a2_micro_printer_192x360_ds
   \                     u8g_dev_a2_micro_printer_192x360_ds:
   \   00000000   0x........         DC32 u8g_dev_a2_micro_printer_double_fn
   \   00000004   0x........         DC32 u8g_dev_a2_micro_printer_192x360_ds_pb, u8g_com_null_fn
   \              0x........   

   \                                 In section .bss, align 4
    196          U8G_PB_DEV(u8g_dev_a2_micro_printer_192x720_ds, 192, 240, 8, u8g_dev_a2_micro_printer_double_fn, u8g_com_null_fn);
   \                     u8g_dev_a2_micro_printer_192x720_ds_buf:
   \   00000000                      DS8 192

   \                                 In section .data, align 4
   \   __absolute u8g_pb_t u8g_dev_a2_micro_printer_192x720_ds_pb
   \                     u8g_dev_a2_micro_printer_192x720_ds_pb:
   \   00000000   0x08 0xF0          DC8 8, 240, 0, 0, 0, 192, 0, 0
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x00 0x00    
   \   00000008   0x........         DC32 u8g_dev_a2_micro_printer_192x720_ds_buf

   \                                 In section .data, align 4
   \   __absolute u8g_dev_t u8g_dev_a2_micro_printer_192x720_ds
   \                     u8g_dev_a2_micro_printer_192x720_ds:
   \   00000000   0x........         DC32 u8g_dev_a2_micro_printer_double_fn
   \   00000004   0x........         DC32 u8g_dev_a2_micro_printer_192x720_ds_pb, u8g_com_null_fn
   \              0x........   
    197          #endif
    198          

   \                                 In section .bss, align 4
    199          U8G_PB_DEV(u8g_dev_a2_micro_printer_192x120_ds, 192, 120, 8, u8g_dev_a2_micro_printer_double_fn, u8g_com_null_fn);
   \                     u8g_dev_a2_micro_printer_192x120_ds_buf:
   \   00000000                      DS8 192

   \                                 In section .data, align 4
   \   __absolute u8g_pb_t u8g_dev_a2_micro_printer_192x120_ds_pb
   \                     u8g_dev_a2_micro_printer_192x120_ds_pb:
   \   00000000   0x08 0x78          DC8 8, 120, 0, 0, 0, 192, 0, 0
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x00 0x00    
   \   00000008   0x........         DC32 u8g_dev_a2_micro_printer_192x120_ds_buf

   \                                 In section .data, align 4
   \   __absolute u8g_dev_t u8g_dev_a2_micro_printer_192x120_ds
   \                     u8g_dev_a2_micro_printer_192x120_ds:
   \   00000000   0x........         DC32 u8g_dev_a2_micro_printer_double_fn
   \   00000004   0x........         DC32 u8g_dev_a2_micro_printer_192x120_ds_pb, u8g_com_null_fn
   \              0x........   

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   u8g_dev_a2_micro_printer_double_fn
        40   -> u8g_Delay
        40   -> u8g_InitCom
        40   -> u8g_WriteByte
        40   -> u8g_dev_expand4
         0   -> u8g_dev_pb8h1_base_fn
      40   u8g_dev_a2_micro_printer_fn
        40   -> u8g_Delay
        40   -> u8g_InitCom
        40   -> u8g_WriteByte
         0   -> u8g_dev_pb8h1_base_fn
       0   u8g_dev_expand4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  u8g_dev_a2_micro_printer_192x120_ds
     192  u8g_dev_a2_micro_printer_192x120_ds_buf
      12  u8g_dev_a2_micro_printer_192x120_ds_pb
      12  u8g_dev_a2_micro_printer_192x360_ds
     192  u8g_dev_a2_micro_printer_192x360_ds_buf
      12  u8g_dev_a2_micro_printer_192x360_ds_pb
      12  u8g_dev_a2_micro_printer_192x720_ds
     192  u8g_dev_a2_micro_printer_192x720_ds_buf
      12  u8g_dev_a2_micro_printer_192x720_ds_pb
      12  u8g_dev_a2_micro_printer_384x240
     240  u8g_dev_a2_micro_printer_384x240_buf
      12  u8g_dev_a2_micro_printer_384x240_pb
     384  u8g_dev_a2_micro_printer_double_fn
     264  u8g_dev_a2_micro_printer_fn
      34  u8g_dev_expand4

 
 816 bytes in section .bss
  96 bytes in section .data
 682 bytes in section .text
 
 682 bytes of CODE memory
 912 bytes of DATA memory

Errors: none
Warnings: none
