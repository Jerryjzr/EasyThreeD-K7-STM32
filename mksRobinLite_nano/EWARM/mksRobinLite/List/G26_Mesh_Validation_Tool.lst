###############################################################################
#
# IAR ANSI C/C++ Compiler V8.30.1.114/W32 for ARM         07/May/2021  14:21:29
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\G26_Mesh_Validation_Tool.cpp
#    Command line =  
#        -f C:\Users\PLT\AppData\Local\Temp\EWE5CC.tmp
#        (C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\G26_Mesh_Validation_Tool.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D MKS_ROBIN -D MARLIN -D __arm__ -D
#        USE_MKS_WIFI --preprocess=s
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List -lC
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List -lA
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List
#        --diag_suppress Pa050 -o
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\Obj
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.1\arm\inc\c\DLib_Config_Full.h" -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Inc\ -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Src\ -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/Inc\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/CMSIS/Include\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/STM32MKS-3dPrinter\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/Common\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/l6474\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/MotorControl\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/u8glib_arm_v1.17/src\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/arduino\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/arduino/avr\
#        -I C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Inc/Logo\ -Om --c++
#        --no_exceptions --no_rtti -I "D:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.1\arm\CMSIS\Core\Include\" -I "D:\Program
#        Files (x86)\IAR Systems\Embedded Workbench
#        8.1\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List\G26_Mesh_Validation_Tool.lst
#    Object file  =  
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\Obj\G26_Mesh_Validation_Tool.o
#
###############################################################################

C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\G26_Mesh_Validation_Tool.cpp
      1          /**
      2           * Marlin 3D Printer Firmware
      3           * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
      4           *
      5           * Based on Sprinter and grbl.
      6           * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
      7           *
      8           * This program is free software: you can redistribute it and/or modify
      9           * it under the terms of the GNU General Public License as published by
     10           * the Free Software Foundation, either version 3 of the License, or
     11           * (at your option) any later version.
     12           *
     13           * This program is distributed in the hope that it will be useful,
     14           * but WITHOUT ANY WARRANTY; without even the implied warranty of
     15           * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     16           * GNU General Public License for more details.
     17           *
     18           * You should have received a copy of the GNU General Public License
     19           * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     20           *
     21           */
     22          
     23          /**
     24           * Marlin Firmware -- G26 - Mesh Validation Tool
     25           */
     26          
     27          #include "MarlinConfig.h"

    #define SDSS   18
            ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\pins_MKS_ROBIN_LITE.h",161  Warning[Pa181]: 
          incompatible redefinition of macro "SDSS" (declared at line 62)

  #define UNUSED(x) ((void)(x))
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pa181]: 
          incompatible redefinition of macro "UNUSED" (declared at line 88 of
          "C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marl
          in\macros.h")
     28          
     29          //#if ENABLED(AUTO_BED_LEVELING_UBL) && ENABLED(UBL_G26_MESH_EDITING)
     30          #if 1
     31            #include "ubl.h"

   \                                 In section .text, align 2
   \   __interwork __softfp void MarlinSerial::write(uint8_t)
   \                     _ZN12MarlinSerial5writeEh: (+1)
   \        0x0   0xB502             PUSH     {R1,LR}
   \        0x2   0x2201             MOVS     R2,#+1
   \        0x4   0x4669             MOV      R1,SP
   \        0x6   0x.... 0x....      BL       BSP_UartIfQueueTxData
   \        0xA   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void MarlinSerial::write(char const *)
   \                     _ZN12MarlinSerial5writeEPKc: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
   \        0x6   0x4628             MOV      R0,R5
   \        0x8   0x.... 0x....      BL       strlen
   \        0xC   0x4602             MOV      R2,R0
   \        0xE   0xB2D2             UXTB     R2,R2
   \       0x10   0x4629             MOV      R1,R5
   \       0x12   0x4620             MOV      R0,R4
   \       0x14   0xE8BD 0x4038      POP      {R3-R5,LR}
   \       0x18   0x.... 0x....      B.W      BSP_UartIfQueueTxData

   \                                 In section .text, align 4
   \   __interwork __softfp void MarlinSerial::print(char const *)
   \                     _ZN12MarlinSerial5printEPKc: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
   \        0x6   0x4628             MOV      R0,R5
   \        0x8   0x.... 0x....      BL       strlen
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD013             BEQ.N    ??print_1
   \       0x10   0x480A             LDR.N    R0,??print_0
   \       0x12   0x7800             LDRB     R0,[R0, #+0]
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD105             BNE.N    ??print_2
   \       0x18   0x4629             MOV      R1,R5
   \       0x1A   0x4620             MOV      R0,R4
   \       0x1C   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \       0x20   0x.... 0x....      B.W      _ZN12MarlinSerial5writeEPKc
   \                     ??print_2: (+1)
   \       0x24   0x4628             MOV      R0,R5
   \       0x26   0x.... 0x....      BL       strlen
   \       0x2A   0x4602             MOV      R2,R0
   \       0x2C   0x4629             MOV      R1,R5
   \       0x2E   0x2002             MOVS     R0,#+2
   \       0x30   0xE8BD 0x4038      POP      {R3-R5,LR}
   \       0x34   0x.... 0x....      B.W      package_to_wifi
   \                     ??print_1: (+1)
   \       0x38   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   \       0x3A   0xBF00             Nop      
   \                     ??print_0:
   \       0x3C   0x....'....        DC32     from_wifi_flag

   \                                 In section .text, align 4
   \   __interwork __softfp void serialprintPGM(char const *)
   \                     _Z14serialprintPGMPKc: (+1)
   \        0x0   0x4601             MOV      R1,R0
   \        0x2   0x4805             LDR.N    R0,??serialprintPGM_0
   \        0x4   0x7800             LDRB     R0,[R0, #+0]
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD102             BNE.N    ??serialprintPGM_1
   \        0xA   0x4804             LDR.N    R0,??serialprintPGM_0+0x4
   \        0xC   0x.... 0x....      B.W      _ZN12MarlinSerial5writeEPKc
   \                     ??serialprintPGM_1: (+1)
   \       0x10   0x4803             LDR.N    R0,??serialprintPGM_0+0x8
   \       0x12   0x.... 0x....      B.W      _ZN12MarlinSerial5printEPKc
   \       0x16   0xBF00             Nop      
   \                     ??serialprintPGM_0:
   \       0x18   0x....'....        DC32     from_wifi_flag
   \       0x1C   0x....'....        DC32     customizedSerial
   \       0x20   0x....'....        DC32     serial2

  #define PRINT_LED_PIN         PDout(2)
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Drivers\BSP\STM32MKS-3dPrinter\mks_fastio.h",14  Warning[Pa181]: 
          incompatible redefinition of macro "PRINT_LED_PIN" (declared at line
          146 of "C:\Users\PLT\Desktop\mksRobinLite_nano\Inc\main.h")

          const int8_t cx = (x - (UBL_MESH_MIN_X)) * (1.0 / (MESH_X_DIST));
                            ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\ubl.h",180  Warning[Pa093]: 
          implicit conversion from floating point to integer

          const int8_t cy = (y - (UBL_MESH_MIN_Y)) * (1.0 / (MESH_Y_DIST));
                            ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\ubl.h",187  Warning[Pa093]: 
          implicit conversion from floating point to integer

          const int8_t px = (x - (UBL_MESH_MIN_X) + (MESH_X_DIST) * 0.5) * (1.0 / (MESH_X_DIST));
                            ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\ubl.h",195  Warning[Pa093]: 
          implicit conversion from floating point to integer

          const int8_t py = (y - (UBL_MESH_MIN_Y) + (MESH_Y_DIST) * 0.5) * (1.0 / (MESH_Y_DIST));
                            ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\ubl.h",200  Warning[Pa093]: 
          implicit conversion from floating point to integer
     32            #include "Marlin.h"
     33            #include "planner.h"
     34            #include "stepper.h"
     35            #include "temperature.h"

   \                                 In section .text, align 4
   \   __interwork __softfp float Temperature::degHotend(uint8_t)
   \                     _ZN11Temperature9degHotendEh: (+1)
   \        0x0   0x4801             LDR.N    R0,??degHotend_0
   \        0x2   0x6800             LDR      R0,[R0, #+0]
   \        0x4   0x4770             BX       LR               ;; return
   \        0x6   0xBF00             Nop      
   \                     ??degHotend_0:
   \        0x8   0x....'....        DC32     _ZN11Temperature19current_temperatureE

   \                                 In section .text, align 4
   \   __interwork __softfp float Temperature::degBed()
   \                     _ZN11Temperature6degBedEv: (+1)
   \        0x0   0x4801             LDR.N    R0,??degBed_0
   \        0x2   0x6800             LDR      R0,[R0, #+0]
   \        0x4   0x4770             BX       LR               ;; return
   \        0x6   0xBF00             Nop      
   \                     ??degBed_0:
   \        0x8   0x....'....        DC32     _ZN11Temperature23current_temperature_bedE

   \                                 In section .text, align 4
   \   __interwork __softfp void Temperature::setTargetHotend(float, uint8_t)
   \                     _ZN11Temperature15setTargetHotendEfh: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}

        target_temperature[HOTEND_INDEX] = celsius;
                                         ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\temperature.h",401  Warning[Pa093]: 
          implicit conversion from floating point to integer
   \        0x2   0x.... 0x....      BL       __aeabi_f2iz
   \        0x6   0x4903             LDR.N    R1,??setTargetHotend_0
   \        0x8   0x6008             STR      R0,[R1, #+0]
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0xE8BD 0x4002      POP      {R1,LR}
   \       0x10   0x.... 0x....      B.W      _ZN11Temperature21start_watching_heaterEh
   \                     ??setTargetHotend_0:
   \       0x14   0x....'....        DC32     _ZN11Temperature18target_temperatureE

   \                                 In section .text, align 4
   \   __interwork __softfp void Temperature::setTargetBed(float)
   \                     _ZN11Temperature12setTargetBedEf: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}

        target_temperature_bed = celsius;
                               ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\temperature.h",408  Warning[Pa093]: 
          implicit conversion from floating point to integer
   \        0x2   0x.... 0x....      BL       __aeabi_f2iz
   \        0x6   0x4903             LDR.N    R1,??setTargetBed_0
   \        0x8   0x6008             STR      R0,[R1, #+0]
   \        0xA   0xE8BD 0x4001      POP      {R0,LR}
   \        0xE   0x.... 0x....      B.W      _ZN11Temperature18start_watching_bedEv
   \       0x12   0xBF00             Nop      
   \                     ??setTargetBed_0:
   \       0x14   0x....'....        DC32     _ZN11Temperature22target_temperature_bedE
     36            #include "ultralcd.h"
     37          
     38            #define EXTRUSION_MULTIPLIER 1.0
     39            #define RETRACTION_MULTIPLIER 1.0
     40            #define NOZZLE 0.4
     41            #define FILAMENT 1.75
     42            #define LAYER_HEIGHT 0.2
     43            #define PRIME_LENGTH 10.0
     44            #define BED_TEMP 60.0
     45            #define HOTEND_TEMP 205.0
     46            #define OOZE_AMOUNT 0.3
     47          
     48            #define SIZE_OF_INTERSECTION_CIRCLES 5
     49            #define SIZE_OF_CROSSHAIRS 3
     50          
     51            #if SIZE_OF_CROSSHAIRS >= SIZE_OF_INTERSECTION_CIRCLES
     52              #error "SIZE_OF_CROSSHAIRS must be less than SIZE_OF_INTERSECTION_CIRCLES."
     53            #endif
     54          
     55            /**
     56             *   G26 Mesh Validation Tool
     57             *
     58             *   G26 is a Mesh Validation Tool intended to provide support for the Marlin Unified Bed Leveling System.
     59             *   In order to fully utilize and benefit from the Marlin Unified Bed Leveling System an accurate Mesh must
     60             *   be defined.  G29 is designed to allow the user to quickly validate the correctness of her Mesh.  It will
     61             *   first heat the bed and nozzle. It will then print lines and circles along the Mesh Cell boundaries and
     62             *   the intersections of those lines (respectively).
     63             *
     64             *   This action allows the user to immediately see where the Mesh is properly defined and where it needs to
     65             *   be edited.  The command will generate the Mesh lines closest to the nozzle's starting position.  Alternatively
     66             *   the user can specify the X and Y position of interest with command parameters.  This allows the user to
     67             *   focus on a particular area of the Mesh where attention is needed.
     68             *
     69             *   B #  Bed   Set the Bed Temperature.  If not specified, a default of 60 C. will be assumed.
     70             *
     71             *   C    Current   When searching for Mesh Intersection points to draw, use the current nozzle location
     72             *        as the base for any distance comparison.
     73             *
     74             *   D    Disable   Disable the Unified Bed Leveling System.  In the normal case the user is invoking this
     75             *        command to see how well a Mesh as been adjusted to match a print surface.  In order to do
     76             *        this the Unified Bed Leveling System is turned on by the G26 command.  The D parameter
     77             *        alters the command's normal behaviour and disables the Unified Bed Leveling System even if
     78             *        it is on.
     79             *
     80             *   H #  Hotend    Set the Nozzle Temperature.  If not specified, a default of 205 C. will be assumed.
     81             *
     82             *   F #  Filament  Used to specify the diameter of the filament being used.  If not specified
     83             *        1.75mm filament is assumed.  If you are not getting acceptable results by using the
     84             *        'correct' numbers, you can scale this number up or down a little bit to change the amount
     85             *        of filament that is being extruded during the printing of the various lines on the bed.
     86             *
     87             *   K    Keep-On   Keep the heaters turned on at the end of the command.
     88             *
     89             *   L #  Layer   Layer height.  (Height of nozzle above bed)  If not specified .20mm will be used.
     90             *
     91             *   Q #  Multiplier  Retraction Multiplier.  Normally not needed.  Retraction defaults to 1.0mm and
     92             *        un-retraction is at 1.2mm   These numbers will be scaled by the specified amount
     93             *
     94             *   N #  Nozzle    Used to control the size of nozzle diameter.  If not specified, a .4mm nozzle is assumed.
     95             *        'n' can be used instead if your host program does not appreciate you using 'N'.
     96             *
     97             *   O #  Ooooze    How much your nozzle will Ooooze filament while getting in position to print.  This
     98             *        is over kill, but using this parameter will let you get the very first 'cicle' perfect
     99             *        so you have a trophy to peel off of the bed and hang up to show how perfectly you have your
    100             *        Mesh calibrated.  If not specified, a filament length of .3mm is assumed.
    101             *
    102             *   P #  Prime   Prime the nozzle with specified length of filament.  If this parameter is not
    103             *        given, no prime action will take place.  If the parameter specifies an amount, that much
    104             *        will be purged before continuing.  If no amount is specified the command will start
    105             *        purging filament until the user provides an LCD Click and then it will continue with
    106             *        printing the Mesh.  You can carefully remove the spent filament with a needle nose
    107             *        pliers while holding the LCD Click wheel in a depressed state.
    108             *
    109             *   R #  Random    Randomize the order that the circles are drawn on the bed.  The search for the closest
    110             *        undrawn cicle is still done.  But the distance to the location for each circle has a
    111             *        random number of the size specified added to it.  Specifying R50 will give an interesting
    112             *        deviation from the normal behaviour on a 10 x 10 Mesh.
    113             *
    114             *   X #  X coordinate  Specify the starting location of the drawing activity.
    115             *
    116             *   Y #  Y coordinate  Specify the starting location of the drawing activity.
    117             */
    118          
    119            // External references
    120          
    121            extern float feedrate;
    122            extern Planner planner;
    123            #if ENABLED(ULTRA_LCD)
    124              extern char lcd_status_message[];
    125            #endif
    126            extern float destination[XYZE];
    127            void set_destination_to_current();
    128            void set_current_to_destination();
    129            float code_value_float();
    130            float code_value_linear_units();
    131            float code_value_axis_units(const AxisEnum axis);
    132            bool code_value_bool();
    133            bool code_has_value();
    134            void lcd_init();
    135            void lcd_setstatuspgm(const char* const message, const uint8_t level);
    136            bool prepare_move_to_destination_cartesian();
    137            void line_to_destination();
    138            void line_to_destination(float);
    139            void sync_plan_position_e();
    140            void chirp_at_user();
    141          
    142            // Private functions
    143          
    144            void un_retract_filament(float where[XYZE]);
    145            void retract_filament(float where[XYZE]);
    146            void look_for_lines_to_connect();
    147            bool parse_G26_parameters();
    148            void move_to(const float&, const float&, const float&, const float&) ;
    149            void print_line_from_here_to_there(const float&, const float&, const float&, const float&, const float&, const float&);
    150            bool turn_on_heaters();
    151            bool prime_nozzle();
    152          
    153            //static uint16_t circle_flags[16], horizontal_mesh_line_flags[16], vertical_mesh_line_flags[16], continue_with_closest = 0;

   \                                 In section .data, align 4
    154            static unsigned int circle_flags[16], horizontal_mesh_line_flags[16], vertical_mesh_line_flags[16], continue_with_closest = 0;
    155            float g26_e_axis_feedrate = 0.020,
    156                  random_deviation = 0.0,
    157                  layer_height = LAYER_HEIGHT;
    158          
    159            static bool g26_retracted = false; // Track the retracted state of the nozzle so mismatched
   \                     g26_retracted:
   \        0x0   0x00               DC8 0
   \        0x1   0x00               DC8 0
   \        0x2   0x00               DC8 0
   \        0x3   0x00               DC8 0
   \        0x4   0x003C             DC16 60
   \        0x6   0x00CD             DC16 205
   \        0x8   0x0000'0000        DC32 0
   \                     g26_e_axis_feedrate:
   \        0xC   0x3CA3'D70A        DC32 3CA3D70AH
   \                     random_deviation:
   \       0x10   0x0000'0000        DC32 0H
   \                     layer_height:
   \       0x14   0x3E4C'CCCD        DC32 3E4CCCCDH
   \       0x18   0x3F80'0000        DC32 3F800000H
   \       0x1C   0x3F80'0000        DC32 3F800000H
   \       0x20   0x3ECC'CCCD        DC32 3ECCCCCDH
   \       0x24   0x3FE0'0000        DC32 3FE00000H
   \       0x28   0x4120'0000        DC32 41200000H
   \       0x2C   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \       0x30   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \       0x34   0x3E99'999A        DC32 3E99999AH
   \       0x38   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \       0x48   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \       0x58   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \       0x68   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \       0x78   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \       0x88   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \       0x98   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \       0xA8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \       0xB8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \       0xC8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \       0xD8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \       0xE8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    160                                               // retracts/recovers won't result in a bad state.
    161          
    162            float valid_trig_angle(float);
    163            mesh_index_pair find_closest_circle_to_print(const float&, const float&);
    164          
    165            static float extrusion_multiplier = EXTRUSION_MULTIPLIER,
    166                         retraction_multiplier = RETRACTION_MULTIPLIER,
    167                         nozzle = NOZZLE,
    168                         filament_diameter = FILAMENT,
    169                         prime_length = PRIME_LENGTH,
    170                         x_pos, y_pos,
    171                         ooze_amount = OOZE_AMOUNT;
    172          
    173            static int16_t bed_temp = BED_TEMP,
    174                           hotend_temp = HOTEND_TEMP;
    175          
    176            static int8_t prime_flag = 0;
    177          
    178            static bool keep_heaters_on = false;
    179          
    180            /**
    181             * G26: Mesh Validation Pattern generation.
    182             *
    183             * Used to interactively edit UBL's Mesh by placing the
    184             * nozzle in a problem area and doing a G29 P4 R command.
    185             */

   \                                 In section .text, align 4, keep-with-next
    186            void gcode_G26() {
   \                     _Z9gcode_G26v: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0xB0A8             SUB      SP,SP,#+160
    187              SERIAL_ECHOLNPGM("G26 command started.  Waiting for heater(s).");
   \        0x6   0x.... 0x....      ADR.W    R0,?_0
   \        0xA   0x.... 0x....      BL       _Z14serialprintPGMPKc
    188              float tmp, start_angle, end_angle;
    189              int   i, xi, yi;
    190              mesh_index_pair location;
    191          
    192              // Don't allow Mesh Validation without homing first,
    193              // or if the parameter parsing did not go OK, abort
    194              if (axis_unhomed_error(true, true, true) || parse_G26_parameters()) return;
   \        0xE   0x2201             MOVS     R2,#+1
   \       0x10   0x4611             MOV      R1,R2
   \       0x12   0x4608             MOV      R0,R1
   \       0x14   0x.... 0x....      BL       _Z18axis_unhomed_errorbbb
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xF040 0x832B      BNE.W    ??gcode_G26_1
   \       0x1E   0x.... 0x....      BL       _Z20parse_G26_parametersv
   \       0x22   0x2800             CMP      R0,#+0
   \       0x24   0xF040 0x8326      BNE.W    ??gcode_G26_1
    195          
    196              if (current_position[Z_AXIS] < Z_CLEARANCE_BETWEEN_PROBES) {
   \       0x28   0x.... 0x....      LDR.W    R0,??DataTable33
   \       0x2C   0x9002             STR      R0,[SP, #+8]
   \       0x2E   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \       0x32   0x6880             LDR      R0,[R0, #+8]
   \       0x34   0x9902             LDR      R1,[SP, #+8]
   \       0x36   0x6949             LDR      R1,[R1, #+20]
   \       0x38   0x.... 0x....      BL       __aeabi_cfcmple
   \       0x3C   0xD20A             BCS.N    ??gcode_G26_2
    197                do_blocking_move_to_z(Z_CLEARANCE_BETWEEN_PROBES);
   \       0x3E   0x2000             MOVS     R0,#+0
   \       0x40   0x9000             STR      R0,[SP, #+0]
   \       0x42   0x4669             MOV      R1,SP
   \       0x44   0x.... 0x....      LDR.W    R0,??DataTable33_2
   \       0x48   0x.... 0x....      BL       _Z21do_blocking_move_to_zRKfS0_
    198                stepper.synchronize();
   \       0x4C   0x.... 0x....      BL       _ZN7Stepper11synchronizeEv
    199                set_current_to_destination();
   \       0x50   0x.... 0x....      BL       _Z26set_current_to_destinationv
    200              }
    201          
    202              if (turn_on_heaters()) goto LEAVE;
   \                     ??gcode_G26_2: (+1)
   \       0x54   0x.... 0x....      BL       _Z15turn_on_heatersv
   \       0x58   0x2800             CMP      R0,#+0
   \       0x5A   0xF040 0x82D0      BNE.W    ??gcode_G26_3
    203          
    204              current_position[E_AXIS] = 0.0;
   \       0x5E   0x2000             MOVS     R0,#+0
   \       0x60   0x.... 0x....      LDR.W    R1,??DataTable33_1
   \       0x64   0x60C8             STR      R0,[R1, #+12]
    205              sync_plan_position_e();
   \       0x66   0x.... 0x....      BL       _Z20sync_plan_position_ev
    206          
    207              if (prime_flag && prime_nozzle()) goto LEAVE;
   \       0x6A   0x.... 0x....      LDR.W    R0,??DataTable34
   \       0x6E   0xF990 0x0001      LDRSB    R0,[R0, #+1]
   \       0x72   0x2800             CMP      R0,#+0
   \       0x74   0xD004             BEQ.N    ??gcode_G26_4
   \       0x76   0x.... 0x....      BL       _Z12prime_nozzlev
   \       0x7A   0x2800             CMP      R0,#+0
   \       0x7C   0xF040 0x82BF      BNE.W    ??gcode_G26_3
    208          
    209              /**
    210               *  Bed is preheated
    211               *
    212               *  Nozzle is at temperature
    213               *
    214               *  Filament is primed!
    215               *
    216               *  It's  "Show Time" !!!
    217               */
    218          
    219              ZERO(circle_flags);
   \                     ??gcode_G26_4: (+1)
   \       0x80   0x2200             MOVS     R2,#+0
   \       0x82   0x2140             MOVS     R1,#+64
   \       0x84   0x.... 0x....      LDR.W    R0,??DataTable34_1
   \       0x88   0x.... 0x....      BL       __aeabi_memset
    220              ZERO(horizontal_mesh_line_flags);
   \       0x8C   0x2200             MOVS     R2,#+0
   \       0x8E   0x2140             MOVS     R1,#+64
   \       0x90   0x.... 0x....      LDR.W    R0,??DataTable33_3
   \       0x94   0x.... 0x....      BL       __aeabi_memset
    221              ZERO(vertical_mesh_line_flags);
   \       0x98   0x2200             MOVS     R2,#+0
   \       0x9A   0x2140             MOVS     R1,#+64
   \       0x9C   0x.... 0x....      LDR.W    R0,??DataTable33_4
   \       0xA0   0x.... 0x....      BL       __aeabi_memset
    222          
    223              // Move nozzle to the specified height for the first layer
    224              set_destination_to_current();
   \       0xA4   0x.... 0x....      BL       _Z26set_destination_to_currentv
    225              destination[Z_AXIS] = layer_height;
   \       0xA8   0x.... 0x....      LDR.W    R4,??DataTable34_2
   \       0xAC   0x.... 0x....      LDR.W    R0,??DataTable34
   \       0xB0   0x6940             LDR      R0,[R0, #+20]
   \       0xB2   0x60A0             STR      R0,[R4, #+8]
    226              move_to(destination[X_AXIS], destination[Y_AXIS], destination[Z_AXIS], 0.0);
   \       0xB4   0x2000             MOVS     R0,#+0
   \       0xB6   0x9000             STR      R0,[SP, #+0]
   \       0xB8   0x466B             MOV      R3,SP
   \       0xBA   0xF104 0x0208      ADD      R2,R4,#+8
   \       0xBE   0x1D21             ADDS     R1,R4,#+4
   \       0xC0   0x4620             MOV      R0,R4
   \       0xC2   0x.... 0x....      BL       _Z7move_toRKfS0_S0_S0_
    227              move_to(destination[X_AXIS], destination[Y_AXIS], destination[Z_AXIS], ooze_amount);
   \       0xC6   0x.... 0x....      LDR.W    R3,??DataTable33_5
   \       0xCA   0xF104 0x0208      ADD      R2,R4,#+8
   \       0xCE   0x1D21             ADDS     R1,R4,#+4
   \       0xD0   0x4620             MOV      R0,R4
   \       0xD2   0x.... 0x....      BL       _Z7move_toRKfS0_S0_S0_
    228          
    229              ubl.has_control_of_lcd_panel = true;
   \       0xD6   0x2001             MOVS     R0,#+1
   \       0xD8   0x.... 0x....      LDR.W    R1,??DataTable34_3
   \       0xDC   0x7008             STRB     R0,[R1, #+0]
    230              //debug_current_and_destination(PSTR("Starting G26 Mesh Validation Pattern."));
    231          
    232              /**
    233               * Declare and generate a sin() & cos() table to be used during the circle drawing.  This will lighten
    234               * the CPU load and make the arc drawing faster and more smooth
    235               */
    236              float sin_table[360 / 30 + 1], cos_table[360 / 30 + 1];
    237              for (i = 0; i <= 360 / 30; i++) {
   \       0xDE   0xF04F 0x0800      MOV      R8,#+0
   \       0xE2   0x.... 0x....      LDR.W    R4,??DataTable34_4  ;; 0x54442d18
   \       0xE6   0x.... 0x....      LDR.W    R5,??DataTable34_5  ;; 0x400921fb
   \       0xEA   0x4646             MOV      R6,R8
   \       0xEC   0x.... 0x....      LDR.W    R7,??DataTable34_6  ;; 0x40140000
   \       0xF0   0xE03D             B.N      ??gcode_G26_5
    238                cos_table[i] = SIZE_OF_INTERSECTION_CIRCLES * cos(RADIANS(valid_trig_angle(i * 30.0)));
   \                     ??gcode_G26_6: (+1)
   \       0xF2   0x4640             MOV      R0,R8
   \       0xF4   0x.... 0x....      BL       __aeabi_i2d
   \       0xF8   0x4632             MOV      R2,R6
   \       0xFA   0x.... 0x....      LDR.W    R3,??DataTable34_7  ;; 0x403e0000
   \       0xFE   0x.... 0x....      BL       __aeabi_dmul
   \      0x102   0x.... 0x....      BL       __aeabi_d2f
   \      0x106   0x4681             MOV      R9,R0
   \      0x108   0x.... 0x....      BL       _Z16valid_trig_anglef
   \      0x10C   0x.... 0x....      BL       __aeabi_f2d
   \      0x110   0x4622             MOV      R2,R4
   \      0x112   0x462B             MOV      R3,R5
   \      0x114   0x.... 0x....      BL       __aeabi_dmul
   \      0x118   0x4632             MOV      R2,R6
   \      0x11A   0x.... 0x....      LDR.W    R3,??DataTable34_8  ;; 0x40668000
   \      0x11E   0x.... 0x....      BL       __aeabi_ddiv
   \      0x122   0x.... 0x....      BL       cos
   \      0x126   0x4632             MOV      R2,R6
   \      0x128   0x463B             MOV      R3,R7
   \      0x12A   0x.... 0x....      BL       __aeabi_dmul
   \      0x12E   0x.... 0x....      BL       __aeabi_d2f
   \      0x132   0xA90E             ADD      R1,SP,#+56
   \      0x134   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
    239                sin_table[i] = SIZE_OF_INTERSECTION_CIRCLES * sin(RADIANS(valid_trig_angle(i * 30.0)));
   \      0x138   0x4648             MOV      R0,R9
   \      0x13A   0x.... 0x....      BL       _Z16valid_trig_anglef
   \      0x13E   0x.... 0x....      BL       __aeabi_f2d
   \      0x142   0x4622             MOV      R2,R4
   \      0x144   0x462B             MOV      R3,R5
   \      0x146   0x.... 0x....      BL       __aeabi_dmul
   \      0x14A   0x4632             MOV      R2,R6
   \      0x14C   0x.... 0x....      LDR.W    R3,??DataTable34_8  ;; 0x40668000
   \      0x150   0x.... 0x....      BL       __aeabi_ddiv
   \      0x154   0x.... 0x....      BL       sin
   \      0x158   0x4632             MOV      R2,R6
   \      0x15A   0x463B             MOV      R3,R7
   \      0x15C   0x.... 0x....      BL       __aeabi_dmul
   \      0x160   0x.... 0x....      BL       __aeabi_d2f
   \      0x164   0xA91B             ADD      R1,SP,#+108
   \      0x166   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
    240              }
   \      0x16A   0xF108 0x0801      ADD      R8,R8,#+1
   \                     ??gcode_G26_5: (+1)
   \      0x16E   0xF1B8 0x0F0C      CMP      R8,#+12
   \      0x172   0xDDBE             BLE.N    ??gcode_G26_6
    241          
    242              do {
    243          
    244                if (ubl_lcd_clicked()) {              // Check if the user wants to stop the Mesh Validation
   \                     ??gcode_G26_7: (+1)
   \      0x174   0x.... 0x....      BL       _Z15ubl_lcd_clickedv
   \      0x178   0x2800             CMP      R0,#+0
   \      0x17A   0xD12D             BNE.N    ??gcode_G26_8
    245                  #if ENABLED(ULTRA_LCD)
    246                    lcd_setstatuspgm(PSTR("Mesh Validation Stopped."), 99);
    247                    lcd_quick_feedback();
    248                  #endif
    249                  while (!ubl_lcd_clicked()) {         // Wait until the user is done pressing the
    250                    idle();                            // Encoder Wheel if that is why we are leaving
    251                    lcd_reset_alert_level();
    252                    lcd_setstatuspgm(PSTR(""));
    253                  }
    254                  while (ubl_lcd_clicked()) {          // Wait until the user is done pressing the
    255                    idle();                            // Encoder Wheel if that is why we are leaving
    256                    lcd_setstatuspgm(PSTR("Unpress Wheel"), 99);
    257                  }
    258                  goto LEAVE;
    259                }
    260          
    261                location = continue_with_closest
    262                  ? find_closest_circle_to_print(current_position[X_AXIS], current_position[Y_AXIS])
    263                  : find_closest_circle_to_print(x_pos, y_pos); // Find the closest Mesh Intersection to where we are now.
   \      0x17C   0x.... 0x....      LDR.W    R0,??DataTable34
   \      0x180   0x6880             LDR      R0,[R0, #+8]
   \      0x182   0x2800             CMP      R0,#+0
   \      0x184   0xD04B             BEQ.N    ??gcode_G26_9
   \      0x186   0x.... 0x....      LDR.W    R1,??DataTable33_1
   \      0x18A   0x1D0A             ADDS     R2,R1,#+4
   \      0x18C   0xA808             ADD      R0,SP,#+32
   \      0x18E   0x.... 0x....      BL       _Z28find_closest_circle_to_printRKfS0_
    264          
    265                if (location.x_index >= 0 && location.y_index >= 0) {
   \                     ??gcode_G26_10: (+1)
   \      0x192   0xF99D 0x0020      LDRSB    R0,[SP, #+32]
   \      0x196   0x9006             STR      R0,[SP, #+24]
   \      0x198   0x2800             CMP      R0,#+0
   \      0x19A   0xF100 0x8228      BMI.W    ??gcode_G26_11
   \      0x19E   0xF99D 0x4021      LDRSB    R4,[SP, #+33]
   \      0x1A2   0x2C00             CMP      R4,#+0
   \      0x1A4   0xF100 0x8223      BMI.W    ??gcode_G26_11
    266                  const float circle_x = ubl.mesh_index_to_xpos[location.x_index],
   \      0x1A8   0x.... 0x....      LDR.W    R0,??DataTable34_9
   \      0x1AC   0x9906             LDR      R1,[SP, #+24]
   \      0x1AE   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \      0x1B2   0x9005             STR      R0,[SP, #+20]
    267                              circle_y = ubl.mesh_index_to_ypos[location.y_index];
   \      0x1B4   0x.... 0x....      LDR.W    R0,??DataTable34_10
   \      0x1B8   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \      0x1BC   0x9004             STR      R0,[SP, #+16]
    268          
    269                  // Let's do a couple of quick sanity checks.  We can pull this code out later if we never see it catch a problem
    270                  //#ifdef DELTA
    271          		if(MACHINETPYE == DELTA)	{
   \      0x1BE   0x9802             LDR      R0,[SP, #+8]
   \      0x1C0   0xF9B0 0x0004      LDRSH    R0,[R0, #+4]
   \      0x1C4   0x2802             CMP      R0,#+2
   \      0x1C6   0xD16E             BNE.N    ??gcode_G26_12
    272                    if (HYPOT2(circle_x, circle_y) > sq(DELTA_PRINTABLE_RADIUS)) {
   \      0x1C8   0x9802             LDR      R0,[SP, #+8]
   \      0x1CA   0xF8D0 0x8000      LDR      R8,[R0, #+0]
   \      0x1CE   0x2502             MOVS     R5,#+2
   \      0x1D0   0xF04F 0x567E      MOV      R6,#+1065353216
   \      0x1D4   0x4637             MOV      R7,R6
   \      0x1D6   0xE02F             B.N      ??gcode_G26_13
   \                     ??gcode_G26_8: (+1)
   \      0x1D8   0x2163             MOVS     R1,#+99
   \      0x1DA   0x.... 0x....      ADR.W    R0,?_1
   \      0x1DE   0x.... 0x....      BL       _Z16lcd_setstatuspgmPKch
   \      0x1E2   0x.... 0x....      BL       _Z18lcd_quick_feedbackv
   \      0x1E6   0xE008             B.N      ??gcode_G26_14
   \                     ??gcode_G26_15: (+1)
   \      0x1E8   0x2000             MOVS     R0,#+0
   \      0x1EA   0x.... 0x....      BL       _Z4idleb
   \      0x1EE   0x.... 0x....      BL       _Z21lcd_reset_alert_levelv
   \      0x1F2   0x2100             MOVS     R1,#+0
   \      0x1F4   0xA0C1             ADR.N    R0,??gcode_G26_0  ;; ""
   \      0x1F6   0x.... 0x....      BL       _Z16lcd_setstatuspgmPKch
   \                     ??gcode_G26_14: (+1)
   \      0x1FA   0x.... 0x....      BL       _Z15ubl_lcd_clickedv
   \      0x1FE   0x2800             CMP      R0,#+0
   \      0x200   0xD0F2             BEQ.N    ??gcode_G26_15
   \                     ??gcode_G26_16: (+1)
   \      0x202   0x.... 0x....      BL       _Z15ubl_lcd_clickedv
   \      0x206   0x2800             CMP      R0,#+0
   \      0x208   0xF000 0x81F9      BEQ.W    ??gcode_G26_3
   \      0x20C   0x2000             MOVS     R0,#+0
   \      0x20E   0x.... 0x....      BL       _Z4idleb
   \      0x212   0x2163             MOVS     R1,#+99
   \      0x214   0x.... 0x....      ADR.W    R0,?_3
   \      0x218   0x.... 0x....      BL       _Z16lcd_setstatuspgmPKch
   \      0x21C   0xE7F1             B.N      ??gcode_G26_16
   \                     ??gcode_G26_9: (+1)
   \      0x21E   0x.... 0x....      LDR.W    R2,??DataTable34_11
   \      0x222   0x.... 0x....      LDR.W    R1,??DataTable34_12
   \      0x226   0xA808             ADD      R0,SP,#+32
   \      0x228   0x.... 0x....      BL       _Z28find_closest_circle_to_printRKfS0_
   \      0x22C   0xE7B1             B.N      ??gcode_G26_10
   \                     ??gcode_G26_17: (+1)
   \      0x22E   0x4640             MOV      R0,R8
   \      0x230   0x4641             MOV      R1,R8
   \      0x232   0x.... 0x....      BL       __aeabi_fmul
   \      0x236   0x4680             MOV      R8,R0
   \                     ??gcode_G26_13: (+1)
   \      0x238   0x07E8             LSLS     R0,R5,#+31
   \      0x23A   0xD504             BPL.N    ??gcode_G26_18
   \      0x23C   0x4638             MOV      R0,R7
   \      0x23E   0x4641             MOV      R1,R8
   \      0x240   0x.... 0x....      BL       __aeabi_fmul
   \      0x244   0x4607             MOV      R7,R0
   \                     ??gcode_G26_18: (+1)
   \      0x246   0x086D             LSRS     R5,R5,#+1
   \      0x248   0xD1F1             BNE.N    ??gcode_G26_17
   \      0x24A   0xF8DD 0x9014      LDR      R9,[SP, #+20]
   \      0x24E   0x2502             MOVS     R5,#+2
   \      0x250   0x46B0             MOV      R8,R6
   \      0x252   0xE004             B.N      ??gcode_G26_19
   \                     ??gcode_G26_20: (+1)
   \      0x254   0x4648             MOV      R0,R9
   \      0x256   0x4649             MOV      R1,R9
   \      0x258   0x.... 0x....      BL       __aeabi_fmul
   \      0x25C   0x4681             MOV      R9,R0
   \                     ??gcode_G26_19: (+1)
   \      0x25E   0x07E8             LSLS     R0,R5,#+31
   \      0x260   0xD504             BPL.N    ??gcode_G26_21
   \      0x262   0x4640             MOV      R0,R8
   \      0x264   0x4649             MOV      R1,R9
   \      0x266   0x.... 0x....      BL       __aeabi_fmul
   \      0x26A   0x4680             MOV      R8,R0
   \                     ??gcode_G26_21: (+1)
   \      0x26C   0x086D             LSRS     R5,R5,#+1
   \      0x26E   0xD1F1             BNE.N    ??gcode_G26_20
   \      0x270   0xF8DD 0x9010      LDR      R9,[SP, #+16]
   \      0x274   0x2502             MOVS     R5,#+2
   \      0x276   0xE004             B.N      ??gcode_G26_22
   \                     ??gcode_G26_23: (+1)
   \      0x278   0x4648             MOV      R0,R9
   \      0x27A   0x4649             MOV      R1,R9
   \      0x27C   0x.... 0x....      BL       __aeabi_fmul
   \      0x280   0x4681             MOV      R9,R0
   \                     ??gcode_G26_22: (+1)
   \      0x282   0x07E8             LSLS     R0,R5,#+31
   \      0x284   0xD504             BPL.N    ??gcode_G26_24
   \      0x286   0x4630             MOV      R0,R6
   \      0x288   0x4649             MOV      R1,R9
   \      0x28A   0x.... 0x....      BL       __aeabi_fmul
   \      0x28E   0x4606             MOV      R6,R0
   \                     ??gcode_G26_24: (+1)
   \      0x290   0x086D             LSRS     R5,R5,#+1
   \      0x292   0xD1F1             BNE.N    ??gcode_G26_23
   \      0x294   0x4640             MOV      R0,R8
   \      0x296   0x4631             MOV      R1,R6
   \      0x298   0x.... 0x....      BL       __aeabi_fadd
   \      0x29C   0x4601             MOV      R1,R0
   \      0x29E   0x4638             MOV      R0,R7
   \      0x2A0   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x2A4   0xD34D             BCC.N    ??gcode_G26_25
    273                      SERIAL_ERROR_START;
    274                      SERIAL_ERRORLNPGM("Attempt to print outside of DELTA_PRINTABLE_RADIUS.");
    275                      goto LEAVE;
    276                    }		}
    277                 // #endif
    278          
    279                  // TODO: Change this to use `position_is_reachable`
    280                  if (!WITHIN(circle_x, X_MIN_POS, X_MAX_POS) || !WITHIN(circle_y, Y_MIN_POS, Y_MAX_POS)) {
   \                     ??gcode_G26_12: (+1)
   \      0x2A6   0x9805             LDR      R0,[SP, #+20]
   \      0x2A8   0x.... 0x....      LDR.W    R1,??DataTable37
   \      0x2AC   0x6889             LDR      R1,[R1, #+8]
   \      0x2AE   0x.... 0x....      BL       __aeabi_cfrcmple
   \      0x2B2   0xD84F             BHI.N    ??gcode_G26_26
   \      0x2B4   0x.... 0x....      LDR.W    R0,??DataTable37
   \      0x2B8   0x6940             LDR      R0,[R0, #+20]
   \      0x2BA   0x9905             LDR      R1,[SP, #+20]
   \      0x2BC   0x.... 0x....      BL       __aeabi_cfrcmple
   \      0x2C0   0xD848             BHI.N    ??gcode_G26_26
   \      0x2C2   0x9804             LDR      R0,[SP, #+16]
   \      0x2C4   0x.... 0x....      LDR.W    R1,??DataTable37
   \      0x2C8   0x68C9             LDR      R1,[R1, #+12]
   \      0x2CA   0x.... 0x....      BL       __aeabi_cfrcmple
   \      0x2CE   0xD841             BHI.N    ??gcode_G26_26
   \      0x2D0   0x.... 0x....      LDR.W    R0,??DataTable37
   \      0x2D4   0x6980             LDR      R0,[R0, #+24]
   \      0x2D6   0x9904             LDR      R1,[SP, #+16]
   \      0x2D8   0x.... 0x....      BL       __aeabi_cfrcmple
   \      0x2DC   0xD83A             BHI.N    ??gcode_G26_26
    281                    SERIAL_ERROR_START;
    282                    SERIAL_ERRORLNPGM("Attempt to print off the bed.");
    283                    goto LEAVE;
    284                  }
    285          
    286                  xi = location.x_index;  // Just to shrink the next few lines and make them easier to understand
   \      0x2DE   0x9D06             LDR      R5,[SP, #+24]
    287                  yi = location.y_index;
    288          
    289                  if (ubl.g26_debug_flag) {
   \      0x2E0   0x.... 0x....      LDR.W    R0,??DataTable37_1
   \      0x2E4   0x7800             LDRB     R0,[R0, #+0]
   \      0x2E6   0x2800             CMP      R0,#+0
   \      0x2E8   0xD01B             BEQ.N    ??gcode_G26_27
    290                    SERIAL_ECHOPAIR("   Doing circle at: (xi=", xi);
   \      0x2EA   0x4629             MOV      R1,R5
   \      0x2EC   0x.... 0x....      ADR.W    R0,?_6
   \      0x2F0   0x.... 0x....      BL       _Z17serial_echopair_PPKci
    291                    SERIAL_ECHOPAIR(", yi=", yi);
   \      0x2F4   0x4621             MOV      R1,R4
   \      0x2F6   0x.... 0x....      ADR.W    R0,?_7
   \      0x2FA   0x.... 0x....      BL       _Z17serial_echopair_PPKci
    292                    SERIAL_CHAR(')');
   \      0x2FE   0x.... 0x....      LDR.W    R6,??DataTable37_2
   \      0x302   0x7830             LDRB     R0,[R6, #+0]
   \      0x304   0x2800             CMP      R0,#+0
   \      0x306   0xD12E             BNE.N    ??gcode_G26_28
   \      0x308   0x2129             MOVS     R1,#+41
   \      0x30A   0x.... 0x....      LDR.W    R0,??DataTable37_3
   \      0x30E   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
    293                    SERIAL_EOL;
   \                     ??gcode_G26_29: (+1)
   \      0x312   0x7830             LDRB     R0,[R6, #+0]
   \      0x314   0x2800             CMP      R0,#+0
   \      0x316   0xD12D             BNE.N    ??gcode_G26_30
   \      0x318   0x210A             MOVS     R1,#+10
   \      0x31A   0x.... 0x....      LDR.W    R0,??DataTable37_3
   \      0x31E   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
    294                  }
    295          
    296                  start_angle = 0.0;    // assume it is going to be a full circle
   \                     ??gcode_G26_27: (+1)
   \      0x322   0x2000             MOVS     R0,#+0
    297                  end_angle   = 360.0;
   \      0x324   0x.... 0x....      LDR.W    R1,??DataTable37_4  ;; 0x43b40000
   \      0x328   0x9103             STR      R1,[SP, #+12]
    298                  if (xi == 0) {       // Check for bottom edge
   \      0x32A   0x2D00             CMP      R5,#+0
   \      0x32C   0xD131             BNE.N    ??gcode_G26_31
    299                    start_angle = -90.0;
   \      0x32E   0x.... 0x....      LDR.W    R0,??DataTable37_5  ;; 0xc2b40000
    300                    end_angle   =  90.0;
   \      0x332   0x.... 0x....      LDR.W    R1,??DataTable37_6  ;; 0x42b40000
   \      0x336   0x9103             STR      R1,[SP, #+12]
    301                    if (yi == 0)        // it is an edge, check for the two left corners
   \      0x338   0x2C00             CMP      R4,#+0
   \      0x33A   0xD122             BNE.N    ??gcode_G26_32
    302                      start_angle = 0.0;
   \      0x33C   0x2000             MOVS     R0,#+0
    303                    else if (yi == GRID_MAX_POINTS_Y - 1)
    304                      end_angle = 0.0;
    305                  }
    306                  else if (xi == GRID_MAX_POINTS_X - 1) { // Check for top edge
    307                    start_angle =  90.0;
    308                    end_angle   = 270.0;
    309                    if (yi == 0)                  // it is an edge, check for the two right corners
    310                      end_angle = 180.0;
    311                    else if (yi == GRID_MAX_POINTS_Y - 1)
    312                      start_angle = 180.0;
    313                  }
    314                  else if (yi == 0) {
    315                    start_angle =   0.0;         // only do the top   side of the cirlce
    316                    end_angle   = 180.0;
    317                  }
    318                  else if (yi == GRID_MAX_POINTS_Y - 1) {
    319                    start_angle = 180.0;         // only do the bottom side of the cirlce
    320                    end_angle   = 360.0;
    321                  }
    322          
    323                  for (tmp = start_angle; tmp < end_angle - 0.1; tmp += 30.0) {
   \                     ??gcode_G26_33: (+1)
   \      0x33E   0x9007             STR      R0,[SP, #+28]
   \      0x340   0xE090             B.N      ??gcode_G26_34
   \                     ??gcode_G26_25: (+1)
   \      0x342   0x.... 0x....      LDR.W    R0,??DataTable37_7
   \      0x346   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \      0x34A   0x.... 0x....      ADR.W    R0,?_4
   \      0x34E   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \      0x352   0xE154             B.N      ??gcode_G26_3
   \                     ??gcode_G26_26: (+1)
   \      0x354   0x.... 0x....      LDR.W    R0,??DataTable37_7
   \      0x358   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \      0x35C   0x.... 0x....      ADR.W    R0,?_5
   \      0x360   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \      0x364   0xE14B             B.N      ??gcode_G26_3
   \                     ??gcode_G26_28: (+1)
   \      0x366   0x2200             MOVS     R2,#+0
   \      0x368   0x2129             MOVS     R1,#+41
   \      0x36A   0x.... 0x....      LDR.W    R0,??DataTable37_8
   \      0x36E   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   \      0x372   0xE7CE             B.N      ??gcode_G26_29
   \                     ??gcode_G26_30: (+1)
   \      0x374   0x2200             MOVS     R2,#+0
   \      0x376   0x210A             MOVS     R1,#+10
   \      0x378   0x.... 0x....      LDR.W    R0,??DataTable37_8
   \      0x37C   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   \      0x380   0xE7CF             B.N      ??gcode_G26_27
   \                     ??gcode_G26_32: (+1)
   \      0x382   0x9902             LDR      R1,[SP, #+8]
   \      0x384   0x7B49             LDRB     R1,[R1, #+13]
   \      0x386   0x1E49             SUBS     R1,R1,#+1
   \      0x388   0x428C             CMP      R4,R1
   \      0x38A   0xD1D8             BNE.N    ??gcode_G26_33
   \      0x38C   0x2100             MOVS     R1,#+0
   \      0x38E   0x9103             STR      R1,[SP, #+12]
   \      0x390   0xE7D5             B.N      ??gcode_G26_33
   \                     ??gcode_G26_31: (+1)
   \      0x392   0x9902             LDR      R1,[SP, #+8]
   \      0x394   0x7B09             LDRB     R1,[R1, #+12]
   \      0x396   0x1E49             SUBS     R1,R1,#+1
   \      0x398   0x428D             CMP      R5,R1
   \      0x39A   0xD10E             BNE.N    ??gcode_G26_35
   \      0x39C   0x.... 0x....      LDR.W    R0,??DataTable37_6  ;; 0x42b40000
   \      0x3A0   0x.... 0x....      LDR.W    R1,??DataTable37_9  ;; 0x43870000
   \      0x3A4   0x9103             STR      R1,[SP, #+12]
   \      0x3A6   0x2C00             CMP      R4,#+0
   \      0x3A8   0xD009             BEQ.N    ??gcode_G26_36
   \      0x3AA   0x9902             LDR      R1,[SP, #+8]
   \      0x3AC   0x7B49             LDRB     R1,[R1, #+13]
   \      0x3AE   0x1E49             SUBS     R1,R1,#+1
   \      0x3B0   0x428C             CMP      R4,R1
   \      0x3B2   0xD1C4             BNE.N    ??gcode_G26_33
   \      0x3B4   0x.... 0x....      LDR.W    R0,??DataTable37_10  ;; 0x43340000
   \      0x3B8   0xE7C1             B.N      ??gcode_G26_33
   \                     ??gcode_G26_35: (+1)
   \      0x3BA   0x2C00             CMP      R4,#+0
   \      0x3BC   0xD103             BNE.N    ??gcode_G26_37
   \                     ??gcode_G26_36: (+1)
   \      0x3BE   0x.... 0x....      LDR.W    R1,??DataTable37_10  ;; 0x43340000
   \      0x3C2   0x9103             STR      R1,[SP, #+12]
   \      0x3C4   0xE7BB             B.N      ??gcode_G26_33
   \                     ??gcode_G26_37: (+1)
   \      0x3C6   0x9902             LDR      R1,[SP, #+8]
   \      0x3C8   0x7B49             LDRB     R1,[R1, #+13]
   \      0x3CA   0x1E49             SUBS     R1,R1,#+1
   \      0x3CC   0x428C             CMP      R4,R1
   \      0x3CE   0xD1B6             BNE.N    ??gcode_G26_33
   \      0x3D0   0x.... 0x....      LDR.W    R0,??DataTable37_10  ;; 0x43340000
   \      0x3D4   0xE7B3             B.N      ??gcode_G26_33
    324                    int tmp_div_30 = tmp / 30.0;
                                            ^
Warning[Pa093]: implicit conversion from floating point to integer
    325                    if (tmp_div_30 < 0) tmp_div_30 += 360 / 30;
    326                    if (tmp_div_30 > 11) tmp_div_30 -= 360 / 30;
    327          
    328                    float x = circle_x + cos_table[tmp_div_30],    // for speed, these are now a lookup table entry
    329                          y = circle_y + sin_table[tmp_div_30],
    330                          xe = circle_x + cos_table[tmp_div_30 + 1],
    331                          ye = circle_y + sin_table[tmp_div_30 + 1];
    332                    //#ifdef DELTA
    333          		  if(MACHINETPYE == DELTA)	{
    334                      if (HYPOT2(x, y) > sq(DELTA_PRINTABLE_RADIUS))   // Check to make sure this part of
    335                        continue;       }                               // the 'circle' is on the bed.  If
    336                    //#else                                              // not, we need to skip
    337          			else 	{
    338          		  	x  = constrain(x, X_MIN_POS + 1, X_MAX_POS - 1); // This keeps us from bumping the endstops
    339                      y  = constrain(y, Y_MIN_POS + 1, Y_MAX_POS - 1);
    340                      xe = constrain(xe, X_MIN_POS + 1, X_MAX_POS - 1);
    341                      ye = constrain(ye, Y_MIN_POS + 1, Y_MAX_POS - 1);	}
   \                     ??gcode_G26_38: (+1)
   \      0x3D6   0x69A0             LDR      R0,[R4, #+24]
   \      0x3D8   0x.... 0x....      LDR.W    R1,??DataTable37_11  ;; 0xbf800000
   \      0x3DC   0x.... 0x....      BL       __aeabi_fadd
   \      0x3E0   0x4649             MOV      R1,R9
   \      0x3E2   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x3E6   0xD211             BCS.N    ??gcode_G26_39
   \      0x3E8   0x4681             MOV      R9,R0
   \      0x3EA   0xE00F             B.N      ??gcode_G26_39
   \                     ??gcode_G26_40: (+1)
   \      0x3EC   0x6960             LDR      R0,[R4, #+20]
   \      0x3EE   0x.... 0x....      LDR.W    R1,??DataTable37_11  ;; 0xbf800000
   \      0x3F2   0x.... 0x....      BL       __aeabi_fadd
   \      0x3F6   0x4641             MOV      R1,R8
   \      0x3F8   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x3FC   0xD200             BCS.N    ??gcode_G26_41
   \      0x3FE   0x4680             MOV      R8,R0
   \                     ??gcode_G26_41: (+1)
   \      0x400   0x4648             MOV      R0,R9
   \      0x402   0x4631             MOV      R1,R6
   \      0x404   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x408   0xD2E5             BCS.N    ??gcode_G26_38
   \      0x40A   0x46B1             MOV      R9,R6
    342                   // #endif
    343          
    344                    //if (ubl.g26_debug_flag) {
    345                    //  char ccc, *cptr, seg_msg[50], seg_num[10];
    346                    //  strcpy(seg_msg, "   segment: ");
    347                    //  strcpy(seg_num, "    \n");
    348                    //  cptr = (char*) "01234567890ABCDEF????????";
    349                    //  ccc = cptr[tmp_div_30];
    350                    //  seg_num[1] = ccc;
    351                    //  strcat(seg_msg, seg_num);
    352                    //  debug_current_and_destination(seg_msg);
    353                    //}
    354          
    355                    print_line_from_here_to_there(LOGICAL_X_POSITION(x), LOGICAL_Y_POSITION(y), layer_height, LOGICAL_X_POSITION(xe), LOGICAL_Y_POSITION(ye), layer_height);
   \                     ??gcode_G26_39: (+1)
   \      0x40C   0x.... 0x....      LDR.W    R4,??DataTable37_12
   \      0x410   0x6825             LDR      R5,[R4, #+0]
   \      0x412   0x4638             MOV      R0,R7
   \      0x414   0x4629             MOV      R1,R5
   \      0x416   0x.... 0x....      BL       __aeabi_fadd
   \      0x41A   0x900D             STR      R0,[SP, #+52]
   \      0x41C   0x6864             LDR      R4,[R4, #+4]
   \      0x41E   0x9800             LDR      R0,[SP, #+0]
   \      0x420   0x4621             MOV      R1,R4
   \      0x422   0x.... 0x....      BL       __aeabi_fadd
   \      0x426   0x900C             STR      R0,[SP, #+48]
   \      0x428   0x4640             MOV      R0,R8
   \      0x42A   0x4629             MOV      R1,R5
   \      0x42C   0x.... 0x....      BL       __aeabi_fadd
   \      0x430   0x900B             STR      R0,[SP, #+44]
   \      0x432   0x4648             MOV      R0,R9
   \      0x434   0x4621             MOV      R1,R4
   \      0x436   0x.... 0x....      BL       __aeabi_fadd
   \      0x43A   0x900A             STR      R0,[SP, #+40]
   \      0x43C   0x.... 0x....      LDR.W    R0,??DataTable34
   \      0x440   0xF100 0x0114      ADD      R1,R0,#+20
   \      0x444   0x9101             STR      R1,[SP, #+4]
   \      0x446   0xA90A             ADD      R1,SP,#+40
   \      0x448   0x9100             STR      R1,[SP, #+0]
   \      0x44A   0xAB0B             ADD      R3,SP,#+44
   \      0x44C   0xF100 0x0214      ADD      R2,R0,#+20
   \      0x450   0xA90C             ADD      R1,SP,#+48
   \      0x452   0xA80D             ADD      R0,SP,#+52
   \      0x454   0x.... 0x....      BL       _Z29print_line_from_here_to_thereRKfS0_S0_S0_S0_S0_
   \                     ??gcode_G26_42: (+1)
   \      0x458   0x9807             LDR      R0,[SP, #+28]
   \      0x45A   0x.... 0x....      LDR.W    R1,??DataTable37_13  ;; 0x41f00000
   \      0x45E   0x.... 0x....      BL       __aeabi_fadd
   \      0x462   0x9007             STR      R0,[SP, #+28]
   \                     ??gcode_G26_34: (+1)
   \      0x464   0x9807             LDR      R0,[SP, #+28]
   \      0x466   0x.... 0x....      BL       __aeabi_f2d
   \      0x46A   0x4604             MOV      R4,R0
   \      0x46C   0x460D             MOV      R5,R1
   \      0x46E   0x9803             LDR      R0,[SP, #+12]
   \      0x470   0x.... 0x....      BL       __aeabi_f2d
   \      0x474   0x.... 0x....      LDR.W    R2,??DataTable37_14  ;; 0x9999999a
   \      0x478   0x.... 0x....      LDR.W    R3,??DataTable37_15  ;; 0xbfb99999
   \      0x47C   0x.... 0x....      BL       __aeabi_dadd
   \      0x480   0x4602             MOV      R2,R0
   \      0x482   0x460B             MOV      R3,R1
   \      0x484   0x4620             MOV      R0,R4
   \      0x486   0x4629             MOV      R1,R5
   \      0x488   0x.... 0x....      BL       __aeabi_cdcmple
   \      0x48C   0xF080 0x80AD      BCS.W    ??gcode_G26_43
   \      0x490   0x2200             MOVS     R2,#+0
   \      0x492   0x.... 0x....      LDR.W    R3,??DataTable34_7  ;; 0x403e0000
   \      0x496   0x.... 0x....      BL       __aeabi_ddiv
   \      0x49A   0x.... 0x....      BL       __aeabi_d2iz
   \      0x49E   0x0004             MOVS     R4,R0
   \      0x4A0   0xD500             BPL.N    ??gcode_G26_44
   \      0x4A2   0x340C             ADDS     R4,R4,#+12
   \                     ??gcode_G26_44: (+1)
   \      0x4A4   0x2C0C             CMP      R4,#+12
   \      0x4A6   0xDB00             BLT.N    ??gcode_G26_45
   \      0x4A8   0x3C0C             SUBS     R4,R4,#+12
   \                     ??gcode_G26_45: (+1)
   \      0x4AA   0x9805             LDR      R0,[SP, #+20]
   \      0x4AC   0xA90E             ADD      R1,SP,#+56
   \      0x4AE   0xF851 0x1024      LDR      R1,[R1, R4, LSL #+2]
   \      0x4B2   0x.... 0x....      BL       __aeabi_fadd
   \      0x4B6   0x4607             MOV      R7,R0
   \      0x4B8   0x9804             LDR      R0,[SP, #+16]
   \      0x4BA   0xA91B             ADD      R1,SP,#+108
   \      0x4BC   0xF851 0x1024      LDR      R1,[R1, R4, LSL #+2]
   \      0x4C0   0x.... 0x....      BL       __aeabi_fadd
   \      0x4C4   0x9000             STR      R0,[SP, #+0]
   \      0x4C6   0x9805             LDR      R0,[SP, #+20]
   \      0x4C8   0xA90F             ADD      R1,SP,#+60
   \      0x4CA   0xF851 0x1024      LDR      R1,[R1, R4, LSL #+2]
   \      0x4CE   0x.... 0x....      BL       __aeabi_fadd
   \      0x4D2   0x4680             MOV      R8,R0
   \      0x4D4   0x9804             LDR      R0,[SP, #+16]
   \      0x4D6   0xA91C             ADD      R1,SP,#+112
   \      0x4D8   0xF851 0x1024      LDR      R1,[R1, R4, LSL #+2]
   \      0x4DC   0x.... 0x....      BL       __aeabi_fadd
   \      0x4E0   0x4681             MOV      R9,R0
   \      0x4E2   0x9802             LDR      R0,[SP, #+8]
   \      0x4E4   0xF9B0 0x0004      LDRSH    R0,[R0, #+4]
   \      0x4E8   0x2802             CMP      R0,#+2
   \      0x4EA   0xD146             BNE.N    ??gcode_G26_46
   \      0x4EC   0x9802             LDR      R0,[SP, #+8]
   \      0x4EE   0x6806             LDR      R6,[R0, #+0]
   \      0x4F0   0x2402             MOVS     R4,#+2
   \      0x4F2   0xF04F 0x5A7E      MOV      R10,#+1065353216
   \      0x4F6   0x4655             MOV      R5,R10
   \      0x4F8   0xE007             B.N      ??gcode_G26_47
   \      0x4FA   0xBF00             Nop      
   \                     ??gcode_G26_0:
   \      0x4FC   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    
   \                     ??gcode_G26_48: (+1)
   \      0x500   0x4630             MOV      R0,R6
   \      0x502   0x4631             MOV      R1,R6
   \      0x504   0x.... 0x....      BL       __aeabi_fmul
   \      0x508   0x4606             MOV      R6,R0
   \                     ??gcode_G26_47: (+1)
   \      0x50A   0x07E0             LSLS     R0,R4,#+31
   \      0x50C   0xD504             BPL.N    ??gcode_G26_49
   \      0x50E   0x4628             MOV      R0,R5
   \      0x510   0x4631             MOV      R1,R6
   \      0x512   0x.... 0x....      BL       __aeabi_fmul
   \      0x516   0x4605             MOV      R5,R0
   \                     ??gcode_G26_49: (+1)
   \      0x518   0x0864             LSRS     R4,R4,#+1
   \      0x51A   0xD1F1             BNE.N    ??gcode_G26_48
   \      0x51C   0x46BB             MOV      R11,R7
   \      0x51E   0x2402             MOVS     R4,#+2
   \      0x520   0x4656             MOV      R6,R10
   \      0x522   0xE004             B.N      ??gcode_G26_50
   \                     ??gcode_G26_51: (+1)
   \      0x524   0x4658             MOV      R0,R11
   \      0x526   0x4659             MOV      R1,R11
   \      0x528   0x.... 0x....      BL       __aeabi_fmul
   \      0x52C   0x4683             MOV      R11,R0
   \                     ??gcode_G26_50: (+1)
   \      0x52E   0x07E0             LSLS     R0,R4,#+31
   \      0x530   0xD504             BPL.N    ??gcode_G26_52
   \      0x532   0x4630             MOV      R0,R6
   \      0x534   0x4659             MOV      R1,R11
   \      0x536   0x.... 0x....      BL       __aeabi_fmul
   \      0x53A   0x4606             MOV      R6,R0
   \                     ??gcode_G26_52: (+1)
   \      0x53C   0x0864             LSRS     R4,R4,#+1
   \      0x53E   0xD1F1             BNE.N    ??gcode_G26_51
   \      0x540   0xF8DD 0xB000      LDR      R11,[SP, #+0]
   \      0x544   0x2402             MOVS     R4,#+2
   \      0x546   0xE004             B.N      ??gcode_G26_53
   \                     ??gcode_G26_54: (+1)
   \      0x548   0x4658             MOV      R0,R11
   \      0x54A   0x4659             MOV      R1,R11
   \      0x54C   0x.... 0x....      BL       __aeabi_fmul
   \      0x550   0x4683             MOV      R11,R0
   \                     ??gcode_G26_53: (+1)
   \      0x552   0x07E0             LSLS     R0,R4,#+31
   \      0x554   0xD504             BPL.N    ??gcode_G26_55
   \      0x556   0x4650             MOV      R0,R10
   \      0x558   0x4659             MOV      R1,R11
   \      0x55A   0x.... 0x....      BL       __aeabi_fmul
   \      0x55E   0x4682             MOV      R10,R0
   \                     ??gcode_G26_55: (+1)
   \      0x560   0x0864             LSRS     R4,R4,#+1
   \      0x562   0xD1F1             BNE.N    ??gcode_G26_54
   \      0x564   0x4630             MOV      R0,R6
   \      0x566   0x4651             MOV      R1,R10
   \      0x568   0x.... 0x....      BL       __aeabi_fadd
   \      0x56C   0x4601             MOV      R1,R0
   \      0x56E   0x4628             MOV      R0,R5
   \      0x570   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x574   0xF4BF 0xAF4A      BCS.W    ??gcode_G26_39
   \      0x578   0xE76E             B.N      ??gcode_G26_42
   \                     ??gcode_G26_46: (+1)
   \      0x57A   0x.... 0x....      LDR.W    R4,??DataTable37
   \      0x57E   0x68A0             LDR      R0,[R4, #+8]
   \      0x580   0xF04F 0x517E      MOV      R1,#+1065353216
   \      0x584   0x.... 0x....      BL       __aeabi_fadd
   \      0x588   0x4605             MOV      R5,R0
   \      0x58A   0x4638             MOV      R0,R7
   \      0x58C   0x4629             MOV      R1,R5
   \      0x58E   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x592   0xD201             BCS.N    ??gcode_G26_56
   \      0x594   0x462F             MOV      R7,R5
   \      0x596   0xE009             B.N      ??gcode_G26_57
   \                     ??gcode_G26_56: (+1)
   \      0x598   0x6960             LDR      R0,[R4, #+20]
   \      0x59A   0x.... 0x....      LDR.W    R1,??DataTable37_11  ;; 0xbf800000
   \      0x59E   0x.... 0x....      BL       __aeabi_fadd
   \      0x5A2   0x4639             MOV      R1,R7
   \      0x5A4   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x5A8   0xD200             BCS.N    ??gcode_G26_57
   \      0x5AA   0x4607             MOV      R7,R0
   \                     ??gcode_G26_57: (+1)
   \      0x5AC   0x68E0             LDR      R0,[R4, #+12]
   \      0x5AE   0xF04F 0x517E      MOV      R1,#+1065353216
   \      0x5B2   0x.... 0x....      BL       __aeabi_fadd
   \      0x5B6   0x4606             MOV      R6,R0
   \      0x5B8   0x9800             LDR      R0,[SP, #+0]
   \      0x5BA   0x4631             MOV      R1,R6
   \      0x5BC   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x5C0   0xD201             BCS.N    ??gcode_G26_58
   \      0x5C2   0x9600             STR      R6,[SP, #+0]
   \      0x5C4   0xE009             B.N      ??gcode_G26_59
   \                     ??gcode_G26_58: (+1)
   \      0x5C6   0x69A0             LDR      R0,[R4, #+24]
   \      0x5C8   0x.... 0x....      LDR.W    R1,??DataTable37_11  ;; 0xbf800000
   \      0x5CC   0x.... 0x....      BL       __aeabi_fadd
   \      0x5D0   0x9900             LDR      R1,[SP, #+0]
   \      0x5D2   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x5D6   0xD200             BCS.N    ??gcode_G26_59
   \      0x5D8   0x9000             STR      R0,[SP, #+0]
   \                     ??gcode_G26_59: (+1)
   \      0x5DA   0x4640             MOV      R0,R8
   \      0x5DC   0x4629             MOV      R1,R5
   \      0x5DE   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x5E2   0xF4BF 0xAF03      BCS.W    ??gcode_G26_40
   \      0x5E6   0x46A8             MOV      R8,R5
   \      0x5E8   0xE70A             B.N      ??gcode_G26_41
    356          
    357                  }
    358          
    359                  //debug_current_and_destination(PSTR("Looking for lines to connect."));
    360                  look_for_lines_to_connect();
   \                     ??gcode_G26_43: (+1)
   \      0x5EA   0x.... 0x....      BL       _Z25look_for_lines_to_connectv
    361                  //debug_current_and_destination(PSTR("Done with line connect."));
    362                }
    363          
    364                //debug_current_and_destination(PSTR("Done with current circle."));
    365          
    366              } while (location.x_index >= 0 && location.y_index >= 0);
   \                     ??gcode_G26_11: (+1)
   \      0x5EE   0x9806             LDR      R0,[SP, #+24]
   \      0x5F0   0x2800             CMP      R0,#+0
   \      0x5F2   0xD404             BMI.N    ??gcode_G26_3
   \      0x5F4   0xF99D 0x0021      LDRSB    R0,[SP, #+33]
   \      0x5F8   0x2800             CMP      R0,#+0
   \      0x5FA   0xF57F 0xADBB      BPL.W    ??gcode_G26_7
    367          
    368              LEAVE:
    369              lcd_reset_alert_level();
   \                     ??gcode_G26_3: (+1)
   \      0x5FE   0x.... 0x....      BL       _Z21lcd_reset_alert_levelv
    370              lcd_setstatuspgm(PSTR("Leaving G26"));
   \      0x602   0x2100             MOVS     R1,#+0
   \      0x604   0x.... 0x....      LDR.W    R0,??DataTable38
   \      0x608   0x.... 0x....      BL       _Z16lcd_setstatuspgmPKch
    371          
    372              retract_filament(destination);
   \      0x60C   0x.... 0x....      LDR.W    R4,??DataTable34_2
   \      0x610   0x4620             MOV      R0,R4
   \      0x612   0x.... 0x....      BL       _Z16retract_filamentPf
    373              destination[Z_AXIS] = Z_CLEARANCE_BETWEEN_PROBES;
   \      0x616   0x9802             LDR      R0,[SP, #+8]
   \      0x618   0x6940             LDR      R0,[R0, #+20]
   \      0x61A   0x60A0             STR      R0,[R4, #+8]
    374          
    375              //debug_current_and_destination(PSTR("ready to do Z-Raise."));
    376              move_to(destination[X_AXIS], destination[Y_AXIS], destination[Z_AXIS], 0); // Raise the nozzle
   \      0x61C   0x2000             MOVS     R0,#+0
   \      0x61E   0x9000             STR      R0,[SP, #+0]
   \      0x620   0x466B             MOV      R3,SP
   \      0x622   0xF104 0x0208      ADD      R2,R4,#+8
   \      0x626   0x1D21             ADDS     R1,R4,#+4
   \      0x628   0x4620             MOV      R0,R4
   \      0x62A   0x.... 0x....      BL       _Z7move_toRKfS0_S0_S0_
    377              //debug_current_and_destination(PSTR("done doing Z-Raise."));
    378          
    379              destination[X_AXIS] = x_pos;                                               // Move back to the starting position
   \      0x62E   0x.... 0x....      LDR.W    R5,??DataTable34
   \      0x632   0x6AE8             LDR      R0,[R5, #+44]
   \      0x634   0x6020             STR      R0,[R4, #+0]
    380              destination[Y_AXIS] = y_pos;
   \      0x636   0x6B28             LDR      R0,[R5, #+48]
   \      0x638   0x6060             STR      R0,[R4, #+4]
    381              //destination[Z_AXIS] = Z_CLEARANCE_BETWEEN_PROBES;                        // Keep the nozzle where it is
    382          
    383              move_to(destination[X_AXIS], destination[Y_AXIS], destination[Z_AXIS], 0); // Move back to the starting position
   \      0x63A   0x2000             MOVS     R0,#+0
   \      0x63C   0x9000             STR      R0,[SP, #+0]
   \      0x63E   0x466B             MOV      R3,SP
   \      0x640   0xF104 0x0208      ADD      R2,R4,#+8
   \      0x644   0x1D21             ADDS     R1,R4,#+4
   \      0x646   0x4620             MOV      R0,R4
   \      0x648   0x.... 0x....      BL       _Z7move_toRKfS0_S0_S0_
    384              //debug_current_and_destination(PSTR("done doing X/Y move."));
    385          
    386              ubl.has_control_of_lcd_panel = false;     // Give back control of the LCD Panel!
   \      0x64C   0x2000             MOVS     R0,#+0
   \      0x64E   0x.... 0x....      LDR.W    R1,??DataTable34_3
   \      0x652   0x7008             STRB     R0,[R1, #+0]
    387          
    388              if (!keep_heaters_on) {
   \      0x654   0x78A8             LDRB     R0,[R5, #+2]
   \      0x656   0x2800             CMP      R0,#+0
   \      0x658   0xD10C             BNE.N    ??gcode_G26_1
    389                //#if HAS_TEMP_BED	/*--mks cfg-- HAS_TEMP_BED --*/
    390          		if(HAS_TEMP_BED)
   \      0x65A   0x.... 0x....      LDR.W    R0,??DataTable37
   \      0x65E   0xF890 0x0036      LDRB     R0,[R0, #+54]
   \      0x662   0x2800             CMP      R0,#+0
   \      0x664   0xD002             BEQ.N    ??gcode_G26_60
    391          	  thermalManager.setTargetBed(0);
   \      0x666   0x2000             MOVS     R0,#+0
   \      0x668   0x.... 0x....      BL       _ZN11Temperature12setTargetBedEf
    392                //#endif
    393                thermalManager.setTargetHotend(0, 0);
   \                     ??gcode_G26_60: (+1)
   \      0x66C   0x2100             MOVS     R1,#+0
   \      0x66E   0x4608             MOV      R0,R1
   \      0x670   0x.... 0x....      BL       _ZN11Temperature15setTargetHotendEfh
    394              }
    395            }
   \                     ??gcode_G26_1: (+1)
   \      0x674   0xB029             ADD      SP,SP,#+164
   \      0x676   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    396          
    397          

   \                                 In section .text, align 2, keep-with-next
    398            float valid_trig_angle(float d) {
   \                     _Z16valid_trig_anglef: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0xE003             B.N      ??valid_trig_angle_0
    399              while (d > 360.0) d -= 360.0;
   \                     ??valid_trig_angle_1: (+1)
   \        0x4   0x.... 0x....      LDR.W    R1,??DataTable38_1  ;; 0xc3b40000
   \        0x8   0x.... 0x....      BL       __aeabi_fadd
   \                     ??valid_trig_angle_0: (+1)
   \        0xC   0x.... 0x....      LDR.W    R1,??DataTable38_2  ;; 0x43b40001
   \       0x10   0x.... 0x....      BL       __aeabi_cfrcmple
   \       0x14   0xD9F6             BLS.N    ??valid_trig_angle_1
    400              while (d < 0.0) d += 360.0;
   \                     ??valid_trig_angle_2: (+1)
   \       0x16   0x2100             MOVS     R1,#+0
   \       0x18   0x.... 0x....      BL       __aeabi_cfcmple
   \       0x1C   0xD205             BCS.N    ??valid_trig_angle_3
   \       0x1E   0x4601             MOV      R1,R0
   \       0x20   0x.... 0x....      LDR.W    R0,??DataTable37_4  ;; 0x43b40000
   \       0x24   0x.... 0x....      BL       __aeabi_fadd
   \       0x28   0xE7F5             B.N      ??valid_trig_angle_2
    401              return d;
   \                     ??valid_trig_angle_3: (+1)
   \       0x2A   0xBD02             POP      {R1,PC}          ;; return
    402            }
    403          

   \                                 In section .text, align 2, keep-with-next
    404            mesh_index_pair find_closest_circle_to_print(const float &X, const float &Y) {
   \                     _Z28find_closest_circle_to_printRKfS0_: (+1)
   \        0x0   0xE92D 0x4FF7      PUSH     {R0-R2,R4-R11,LR}
   \        0x4   0xB086             SUB      SP,SP,#+24
    405              float closest = 99999.99;
   \        0x6   0x.... 0x....      LDR.W    R4,??DataTable38_3  ;; 0x47c34fff
    406              mesh_index_pair return_val;
    407          
    408              return_val.x_index = return_val.y_index = -1;
   \        0xA   0xF04F 0x30FF      MOV      R0,#-1
   \        0xE   0xF88D 0x0005      STRB     R0,[SP, #+5]
   \       0x12   0xF88D 0x0004      STRB     R0,[SP, #+4]
    409          
    410              for (uint8_t i = 0; i < GRID_MAX_POINTS_X; i++) {
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0x9000             STR      R0,[SP, #+0]
   \       0x1A   0x.... 0x....      LDR.W    R6,??DataTable34
   \       0x1E   0xE003             B.N      ??find_closest_circle_to_print_0
   \                     ??find_closest_circle_to_print_1: (+1)
   \       0x20   0x9800             LDR      R0,[SP, #+0]
   \       0x22   0x1C40             ADDS     R0,R0,#+1
   \       0x24   0xB2C0             UXTB     R0,R0
   \       0x26   0x9000             STR      R0,[SP, #+0]
   \                     ??find_closest_circle_to_print_0: (+1)
   \       0x28   0x.... 0x....      LDR.W    R0,??DataTable38_4
   \       0x2C   0x9005             STR      R0,[SP, #+20]
   \       0x2E   0x9800             LDR      R0,[SP, #+0]
   \       0x30   0x9905             LDR      R1,[SP, #+20]
   \       0x32   0x7809             LDRB     R1,[R1, #+0]
   \       0x34   0x4288             CMP      R0,R1
   \       0x36   0xF280 0x80C5      BGE.W    ??find_closest_circle_to_print_2
    411                for (uint8_t j = 0; j < GRID_MAX_POINTS_Y; j++) {
   \       0x3A   0x2500             MOVS     R5,#+0
   \       0x3C   0xE04E             B.N      ??find_closest_circle_to_print_3
    412                  if (!is_bit_set(circle_flags, i, j)) {
   \                     ??find_closest_circle_to_print_4: (+1)
   \       0x3E   0x4658             MOV      R0,R11
   \       0x40   0x4659             MOV      R1,R11
   \       0x42   0x.... 0x....      BL       __aeabi_fmul
   \       0x46   0x4683             MOV      R11,R0
   \                     ??find_closest_circle_to_print_5: (+1)
   \       0x48   0xEA5F 0x70C8      LSLS     R0,R8,#+31
   \       0x4C   0xD504             BPL.N    ??find_closest_circle_to_print_6
   \       0x4E   0x4650             MOV      R0,R10
   \       0x50   0x4659             MOV      R1,R11
   \       0x52   0x.... 0x....      BL       __aeabi_fmul
   \       0x56   0x4682             MOV      R10,R0
   \                     ??find_closest_circle_to_print_6: (+1)
   \       0x58   0xEA5F 0x0858      LSRS     R8,R8,#+1
   \       0x5C   0xD1EF             BNE.N    ??find_closest_circle_to_print_4
    413                    const float mx = ubl.mesh_index_to_xpos[i],  // We found a circle that needs to be printed
    414                                my = ubl.mesh_index_to_ypos[j];
    415          
    416                    // Get the distance to this intersection
    417                    float f = HYPOT(X - mx, Y - my);
    418          
    419                    // It is possible that we are being called with the values
    420                    // to let us find the closest circle to the start position.
    421                    // But if this is not the case, add a small weighting to the
    422                    // distance calculation to help it choose a better place to continue.
    423                    f += HYPOT(x_pos - mx, y_pos - my) / 15.0;
   \       0x5E   0x4648             MOV      R0,R9
   \       0x60   0x.... 0x....      BL       __aeabi_f2d
   \       0x64   0x4680             MOV      R8,R0
   \       0x66   0x4689             MOV      R9,R1
   \       0x68   0x4638             MOV      R0,R7
   \       0x6A   0x4651             MOV      R1,R10
   \       0x6C   0x.... 0x....      BL       __aeabi_fadd
   \       0x70   0x.... 0x....      BL       sqrtf
   \       0x74   0x.... 0x....      BL       __aeabi_f2d
   \       0x78   0x2200             MOVS     R2,#+0
   \       0x7A   0x.... 0x....      LDR.W    R3,??DataTable38_5  ;; 0x402e0000
   \       0x7E   0x.... 0x....      BL       __aeabi_ddiv
   \       0x82   0x4642             MOV      R2,R8
   \       0x84   0x464B             MOV      R3,R9
   \       0x86   0x.... 0x....      BL       __aeabi_dadd
   \       0x8A   0x.... 0x....      BL       __aeabi_d2f
   \       0x8E   0x4607             MOV      R7,R0
    424          
    425                    // Add in the specified amount of Random Noise to our search
    426          #if 0          
    427                    if (random_deviation > 1.0)
    428                      f += random(0.0, random_deviation);
    429          #else        
    430                    if (random_deviation > 1.0)
   \       0x90   0x6930             LDR      R0,[R6, #+16]
   \       0x92   0x.... 0x....      LDR.W    R1,??DataTable38_6  ;; 0x3f800001
   \       0x96   0x.... 0x....      BL       __aeabi_cfrcmple
   \       0x9A   0xD812             BHI.N    ??find_closest_circle_to_print_7
    431                    {
    432                      int16_t randData = rand()% (int)random_deviation;
   \       0x9C   0x.... 0x....      BL       rand
   \       0xA0   0x4680             MOV      R8,R0
   \       0xA2   0x6930             LDR      R0,[R6, #+16]
   \       0xA4   0x.... 0x....      BL       __aeabi_f2iz
   \       0xA8   0xFB98 0xF1F0      SDIV     R1,R8,R0
   \       0xAC   0xFB00 0x8811      MLS      R8,R0,R1,R8
    433                      f += randData;
   \       0xB0   0xFA0F 0xF888      SXTH     R8,R8
   \       0xB4   0x4640             MOV      R0,R8
   \       0xB6   0x.... 0x....      BL       __aeabi_i2f
   \       0xBA   0x4639             MOV      R1,R7
   \       0xBC   0x.... 0x....      BL       __aeabi_fadd
   \       0xC0   0x4607             MOV      R7,R0
    434                    }
    435          #endif
    436                    
    437                    
    438                    if (f < closest) {
   \                     ??find_closest_circle_to_print_7: (+1)
   \       0xC2   0x4638             MOV      R0,R7
   \       0xC4   0x4621             MOV      R1,R4
   \       0xC6   0x.... 0x....      BL       __aeabi_cfcmple
   \       0xCA   0xD206             BCS.N    ??find_closest_circle_to_print_8
    439                      closest = f;              // We found a closer location that is still
   \       0xCC   0x463C             MOV      R4,R7
    440                      return_val.x_index = i;   // un-printed  --- save the data for it
   \       0xCE   0x9800             LDR      R0,[SP, #+0]
   \       0xD0   0xF88D 0x0004      STRB     R0,[SP, #+4]
    441                      return_val.y_index = j;
   \       0xD4   0xF88D 0x5005      STRB     R5,[SP, #+5]
    442                      return_val.distance = closest;
   \       0xD8   0x9402             STR      R4,[SP, #+8]
    443                    }
   \                     ??find_closest_circle_to_print_8: (+1)
   \       0xDA   0x1C6D             ADDS     R5,R5,#+1
   \                     ??find_closest_circle_to_print_3: (+1)
   \       0xDC   0x4628             MOV      R0,R5
   \       0xDE   0x9905             LDR      R1,[SP, #+20]
   \       0xE0   0x7849             LDRB     R1,[R1, #+1]
   \       0xE2   0xB2C0             UXTB     R0,R0
   \       0xE4   0x4288             CMP      R0,R1
   \       0xE6   0xD29B             BCS.N    ??find_closest_circle_to_print_1
   \       0xE8   0x462A             MOV      R2,R5
   \       0xEA   0xB2D2             UXTB     R2,R2
   \       0xEC   0x9900             LDR      R1,[SP, #+0]
   \       0xEE   0xB2C9             UXTB     R1,R1
   \       0xF0   0xF106 0x0038      ADD      R0,R6,#+56
   \       0xF4   0x.... 0x....      BL       _Z10is_bit_setPjhh
   \       0xF8   0x2800             CMP      R0,#+0
   \       0xFA   0xD1EE             BNE.N    ??find_closest_circle_to_print_8
   \       0xFC   0x.... 0x....      LDR.W    R0,??DataTable34_9
   \      0x100   0x9900             LDR      R1,[SP, #+0]
   \      0x102   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \      0x106   0x9004             STR      R0,[SP, #+16]
   \      0x108   0x.... 0x....      LDR.W    R0,??DataTable34_10
   \      0x10C   0x4629             MOV      R1,R5
   \      0x10E   0xB2C9             UXTB     R1,R1
   \      0x110   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \      0x114   0x9003             STR      R0,[SP, #+12]
   \      0x116   0x9807             LDR      R0,[SP, #+28]
   \      0x118   0x6800             LDR      R0,[R0, #+0]
   \      0x11A   0x9904             LDR      R1,[SP, #+16]
   \      0x11C   0x.... 0x....      BL       __aeabi_fsub
   \      0x120   0x4682             MOV      R10,R0
   \      0x122   0x2702             MOVS     R7,#+2
   \      0x124   0xF04F 0x587E      MOV      R8,#+1065353216
   \      0x128   0x46C1             MOV      R9,R8
   \      0x12A   0xE004             B.N      ??find_closest_circle_to_print_9
   \                     ??find_closest_circle_to_print_10: (+1)
   \      0x12C   0x4650             MOV      R0,R10
   \      0x12E   0x4651             MOV      R1,R10
   \      0x130   0x.... 0x....      BL       __aeabi_fmul
   \      0x134   0x4682             MOV      R10,R0
   \                     ??find_closest_circle_to_print_9: (+1)
   \      0x136   0x07F8             LSLS     R0,R7,#+31
   \      0x138   0xD504             BPL.N    ??find_closest_circle_to_print_11
   \      0x13A   0x4648             MOV      R0,R9
   \      0x13C   0x4651             MOV      R1,R10
   \      0x13E   0x.... 0x....      BL       __aeabi_fmul
   \      0x142   0x4681             MOV      R9,R0
   \                     ??find_closest_circle_to_print_11: (+1)
   \      0x144   0x087F             LSRS     R7,R7,#+1
   \      0x146   0xD1F1             BNE.N    ??find_closest_circle_to_print_10
   \      0x148   0x9808             LDR      R0,[SP, #+32]
   \      0x14A   0x6800             LDR      R0,[R0, #+0]
   \      0x14C   0x9903             LDR      R1,[SP, #+12]
   \      0x14E   0x.... 0x....      BL       __aeabi_fsub
   \      0x152   0x4682             MOV      R10,R0
   \      0x154   0x2702             MOVS     R7,#+2
   \      0x156   0x46C3             MOV      R11,R8
   \      0x158   0xE004             B.N      ??find_closest_circle_to_print_12
   \                     ??find_closest_circle_to_print_13: (+1)
   \      0x15A   0x4650             MOV      R0,R10
   \      0x15C   0x4651             MOV      R1,R10
   \      0x15E   0x.... 0x....      BL       __aeabi_fmul
   \      0x162   0x4682             MOV      R10,R0
   \                     ??find_closest_circle_to_print_12: (+1)
   \      0x164   0x07F8             LSLS     R0,R7,#+31
   \      0x166   0xD504             BPL.N    ??find_closest_circle_to_print_14
   \      0x168   0x4658             MOV      R0,R11
   \      0x16A   0x4651             MOV      R1,R10
   \      0x16C   0x.... 0x....      BL       __aeabi_fmul
   \      0x170   0x4683             MOV      R11,R0
   \                     ??find_closest_circle_to_print_14: (+1)
   \      0x172   0x087F             LSRS     R7,R7,#+1
   \      0x174   0xD1F1             BNE.N    ??find_closest_circle_to_print_13
   \      0x176   0x4648             MOV      R0,R9
   \      0x178   0x4659             MOV      R1,R11
   \      0x17A   0x.... 0x....      BL       __aeabi_fadd
   \      0x17E   0x.... 0x....      BL       sqrtf
   \      0x182   0x4681             MOV      R9,R0
   \      0x184   0x6AF0             LDR      R0,[R6, #+44]
   \      0x186   0x9904             LDR      R1,[SP, #+16]
   \      0x188   0x.... 0x....      BL       __aeabi_fsub
   \      0x18C   0x4683             MOV      R11,R0
   \      0x18E   0x2702             MOVS     R7,#+2
   \      0x190   0x46C2             MOV      R10,R8
   \      0x192   0xE004             B.N      ??find_closest_circle_to_print_15
   \                     ??find_closest_circle_to_print_16: (+1)
   \      0x194   0x4658             MOV      R0,R11
   \      0x196   0x4659             MOV      R1,R11
   \      0x198   0x.... 0x....      BL       __aeabi_fmul
   \      0x19C   0x4683             MOV      R11,R0
   \                     ??find_closest_circle_to_print_15: (+1)
   \      0x19E   0x07F8             LSLS     R0,R7,#+31
   \      0x1A0   0xD504             BPL.N    ??find_closest_circle_to_print_17
   \      0x1A2   0x4650             MOV      R0,R10
   \      0x1A4   0x4659             MOV      R1,R11
   \      0x1A6   0x.... 0x....      BL       __aeabi_fmul
   \      0x1AA   0x4682             MOV      R10,R0
   \                     ??find_closest_circle_to_print_17: (+1)
   \      0x1AC   0x087F             LSRS     R7,R7,#+1
   \      0x1AE   0xD1F1             BNE.N    ??find_closest_circle_to_print_16
   \      0x1B0   0x4657             MOV      R7,R10
   \      0x1B2   0x6B30             LDR      R0,[R6, #+48]
   \      0x1B4   0x9903             LDR      R1,[SP, #+12]
   \      0x1B6   0x.... 0x....      BL       __aeabi_fsub
   \      0x1BA   0x4683             MOV      R11,R0
   \      0x1BC   0x2002             MOVS     R0,#+2
   \      0x1BE   0x46C2             MOV      R10,R8
   \      0x1C0   0x4680             MOV      R8,R0
   \      0x1C2   0xE741             B.N      ??find_closest_circle_to_print_5
    444                  }
    445                }
    446              }
   \                     ??find_closest_circle_to_print_2: (+1)
   \      0x1C4   0x9C06             LDR      R4,[SP, #+24]
    447              bit_set(circle_flags, return_val.x_index, return_val.y_index);   // Mark this location as done.
   \      0x1C6   0xF89D 0x0005      LDRB     R0,[SP, #+5]
   \      0x1CA   0x4602             MOV      R2,R0
   \      0x1CC   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \      0x1D0   0x4601             MOV      R1,R0
   \      0x1D2   0x.... 0x....      LDR.W    R0,??DataTable34_1
   \      0x1D6   0x.... 0x....      BL       _Z7bit_setPjhh
    448              return return_val;
   \      0x1DA   0xE9DD 0x0101      LDRD     R0,R1,[SP, #+4]
   \      0x1DE   0xE9C4 0x0100      STRD     R0,R1,[R4, #+0]
   \      0x1E2   0xB009             ADD      SP,SP,#+36
   \      0x1E4   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    449            }
    450          

   \                                 In section .text, align 4, keep-with-next
    451            void look_for_lines_to_connect() {
   \                     _Z25look_for_lines_to_connectv: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0xB088             SUB      SP,SP,#+32
    452              float sx, sy, ex, ey;
    453          
    454              for (uint8_t i = 0; i < GRID_MAX_POINTS_X; i++) {
   \        0x6   0x2400             MOVS     R4,#+0
   \        0x8   0x.... 0x....      LDR.W    R7,??DataTable34
   \        0xC   0xE1D9             B.N      ??look_for_lines_to_connect_0
    455                for (uint8_t j = 0; j < GRID_MAX_POINTS_Y; j++) {
    456          
    457                  if (i < GRID_MAX_POINTS_X) { // We can't connect to anything to the right than GRID_MAX_POINTS_X.
    458                                                   // This is already a half circle because we are at the edge of the bed.
    459          
    460                    if (is_bit_set(circle_flags, i, j) && is_bit_set(circle_flags, i + 1, j)) { // check if we can do a line to the left
    461                      if (!is_bit_set(horizontal_mesh_line_flags, i, j)) {
    462          
    463                        //
    464                        // We found two circles that need a horizontal line to connect them
    465                        // Print it!
    466                        //
    467                        sx = ubl.mesh_index_to_xpos[  i  ] + (SIZE_OF_INTERSECTION_CIRCLES - (SIZE_OF_CROSSHAIRS)); // right edge
    468                        ex = ubl.mesh_index_to_xpos[i + 1] - (SIZE_OF_INTERSECTION_CIRCLES - (SIZE_OF_CROSSHAIRS)); // left edge
    469          
    470                        sx = constrain(sx, X_MIN_POS + 1, X_MAX_POS - 1);
    471                        sy = ey = constrain(ubl.mesh_index_to_ypos[j], Y_MIN_POS + 1, Y_MAX_POS - 1);
    472                        ex = constrain(ex, X_MIN_POS + 1, X_MAX_POS - 1);
    473          
    474                        if (ubl.g26_debug_flag) {
    475                          SERIAL_ECHOPAIR(" Connecting with horizontal line (sx=", sx);
    476                          SERIAL_ECHOPAIR(", sy=", sy);
    477                          SERIAL_ECHOPAIR(") -> (ex=", ex);
    478                          SERIAL_ECHOPAIR(", ey=", ey);
    479                          SERIAL_CHAR(')');
    480                          SERIAL_EOL;
    481                          //debug_current_and_destination(PSTR("Connecting horizontal line."));
    482                        }
    483          
    484                        print_line_from_here_to_there(LOGICAL_X_POSITION(sx), LOGICAL_Y_POSITION(sy), layer_height, LOGICAL_X_POSITION(ex), LOGICAL_Y_POSITION(ey), layer_height);
    485                        bit_set(horizontal_mesh_line_flags, i, j);   // Mark it as done so we don't do it again
    486                      }
    487                    }
    488          
    489                    if (j < GRID_MAX_POINTS_Y) { // We can't connect to anything further back than GRID_MAX_POINTS_Y.
    490                                                     // This is already a half circle because we are at the edge  of the bed.
    491          
    492                      if (is_bit_set(circle_flags, i, j) && is_bit_set(circle_flags, i, j + 1)) { // check if we can do a line straight down
    493                        if (!is_bit_set( vertical_mesh_line_flags, i, j)) {
    494                          //
    495                          // We found two circles that need a vertical line to connect them
    496                          // Print it!
    497                          //
    498                          sy = ubl.mesh_index_to_ypos[  j  ] + (SIZE_OF_INTERSECTION_CIRCLES - (SIZE_OF_CROSSHAIRS)); // top edge
    499                          ey = ubl.mesh_index_to_ypos[j + 1] - (SIZE_OF_INTERSECTION_CIRCLES - (SIZE_OF_CROSSHAIRS)); // bottom edge
    500          
    501                          sx = ex = constrain(ubl.mesh_index_to_xpos[i], X_MIN_POS + 1, X_MAX_POS - 1);
    502                          sy = constrain(sy, Y_MIN_POS + 1, Y_MAX_POS - 1);
    503                          ey = constrain(ey, Y_MIN_POS + 1, Y_MAX_POS - 1);
    504          
    505                          if (ubl.g26_debug_flag) {
    506                            SERIAL_ECHOPAIR(" Connecting with vertical line (sx=", sx);
    507                            SERIAL_ECHOPAIR(", sy=", sy);
    508                            SERIAL_ECHOPAIR(") -> (ex=", ex);
    509                            SERIAL_ECHOPAIR(", ey=", ey);
    510                            SERIAL_CHAR(')');
    511                            SERIAL_EOL;
   \                     ??look_for_lines_to_connect_1: (+1)
   \        0xE   0x2200             MOVS     R2,#+0
   \       0x10   0x210A             MOVS     R1,#+10
   \       0x12   0x.... 0x....      LDR.W    R0,??DataTable37_8
   \       0x16   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   \       0x1A   0xE00D             B.N      ??look_for_lines_to_connect_2
   \                     ??look_for_lines_to_connect_3: (+1)
   \       0x1C   0x2200             MOVS     R2,#+0
   \       0x1E   0x2129             MOVS     R1,#+41
   \       0x20   0x.... 0x....      LDR.W    R0,??DataTable37_8
   \       0x24   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   \                     ??look_for_lines_to_connect_4: (+1)
   \       0x28   0x7830             LDRB     R0,[R6, #+0]
   \       0x2A   0x2800             CMP      R0,#+0
   \       0x2C   0xD1EF             BNE.N    ??look_for_lines_to_connect_1
   \       0x2E   0x210A             MOVS     R1,#+10
   \       0x30   0x.... 0x....      LDR.W    R0,??DataTable37_3
   \       0x34   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
    512                            debug_current_and_destination(PSTR("Connecting vertical line."));
   \                     ??look_for_lines_to_connect_2: (+1)
   \       0x38   0x.... 0x....      ADR.W    R0,?_14
   \       0x3C   0x.... 0x....      BL       _Z29debug_current_and_destinationPKc
    513                          }
    514                          print_line_from_here_to_there(LOGICAL_X_POSITION(sx), LOGICAL_Y_POSITION(sy), layer_height, LOGICAL_X_POSITION(ex), LOGICAL_Y_POSITION(ey), layer_height);
   \                     ??look_for_lines_to_connect_5: (+1)
   \       0x40   0x.... 0x....      LDR.W    R6,??DataTable37_12
   \       0x44   0x6831             LDR      R1,[R6, #+0]
   \       0x46   0x4640             MOV      R0,R8
   \       0x48   0x.... 0x....      BL       __aeabi_fadd
   \       0x4C   0x4680             MOV      R8,R0
   \       0x4E   0xF8CD 0x801C      STR      R8,[SP, #+28]
   \       0x52   0x6876             LDR      R6,[R6, #+4]
   \       0x54   0x4648             MOV      R0,R9
   \       0x56   0x4631             MOV      R1,R6
   \       0x58   0x.... 0x....      BL       __aeabi_fadd
   \       0x5C   0x9006             STR      R0,[SP, #+24]
   \       0x5E   0xF8CD 0x8014      STR      R8,[SP, #+20]
   \       0x62   0x4650             MOV      R0,R10
   \       0x64   0x4631             MOV      R1,R6
   \       0x66   0x.... 0x....      BL       __aeabi_fadd
   \       0x6A   0x9004             STR      R0,[SP, #+16]
   \       0x6C   0xF107 0x0014      ADD      R0,R7,#+20
   \       0x70   0x9001             STR      R0,[SP, #+4]
   \       0x72   0xA804             ADD      R0,SP,#+16
   \       0x74   0x9000             STR      R0,[SP, #+0]
   \       0x76   0xAB05             ADD      R3,SP,#+20
   \       0x78   0xF107 0x0214      ADD      R2,R7,#+20
   \       0x7C   0xA906             ADD      R1,SP,#+24
   \       0x7E   0xA807             ADD      R0,SP,#+28
   \       0x80   0x.... 0x....      BL       _Z29print_line_from_here_to_thereRKfS0_S0_S0_S0_S0_
    515                          bit_set(vertical_mesh_line_flags, i, j);   // Mark it as done so we don't do it again
   \       0x84   0x462A             MOV      R2,R5
   \       0x86   0xB2D2             UXTB     R2,R2
   \       0x88   0x4621             MOV      R1,R4
   \       0x8A   0xB2C9             UXTB     R1,R1
   \       0x8C   0x9803             LDR      R0,[SP, #+12]
   \       0x8E   0x.... 0x....      BL       _Z7bit_setPjhh
   \                     ??look_for_lines_to_connect_6: (+1)
   \       0x92   0x1C6D             ADDS     R5,R5,#+1
   \                     ??look_for_lines_to_connect_7: (+1)
   \       0x94   0x4628             MOV      R0,R5
   \       0x96   0x9902             LDR      R1,[SP, #+8]
   \       0x98   0x7849             LDRB     R1,[R1, #+1]
   \       0x9A   0xB2C0             UXTB     R0,R0
   \       0x9C   0x4288             CMP      R0,R1
   \       0x9E   0xF080 0x818F      BCS.W    ??look_for_lines_to_connect_8
   \       0xA2   0x.... 0x....      LDR.W    R6,??DataTable37
   \       0xA6   0x4620             MOV      R0,R4
   \       0xA8   0x9902             LDR      R1,[SP, #+8]
   \       0xAA   0x7809             LDRB     R1,[R1, #+0]
   \       0xAC   0xB2C0             UXTB     R0,R0
   \       0xAE   0x4288             CMP      R0,R1
   \       0xB0   0xD2EF             BCS.N    ??look_for_lines_to_connect_6
   \       0xB2   0x462A             MOV      R2,R5
   \       0xB4   0xB2D2             UXTB     R2,R2
   \       0xB6   0x4621             MOV      R1,R4
   \       0xB8   0xB2C9             UXTB     R1,R1
   \       0xBA   0xF107 0x0038      ADD      R0,R7,#+56
   \       0xBE   0x.... 0x....      BL       _Z10is_bit_setPjhh
   \       0xC2   0x2800             CMP      R0,#+0
   \       0xC4   0xF000 0x80D8      BEQ.W    ??look_for_lines_to_connect_9
   \       0xC8   0x462A             MOV      R2,R5
   \       0xCA   0xB2D2             UXTB     R2,R2
   \       0xCC   0x1C61             ADDS     R1,R4,#+1
   \       0xCE   0xB2C9             UXTB     R1,R1
   \       0xD0   0xF107 0x0038      ADD      R0,R7,#+56
   \       0xD4   0x.... 0x....      BL       _Z10is_bit_setPjhh
   \       0xD8   0x2800             CMP      R0,#+0
   \       0xDA   0xF000 0x80CD      BEQ.W    ??look_for_lines_to_connect_9
   \       0xDE   0x462A             MOV      R2,R5
   \       0xE0   0xB2D2             UXTB     R2,R2
   \       0xE2   0x4621             MOV      R1,R4
   \       0xE4   0xB2C9             UXTB     R1,R1
   \       0xE6   0xF107 0x0078      ADD      R0,R7,#+120
   \       0xEA   0x.... 0x....      BL       _Z10is_bit_setPjhh
   \       0xEE   0x2800             CMP      R0,#+0
   \       0xF0   0xF040 0x80C2      BNE.W    ??look_for_lines_to_connect_9
   \       0xF4   0x46A0             MOV      R8,R4
   \       0xF6   0xFA5F 0xF888      UXTB     R8,R8
   \       0xFA   0x.... 0x....      LDR.W    R9,??DataTable34_9
   \       0xFE   0xF859 0x0028      LDR      R0,[R9, R8, LSL #+2]
   \      0x102   0xF04F 0x4180      MOV      R1,#+1073741824
   \      0x106   0x.... 0x....      BL       __aeabi_fadd
   \      0x10A   0x4682             MOV      R10,R0
   \      0x10C   0xF109 0x0004      ADD      R0,R9,#+4
   \      0x110   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \      0x114   0xF04F 0x4140      MOV      R1,#-1073741824
   \      0x118   0x.... 0x....      BL       __aeabi_fadd
   \      0x11C   0x4680             MOV      R8,R0
   \      0x11E   0x68B0             LDR      R0,[R6, #+8]
   \      0x120   0xF04F 0x517E      MOV      R1,#+1065353216
   \      0x124   0x.... 0x....      BL       __aeabi_fadd
   \      0x128   0x4681             MOV      R9,R0
   \      0x12A   0x4650             MOV      R0,R10
   \      0x12C   0x4649             MOV      R1,R9
   \      0x12E   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x132   0xD201             BCS.N    ??look_for_lines_to_connect_10
   \      0x134   0x46CA             MOV      R10,R9
   \      0x136   0xE009             B.N      ??look_for_lines_to_connect_11
   \                     ??look_for_lines_to_connect_10: (+1)
   \      0x138   0x6970             LDR      R0,[R6, #+20]
   \      0x13A   0x.... 0x....      LDR.W    R1,??DataTable37_11  ;; 0xbf800000
   \      0x13E   0x.... 0x....      BL       __aeabi_fadd
   \      0x142   0x4651             MOV      R1,R10
   \      0x144   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x148   0xD200             BCS.N    ??look_for_lines_to_connect_11
   \      0x14A   0x4682             MOV      R10,R0
   \                     ??look_for_lines_to_connect_11: (+1)
   \      0x14C   0x....             LDR.N    R0,??DataTable34_10
   \      0x14E   0x4629             MOV      R1,R5
   \      0x150   0xB2C9             UXTB     R1,R1
   \      0x152   0xF850 0xB021      LDR      R11,[R0, R1, LSL #+2]
   \      0x156   0x68F0             LDR      R0,[R6, #+12]
   \      0x158   0xF04F 0x517E      MOV      R1,#+1065353216
   \      0x15C   0x.... 0x....      BL       __aeabi_fadd
   \      0x160   0x4601             MOV      R1,R0
   \      0x162   0x4658             MOV      R0,R11
   \      0x164   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x168   0xD201             BCS.N    ??look_for_lines_to_connect_12
   \      0x16A   0x468B             MOV      R11,R1
   \      0x16C   0xE009             B.N      ??look_for_lines_to_connect_13
   \                     ??look_for_lines_to_connect_12: (+1)
   \      0x16E   0x69B0             LDR      R0,[R6, #+24]
   \      0x170   0x.... 0x....      LDR.W    R1,??DataTable37_11  ;; 0xbf800000
   \      0x174   0x.... 0x....      BL       __aeabi_fadd
   \      0x178   0x4659             MOV      R1,R11
   \      0x17A   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x17E   0xD200             BCS.N    ??look_for_lines_to_connect_13
   \      0x180   0x4683             MOV      R11,R0
   \                     ??look_for_lines_to_connect_13: (+1)
   \      0x182   0xF8CD 0xB000      STR      R11,[SP, #+0]
   \      0x186   0x4640             MOV      R0,R8
   \      0x188   0x4649             MOV      R1,R9
   \      0x18A   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x18E   0xD201             BCS.N    ??look_for_lines_to_connect_14
   \      0x190   0x46C8             MOV      R8,R9
   \      0x192   0xE009             B.N      ??look_for_lines_to_connect_15
   \                     ??look_for_lines_to_connect_14: (+1)
   \      0x194   0x6970             LDR      R0,[R6, #+20]
   \      0x196   0x.... 0x....      LDR.W    R1,??DataTable37_11  ;; 0xbf800000
   \      0x19A   0x.... 0x....      BL       __aeabi_fadd
   \      0x19E   0x4641             MOV      R1,R8
   \      0x1A0   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x1A4   0xD200             BCS.N    ??look_for_lines_to_connect_15
   \      0x1A6   0x4680             MOV      R8,R0
   \                     ??look_for_lines_to_connect_15: (+1)
   \      0x1A8   0x.... 0x....      LDR.W    R0,??DataTable37_1
   \      0x1AC   0x7800             LDRB     R0,[R0, #+0]
   \      0x1AE   0x2800             CMP      R0,#+0
   \      0x1B0   0xD035             BEQ.N    ??look_for_lines_to_connect_16
   \      0x1B2   0x4651             MOV      R1,R10
   \      0x1B4   0x.... 0x....      ADR.W    R0,?_9
   \      0x1B8   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0x1BC   0x4659             MOV      R1,R11
   \      0x1BE   0x.... 0x....      ADR.W    R0,?_10
   \      0x1C2   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0x1C6   0x4641             MOV      R1,R8
   \      0x1C8   0x.... 0x....      ADR.W    R0,?_11
   \      0x1CC   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0x1D0   0x9900             LDR      R1,[SP, #+0]
   \      0x1D2   0x.... 0x....      ADR.W    R0,?_12
   \      0x1D6   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0x1DA   0x.... 0x....      LDR.W    R9,??DataTable37_2
   \      0x1DE   0xF899 0x0000      LDRB     R0,[R9, #+0]
   \      0x1E2   0x2800             CMP      R0,#+0
   \      0x1E4   0xD105             BNE.N    ??look_for_lines_to_connect_17
   \      0x1E6   0x2129             MOVS     R1,#+41
   \      0x1E8   0x.... 0x....      LDR.W    R0,??DataTable37_3
   \      0x1EC   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x1F0   0xE005             B.N      ??look_for_lines_to_connect_18
   \                     ??look_for_lines_to_connect_17: (+1)
   \      0x1F2   0x2200             MOVS     R2,#+0
   \      0x1F4   0x2129             MOVS     R1,#+41
   \      0x1F6   0x.... 0x....      LDR.W    R0,??DataTable37_8
   \      0x1FA   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   \                     ??look_for_lines_to_connect_18: (+1)
   \      0x1FE   0xF899 0x0000      LDRB     R0,[R9, #+0]
   \      0x202   0x2800             CMP      R0,#+0
   \      0x204   0xD105             BNE.N    ??look_for_lines_to_connect_19
   \      0x206   0x210A             MOVS     R1,#+10
   \      0x208   0x.... 0x....      LDR.W    R0,??DataTable37_3
   \      0x20C   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x210   0xE005             B.N      ??look_for_lines_to_connect_16
   \                     ??look_for_lines_to_connect_19: (+1)
   \      0x212   0x2200             MOVS     R2,#+0
   \      0x214   0x210A             MOVS     R1,#+10
   \      0x216   0x.... 0x....      LDR.W    R0,??DataTable37_8
   \      0x21A   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   \                     ??look_for_lines_to_connect_16: (+1)
   \      0x21E   0x.... 0x....      LDR.W    R0,??DataTable37_12
   \      0x222   0xF8D0 0x9000      LDR      R9,[R0, #+0]
   \      0x226   0x4650             MOV      R0,R10
   \      0x228   0x4649             MOV      R1,R9
   \      0x22A   0x.... 0x....      BL       __aeabi_fadd
   \      0x22E   0x9006             STR      R0,[SP, #+24]
   \      0x230   0x.... 0x....      LDR.W    R0,??DataTable37_12
   \      0x234   0x6841             LDR      R1,[R0, #+4]
   \      0x236   0x4658             MOV      R0,R11
   \      0x238   0x.... 0x....      BL       __aeabi_fadd
   \      0x23C   0x4682             MOV      R10,R0
   \      0x23E   0xF8CD 0xA014      STR      R10,[SP, #+20]
   \      0x242   0x4640             MOV      R0,R8
   \      0x244   0x4649             MOV      R1,R9
   \      0x246   0x.... 0x....      BL       __aeabi_fadd
   \      0x24A   0x9004             STR      R0,[SP, #+16]
   \      0x24C   0xF8CD 0xA00C      STR      R10,[SP, #+12]
   \      0x250   0xF107 0x0014      ADD      R0,R7,#+20
   \      0x254   0x9001             STR      R0,[SP, #+4]
   \      0x256   0xA803             ADD      R0,SP,#+12
   \      0x258   0x9000             STR      R0,[SP, #+0]
   \      0x25A   0xAB04             ADD      R3,SP,#+16
   \      0x25C   0xF107 0x0214      ADD      R2,R7,#+20
   \      0x260   0xA905             ADD      R1,SP,#+20
   \      0x262   0xA806             ADD      R0,SP,#+24
   \      0x264   0x.... 0x....      BL       _Z29print_line_from_here_to_thereRKfS0_S0_S0_S0_S0_
   \      0x268   0x462A             MOV      R2,R5
   \      0x26A   0xB2D2             UXTB     R2,R2
   \      0x26C   0x4621             MOV      R1,R4
   \      0x26E   0xB2C9             UXTB     R1,R1
   \      0x270   0xF107 0x0078      ADD      R0,R7,#+120
   \      0x274   0x.... 0x....      BL       _Z7bit_setPjhh
   \                     ??look_for_lines_to_connect_9: (+1)
   \      0x278   0x4628             MOV      R0,R5
   \      0x27A   0x9902             LDR      R1,[SP, #+8]
   \      0x27C   0x7849             LDRB     R1,[R1, #+1]
   \      0x27E   0xB2C0             UXTB     R0,R0
   \      0x280   0x4288             CMP      R0,R1
   \      0x282   0xF4BF 0xAF06      BCS.W    ??look_for_lines_to_connect_6
   \      0x286   0x462A             MOV      R2,R5
   \      0x288   0xB2D2             UXTB     R2,R2
   \      0x28A   0x4621             MOV      R1,R4
   \      0x28C   0xB2C9             UXTB     R1,R1
   \      0x28E   0xF107 0x0038      ADD      R0,R7,#+56
   \      0x292   0x.... 0x....      BL       _Z10is_bit_setPjhh
   \      0x296   0x2800             CMP      R0,#+0
   \      0x298   0xF43F 0xAEFB      BEQ.W    ??look_for_lines_to_connect_6
   \      0x29C   0x1C6A             ADDS     R2,R5,#+1
   \      0x29E   0xB2D2             UXTB     R2,R2
   \      0x2A0   0x4621             MOV      R1,R4
   \      0x2A2   0xB2C9             UXTB     R1,R1
   \      0x2A4   0xF107 0x0038      ADD      R0,R7,#+56
   \      0x2A8   0x.... 0x....      BL       _Z10is_bit_setPjhh
   \      0x2AC   0x2800             CMP      R0,#+0
   \      0x2AE   0xF43F 0xAEF0      BEQ.W    ??look_for_lines_to_connect_6
   \      0x2B2   0xF107 0x00B8      ADD      R0,R7,#+184
   \      0x2B6   0x9003             STR      R0,[SP, #+12]
   \      0x2B8   0x462A             MOV      R2,R5
   \      0x2BA   0xB2D2             UXTB     R2,R2
   \      0x2BC   0x4621             MOV      R1,R4
   \      0x2BE   0xB2C9             UXTB     R1,R1
   \      0x2C0   0x.... 0x....      BL       _Z10is_bit_setPjhh
   \      0x2C4   0x2800             CMP      R0,#+0
   \      0x2C6   0xF47F 0xAEE4      BNE.W    ??look_for_lines_to_connect_6
   \      0x2CA   0x46A8             MOV      R8,R5
   \      0x2CC   0xFA5F 0xF888      UXTB     R8,R8
   \      0x2D0   0x.... 0x....      LDR.W    R10,??DataTable38_7
   \      0x2D4   0xF85A 0x0028      LDR      R0,[R10, R8, LSL #+2]
   \      0x2D8   0xF04F 0x4180      MOV      R1,#+1073741824
   \      0x2DC   0x.... 0x....      BL       __aeabi_fadd
   \      0x2E0   0x4681             MOV      R9,R0
   \      0x2E2   0xF10A 0x0004      ADD      R0,R10,#+4
   \      0x2E6   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \      0x2EA   0xF04F 0x4140      MOV      R1,#-1073741824
   \      0x2EE   0x.... 0x....      BL       __aeabi_fadd
   \      0x2F2   0x4682             MOV      R10,R0
   \      0x2F4   0x....             LDR.N    R0,??DataTable34_9
   \      0x2F6   0x4621             MOV      R1,R4
   \      0x2F8   0xB2C9             UXTB     R1,R1
   \      0x2FA   0xF850 0x8021      LDR      R8,[R0, R1, LSL #+2]
   \      0x2FE   0x68B0             LDR      R0,[R6, #+8]
   \      0x300   0xF04F 0x517E      MOV      R1,#+1065353216
   \      0x304   0x.... 0x....      BL       __aeabi_fadd
   \      0x308   0x4601             MOV      R1,R0
   \      0x30A   0x4640             MOV      R0,R8
   \      0x30C   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x310   0xD201             BCS.N    ??look_for_lines_to_connect_20
   \      0x312   0x4688             MOV      R8,R1
   \      0x314   0xE008             B.N      ??look_for_lines_to_connect_21
   \                     ??look_for_lines_to_connect_20: (+1)
   \      0x316   0x6970             LDR      R0,[R6, #+20]
   \      0x318   0x....             LDR.N    R1,??DataTable37_11  ;; 0xbf800000
   \      0x31A   0x.... 0x....      BL       __aeabi_fadd
   \      0x31E   0x4641             MOV      R1,R8
   \      0x320   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x324   0xD200             BCS.N    ??look_for_lines_to_connect_21
   \      0x326   0x4680             MOV      R8,R0
   \                     ??look_for_lines_to_connect_21: (+1)
   \      0x328   0xF8CD 0x8000      STR      R8,[SP, #+0]
   \      0x32C   0x68F0             LDR      R0,[R6, #+12]
   \      0x32E   0xF04F 0x517E      MOV      R1,#+1065353216
   \      0x332   0x.... 0x....      BL       __aeabi_fadd
   \      0x336   0x4683             MOV      R11,R0
   \      0x338   0x4648             MOV      R0,R9
   \      0x33A   0x4659             MOV      R1,R11
   \      0x33C   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x340   0xD201             BCS.N    ??look_for_lines_to_connect_22
   \      0x342   0x46D9             MOV      R9,R11
   \      0x344   0xE008             B.N      ??look_for_lines_to_connect_23
   \                     ??look_for_lines_to_connect_22: (+1)
   \      0x346   0x69B0             LDR      R0,[R6, #+24]
   \      0x348   0x....             LDR.N    R1,??DataTable37_11  ;; 0xbf800000
   \      0x34A   0x.... 0x....      BL       __aeabi_fadd
   \      0x34E   0x4649             MOV      R1,R9
   \      0x350   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x354   0xD200             BCS.N    ??look_for_lines_to_connect_23
   \      0x356   0x4681             MOV      R9,R0
   \                     ??look_for_lines_to_connect_23: (+1)
   \      0x358   0x4650             MOV      R0,R10
   \      0x35A   0x4659             MOV      R1,R11
   \      0x35C   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x360   0xD201             BCS.N    ??look_for_lines_to_connect_24
   \      0x362   0x46DA             MOV      R10,R11
   \      0x364   0xE008             B.N      ??look_for_lines_to_connect_25
   \                     ??look_for_lines_to_connect_24: (+1)
   \      0x366   0x69B0             LDR      R0,[R6, #+24]
   \      0x368   0x....             LDR.N    R1,??DataTable37_11  ;; 0xbf800000
   \      0x36A   0x.... 0x....      BL       __aeabi_fadd
   \      0x36E   0x4651             MOV      R1,R10
   \      0x370   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x374   0xD200             BCS.N    ??look_for_lines_to_connect_25
   \      0x376   0x4682             MOV      R10,R0
   \                     ??look_for_lines_to_connect_25: (+1)
   \      0x378   0x....             LDR.N    R0,??DataTable37_1
   \      0x37A   0x7800             LDRB     R0,[R0, #+0]
   \      0x37C   0x2800             CMP      R0,#+0
   \      0x37E   0xF43F 0xAE5F      BEQ.W    ??look_for_lines_to_connect_5
   \      0x382   0x4641             MOV      R1,R8
   \      0x384   0x.... 0x....      ADR.W    R0,?_13
   \      0x388   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0x38C   0xEA4F 0x0109      MOV.W    R1,R9
   \      0x390   0x....             ADR.N    R0,?_10
   \      0x392   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0x396   0x9900             LDR      R1,[SP, #+0]
   \      0x398   0x....             ADR.N    R0,?_11
   \      0x39A   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0x39E   0x4651             MOV      R1,R10
   \      0x3A0   0x....             ADR.N    R0,?_12
   \      0x3A2   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0x3A6   0x....             LDR.N    R6,??DataTable37_2
   \      0x3A8   0x7830             LDRB     R0,[R6, #+0]
   \      0x3AA   0x2800             CMP      R0,#+0
   \      0x3AC   0xF47F 0xAE36      BNE.W    ??look_for_lines_to_connect_3
   \      0x3B0   0x2129             MOVS     R1,#+41
   \      0x3B2   0x....             LDR.N    R0,??DataTable37_3
   \      0x3B4   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x3B8   0xE636             B.N      ??look_for_lines_to_connect_4
    516                        }
    517                      }
    518                    }
    519                  }
    520                }
    521              }
    522            }
   \                     ??look_for_lines_to_connect_26: (+1)
   \      0x3BA   0xB009             ADD      SP,SP,#+36
   \      0x3BC   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   \                     ??look_for_lines_to_connect_8: (+1)
   \      0x3C0   0x1C64             ADDS     R4,R4,#+1
   \                     ??look_for_lines_to_connect_0: (+1)
   \      0x3C2   0x.... 0x....      LDR.W    R0,??DataTable38_4
   \      0x3C6   0x9002             STR      R0,[SP, #+8]
   \      0x3C8   0x4620             MOV      R0,R4
   \      0x3CA   0x9902             LDR      R1,[SP, #+8]
   \      0x3CC   0x7809             LDRB     R1,[R1, #+0]
   \      0x3CE   0xB2C0             UXTB     R0,R0
   \      0x3D0   0x4288             CMP      R0,R1
   \      0x3D2   0xD2F2             BCS.N    ??look_for_lines_to_connect_26
   \      0x3D4   0x2500             MOVS     R5,#+0
   \      0x3D6   0xE65D             B.N      ??look_for_lines_to_connect_7
    523          

   \                                 In section .text, align 2, keep-with-next
    524            void move_to(const float &x, const float &y, const float &z, const float &e_delta) {
   \                     _Z7move_toRKfS0_S0_S0_: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0x4605             MOV      R5,R0
   \        0x6   0x460E             MOV      R6,R1
   \        0x8   0x461F             MOV      R7,R3
    525              float feed_value;
    526              static float last_z = -999.99;
    527          
    528              bool has_xy_component = (x != current_position[X_AXIS] || y != current_position[Y_AXIS]); // Check if X or Y is involved in the movement.
   \        0xA   0x.... 0x....      LDR.W    R8,??DataTable41_1
   \        0xE   0xF8D8 0x9000      LDR      R9,[R8, #+0]
   \       0x12   0x6828             LDR      R0,[R5, #+0]
   \       0x14   0x4649             MOV      R1,R9
   \       0x16   0x.... 0x....      BL       __aeabi_cfcmpeq
   \       0x1A   0xD105             BNE.N    ??move_to_0
   \       0x1C   0x6830             LDR      R0,[R6, #+0]
   \       0x1E   0xF8D8 0x1004      LDR      R1,[R8, #+4]
   \       0x22   0x.... 0x....      BL       __aeabi_cfcmpeq
   \       0x26   0xD002             BEQ.N    ??move_to_1
   \                     ??move_to_0: (+1)
   \       0x28   0xF04F 0x0A01      MOV      R10,#+1
   \       0x2C   0xE001             B.N      ??move_to_2
   \                     ??move_to_1: (+1)
   \       0x2E   0xF04F 0x0A00      MOV      R10,#+0
   \                     ??move_to_2: (+1)
   \       0x32   0x4614             MOV      R4,R2
    529          
    530              //if (ubl.g26_debug_flag) SERIAL_ECHOLNPAIR("in move_to()  has_xy_component:", (int)has_xy_component);
    531          
    532              if (z != last_z) {
   \       0x34   0x6822             LDR      R2,[R4, #+0]
   \       0x36   0x.... 0x....      LDR.W    R11,??DataTable41_2
   \       0x3A   0x.... 0x....      LDR.W    R3,??DataTable41_3
   \       0x3E   0x4610             MOV      R0,R2
   \       0x40   0x6819             LDR      R1,[R3, #+0]
   \       0x42   0x.... 0x....      BL       __aeabi_cfcmpeq
   \       0x46   0xD01B             BEQ.N    ??move_to_3
    533                //if (ubl.g26_debug_flag) SERIAL_ECHOLNPAIR("in move_to()  changing Z to ", (int)z);
    534          
    535                last_z = z;
   \       0x48   0x601A             STR      R2,[R3, #+0]
    536                feed_value = planner.max_feedrate_mm_s[Z_AXIS]/(3.0);  // Base the feed rate off of the configured Z_AXIS feed rate
   \       0x4A   0xF8DB 0x0008      LDR      R0,[R11, #+8]
   \       0x4E   0x.... 0x....      LDR.W    R1,??DataTable41_4  ;; 0x40400000
   \       0x52   0x.... 0x....      BL       __aeabi_fdiv
   \       0x56   0x9000             STR      R0,[SP, #+0]
    537          
    538                destination[X_AXIS] = current_position[X_AXIS];
   \       0x58   0x.... 0x....      LDR.W    R0,??DataTable41_5
   \       0x5C   0xF8C0 0x9000      STR      R9,[R0, #+0]
    539                destination[Y_AXIS] = current_position[Y_AXIS];
   \       0x60   0xF8D8 0x1004      LDR      R1,[R8, #+4]
   \       0x64   0x6041             STR      R1,[R0, #+4]
    540                destination[Z_AXIS] = z;                          // We know the last_z==z or we wouldn't be in this block of code.
   \       0x66   0x6821             LDR      R1,[R4, #+0]
   \       0x68   0x6081             STR      R1,[R0, #+8]
    541                destination[E_AXIS] = current_position[E_AXIS];
   \       0x6A   0xF8D8 0x100C      LDR      R1,[R8, #+12]
   \       0x6E   0x60C1             STR      R1,[R0, #+12]
    542          
    543                ubl_line_to_destination(feed_value, 0);
   \       0x70   0x2100             MOVS     R1,#+0
   \       0x72   0x4668             MOV      R0,SP
   \       0x74   0x.... 0x....      BL       _Z23ubl_line_to_destinationRKfh
    544          
    545                stepper.synchronize();
   \       0x78   0x.... 0x....      BL       _ZN7Stepper11synchronizeEv
    546                set_destination_to_current();
   \       0x7C   0x.... 0x....      BL       _Z26set_destination_to_currentv
    547          
    548                //if (ubl.g26_debug_flag) debug_current_and_destination(PSTR(" in move_to() done with Z move"));
    549              }
    550          
    551              // Check if X or Y is involved in the movement.
    552              // Yes: a 'normal' movement. No: a retract() or un_retract()
    553              feed_value = has_xy_component ? PLANNER_XY_FEEDRATE() / 10.0 : planner.max_feedrate_mm_s[E_AXIS] / 1.5;
   \                     ??move_to_3: (+1)
   \       0x80   0xF1BA 0x0F00      CMP      R10,#+0
   \       0x84   0xD00E             BEQ.N    ??move_to_4
   \       0x86   0xF8DB 0x1004      LDR      R1,[R11, #+4]
   \       0x8A   0xF8DB 0x0000      LDR      R0,[R11, #+0]
   \       0x8E   0x.... 0x....      BL       __aeabi_cfcmple
   \       0x92   0xD200             BCS.N    ??move_to_5
   \       0x94   0x4601             MOV      R1,R0
   \                     ??move_to_5: (+1)
   \       0x96   0x4608             MOV      R0,R1
   \       0x98   0x.... 0x....      LDR.W    R1,??DataTable41_6  ;; 0x41200000
   \       0x9C   0x.... 0x....      BL       __aeabi_fdiv
   \       0xA0   0x9000             STR      R0,[SP, #+0]
   \       0xA2   0xE006             B.N      ??move_to_6
   \                     ??move_to_4: (+1)
   \       0xA4   0xF8DB 0x000C      LDR      R0,[R11, #+12]
   \       0xA8   0xF04F 0x517F      MOV      R1,#+1069547520
   \       0xAC   0x.... 0x....      BL       __aeabi_fdiv
   \       0xB0   0x9000             STR      R0,[SP, #+0]
    554          
    555              if (ubl.g26_debug_flag) SERIAL_ECHOLNPAIR("in move_to() feed_value for XY:", feed_value);
   \                     ??move_to_6: (+1)
   \       0xB2   0x....             LDR.N    R0,??DataTable37_1
   \       0xB4   0x7800             LDRB     R0,[R0, #+0]
   \       0xB6   0x2800             CMP      R0,#+0
   \       0xB8   0xD012             BEQ.N    ??move_to_7
   \       0xBA   0x9900             LDR      R1,[SP, #+0]
   \       0xBC   0x.... 0x....      ADR.W    R0,?_15
   \       0xC0   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \       0xC4   0x....             LDR.N    R0,??DataTable37_2
   \       0xC6   0x7800             LDRB     R0,[R0, #+0]
   \       0xC8   0x2800             CMP      R0,#+0
   \       0xCA   0xD104             BNE.N    ??move_to_8
   \       0xCC   0x210A             MOVS     R1,#+10
   \       0xCE   0x....             LDR.N    R0,??DataTable37_3
   \       0xD0   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \       0xD4   0xE004             B.N      ??move_to_7
   \                     ??move_to_8: (+1)
   \       0xD6   0x2200             MOVS     R2,#+0
   \       0xD8   0x210A             MOVS     R1,#+10
   \       0xDA   0x....             LDR.N    R0,??DataTable37_8
   \       0xDC   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
    556          
    557              destination[X_AXIS] = x;
   \                     ??move_to_7: (+1)
   \       0xE0   0x.... 0x....      LDR.W    R4,??DataTable41_5
   \       0xE4   0x6828             LDR      R0,[R5, #+0]
   \       0xE6   0x6020             STR      R0,[R4, #+0]
    558              destination[Y_AXIS] = y;
   \       0xE8   0x6830             LDR      R0,[R6, #+0]
   \       0xEA   0x6060             STR      R0,[R4, #+4]
    559              destination[E_AXIS] += e_delta;
   \       0xEC   0x68E1             LDR      R1,[R4, #+12]
   \       0xEE   0x6838             LDR      R0,[R7, #+0]
   \       0xF0   0x.... 0x....      BL       __aeabi_fadd
   \       0xF4   0x60E0             STR      R0,[R4, #+12]
    560          
    561              //if (ubl.g26_debug_flag) debug_current_and_destination(PSTR(" in move_to() doing last move"));
    562          
    563              ubl_line_to_destination(feed_value, 0);
   \       0xF6   0x2100             MOVS     R1,#+0
   \       0xF8   0x4668             MOV      R0,SP
   \       0xFA   0x.... 0x....      BL       _Z23ubl_line_to_destinationRKfh
    564          
    565              //if (ubl.g26_debug_flag) debug_current_and_destination(PSTR(" in move_to() after last move"));
    566          
    567              stepper.synchronize();
   \       0xFE   0x.... 0x....      BL       _ZN7Stepper11synchronizeEv
    568              set_destination_to_current();
   \      0x102   0x.... 0x....      BL       _Z26set_destination_to_currentv
    569          
    570            }
   \      0x106   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return

   \                                 In section .data, align 4
   \                     `move_to(float const &, float const &, float const &, float const &)::last_z`:
   \        0x0   0xC479'FF5C        DC32 0C479FF5CH
    571          

   \                                 In section .text, align 2, keep-with-next
    572            void retract_filament(float where[XYZE]) {
   \                     _Z16retract_filamentPf: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x4604             MOV      R4,R0
    573              if (!g26_retracted) { // Only retract if we are not already retracted!
   \        0x4   0x....             LDR.N    R1,??DataTable38_8
   \        0x6   0x7808             LDRB     R0,[R1, #+0]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD10D             BNE.N    ??retract_filament_0
    574                g26_retracted = true;
   \        0xC   0x2001             MOVS     R0,#+1
   \        0xE   0x7008             STRB     R0,[R1, #+0]
    575                //if (ubl.g26_debug_flag) SERIAL_ECHOLNPGM(" Decided to do retract.");
    576                move_to(where[X_AXIS], where[Y_AXIS], where[Z_AXIS], -1.0 * retraction_multiplier);
   \       0x10   0x69C9             LDR      R1,[R1, #+28]
   \       0x12   0x....             LDR.N    R0,??DataTable37_11  ;; 0xbf800000
   \       0x14   0x.... 0x....      BL       __aeabi_fmul
   \       0x18   0x9000             STR      R0,[SP, #+0]
   \       0x1A   0x466B             MOV      R3,SP
   \       0x1C   0xF104 0x0208      ADD      R2,R4,#+8
   \       0x20   0x1D21             ADDS     R1,R4,#+4
   \       0x22   0x4620             MOV      R0,R4
   \       0x24   0x.... 0x....      BL       _Z7move_toRKfS0_S0_S0_
    577                //if (ubl.g26_debug_flag) SERIAL_ECHOLNPGM(" Retraction done.");
    578              }
    579            }
   \                     ??retract_filament_0: (+1)
   \       0x28   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    580          

   \                                 In section .text, align 2, keep-with-next
    581            void un_retract_filament(float where[XYZE]) {
   \                     _Z19un_retract_filamentPf: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4605             MOV      R5,R0
    582              if (g26_retracted) { // Only un-retract if we are retracted.
   \        0x4   0x....             LDR.N    R4,??DataTable38_8
   \        0x6   0x7820             LDRB     R0,[R4, #+0]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD014             BEQ.N    ??un_retract_filament_0
    583                move_to(where[X_AXIS], where[Y_AXIS], where[Z_AXIS], 1.2 * retraction_multiplier);
   \        0xC   0x69E0             LDR      R0,[R4, #+28]
   \        0xE   0x.... 0x....      BL       __aeabi_f2d
   \       0x12   0xF04F 0x3233      MOV      R2,#+858993459
   \       0x16   0x.... 0x....      LDR.W    R3,??DataTable41_7  ;; 0x3ff33333
   \       0x1A   0x.... 0x....      BL       __aeabi_dmul
   \       0x1E   0x.... 0x....      BL       __aeabi_d2f
   \       0x22   0x9000             STR      R0,[SP, #+0]
   \       0x24   0x466B             MOV      R3,SP
   \       0x26   0xF105 0x0208      ADD      R2,R5,#+8
   \       0x2A   0x1D29             ADDS     R1,R5,#+4
   \       0x2C   0x4628             MOV      R0,R5
   \       0x2E   0x.... 0x....      BL       _Z7move_toRKfS0_S0_S0_
    584                g26_retracted = false;
   \       0x32   0x2000             MOVS     R0,#+0
   \       0x34   0x7020             STRB     R0,[R4, #+0]
    585                //if (ubl.g26_debug_flag) SERIAL_ECHOLNPGM(" unretract done.");
    586              }
    587            }
   \                     ??un_retract_filament_0: (+1)
   \       0x36   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    588          
    589            /**
    590             * print_line_from_here_to_there() takes two cartesian coordinates and draws a line from one
    591             * to the other.  But there are really three sets of coordinates involved.  The first coordinate
    592             * is the present location of the nozzle.  We don't necessarily want to print from this location.
    593             * We first need to move the nozzle to the start of line segment where we want to print.  Once
    594             * there, we can use the two coordinates supplied to draw the line.
    595             *
    596             * Note:  Although we assume the first set of coordinates is the start of the line and the second
    597             * set of coordinates is the end of the line, it does not always work out that way.  This function
    598             * optimizes the movement to minimize the travel distance before it can start printing.  This saves
    599             * a lot of time and eleminates a lot of non-sensical movement of the nozzle.   However, it does
    600             * cause a lot of very little short retracement of th nozzle when it draws the very first line
    601             * segment of a 'circle'.   The time this requires is very short and is easily saved by the other
    602             * cases where the optimization comes into play.
    603             */

   \                                 In section .text, align 2, keep-with-next
    604            void print_line_from_here_to_there(const float &sx, const float &sy, const float &sz, const float &ex, const float &ey, const float &ez) {
   \                     _Z29print_line_from_here_to_thereRKfS0_S0_S0_S0_S0_: (+1)
   \        0x0   0xE92D 0x4FF4      PUSH     {R2,R4-R11,LR}
   \        0x4   0xB084             SUB      SP,SP,#+16
   \        0x6   0x4605             MOV      R5,R0
   \        0x8   0x460E             MOV      R6,R1
   \        0xA   0x4699             MOV      R9,R3
    605              const float dx_s = current_position[X_AXIS] - sx,   // find our distance from the start of the actual line segment
    606                          dy_s = current_position[Y_AXIS] - sy,
   \        0xC   0x.... 0x....      LDR.W    R0,??DataTable41_1
   \       0x10   0x6840             LDR      R0,[R0, #+4]
   \       0x12   0x9003             STR      R0,[SP, #+12]
   \       0x14   0x6831             LDR      R1,[R6, #+0]
   \       0x16   0x.... 0x....      BL       __aeabi_fsub
   \       0x1A   0x4680             MOV      R8,R0
    607                          dist_start = HYPOT2(dx_s, dy_s),        // We don't need to do a sqrt(), we can compare the distance^2
   \       0x1C   0x.... 0x....      LDR.W    R0,??DataTable41_1
   \       0x20   0x6800             LDR      R0,[R0, #+0]
   \       0x22   0x9001             STR      R0,[SP, #+4]
   \       0x24   0x6829             LDR      R1,[R5, #+0]
   \       0x26   0x.... 0x....      BL       __aeabi_fsub
   \       0x2A   0x4683             MOV      R11,R0
   \       0x2C   0x2402             MOVS     R4,#+2
   \       0x2E   0xF04F 0x577E      MOV      R7,#+1065353216
   \       0x32   0x46BA             MOV      R10,R7
   \       0x34   0xE004             B.N      ??print_line_from_here_to_there_0
   \                     ??print_line_from_here_to_there_1: (+1)
   \       0x36   0x4658             MOV      R0,R11
   \       0x38   0x4659             MOV      R1,R11
   \       0x3A   0x.... 0x....      BL       __aeabi_fmul
   \       0x3E   0x4683             MOV      R11,R0
   \                     ??print_line_from_here_to_there_0: (+1)
   \       0x40   0x07E0             LSLS     R0,R4,#+31
   \       0x42   0xD504             BPL.N    ??print_line_from_here_to_there_2
   \       0x44   0x4650             MOV      R0,R10
   \       0x46   0x4659             MOV      R1,R11
   \       0x48   0x.... 0x....      BL       __aeabi_fmul
   \       0x4C   0x4682             MOV      R10,R0
   \                     ??print_line_from_here_to_there_2: (+1)
   \       0x4E   0x0864             LSRS     R4,R4,#+1
   \       0x50   0xD1F1             BNE.N    ??print_line_from_here_to_there_1
   \       0x52   0x2402             MOVS     R4,#+2
   \       0x54   0x46BB             MOV      R11,R7
   \       0x56   0xE004             B.N      ??print_line_from_here_to_there_3
   \                     ??print_line_from_here_to_there_4: (+1)
   \       0x58   0x4640             MOV      R0,R8
   \       0x5A   0x4641             MOV      R1,R8
   \       0x5C   0x.... 0x....      BL       __aeabi_fmul
   \       0x60   0x4680             MOV      R8,R0
   \                     ??print_line_from_here_to_there_3: (+1)
   \       0x62   0x07E0             LSLS     R0,R4,#+31
   \       0x64   0xD504             BPL.N    ??print_line_from_here_to_there_5
   \       0x66   0x4658             MOV      R0,R11
   \       0x68   0x4641             MOV      R1,R8
   \       0x6A   0x.... 0x....      BL       __aeabi_fmul
   \       0x6E   0x4683             MOV      R11,R0
   \                     ??print_line_from_here_to_there_5: (+1)
   \       0x70   0x0864             LSRS     R4,R4,#+1
   \       0x72   0xD1F1             BNE.N    ??print_line_from_here_to_there_4
   \       0x74   0xF8DD 0x8038      LDR      R8,[SP, #+56]
   \       0x78   0xF8CD 0x9008      STR      R9,[SP, #+8]
   \       0x7C   0x4650             MOV      R0,R10
   \       0x7E   0x4659             MOV      R1,R11
   \       0x80   0x.... 0x....      BL       __aeabi_fadd
   \       0x84   0x9000             STR      R0,[SP, #+0]
    608                                                                  // to save computation time
    609                          dx_e = current_position[X_AXIS] - ex,   // find our distance from the end of the actual line segment
    610                          dy_e = current_position[Y_AXIS] - ey,
   \       0x86   0x9803             LDR      R0,[SP, #+12]
   \       0x88   0xF8D8 0x1000      LDR      R1,[R8, #+0]
   \       0x8C   0x.... 0x....      BL       __aeabi_fsub
   \       0x90   0x4682             MOV      R10,R0
    611                          dist_end = HYPOT2(dx_e, dy_e),
   \       0x92   0x9801             LDR      R0,[SP, #+4]
   \       0x94   0x9902             LDR      R1,[SP, #+8]
   \       0x96   0x6809             LDR      R1,[R1, #+0]
   \       0x98   0x.... 0x....      BL       __aeabi_fsub
   \       0x9C   0x4683             MOV      R11,R0
   \       0x9E   0x2402             MOVS     R4,#+2
   \       0xA0   0x46B9             MOV      R9,R7
   \       0xA2   0xE004             B.N      ??print_line_from_here_to_there_6
   \                     ??print_line_from_here_to_there_7: (+1)
   \       0xA4   0x4658             MOV      R0,R11
   \       0xA6   0x4659             MOV      R1,R11
   \       0xA8   0x.... 0x....      BL       __aeabi_fmul
   \       0xAC   0x4683             MOV      R11,R0
   \                     ??print_line_from_here_to_there_6: (+1)
   \       0xAE   0x07E0             LSLS     R0,R4,#+31
   \       0xB0   0xD504             BPL.N    ??print_line_from_here_to_there_8
   \       0xB2   0x4648             MOV      R0,R9
   \       0xB4   0x4659             MOV      R1,R11
   \       0xB6   0x.... 0x....      BL       __aeabi_fmul
   \       0xBA   0x4681             MOV      R9,R0
   \                     ??print_line_from_here_to_there_8: (+1)
   \       0xBC   0x0864             LSRS     R4,R4,#+1
   \       0xBE   0xD1F1             BNE.N    ??print_line_from_here_to_there_7
   \       0xC0   0x2402             MOVS     R4,#+2
   \       0xC2   0x46BB             MOV      R11,R7
   \       0xC4   0xE004             B.N      ??print_line_from_here_to_there_9
   \                     ??print_line_from_here_to_there_10: (+1)
   \       0xC6   0x4650             MOV      R0,R10
   \       0xC8   0x4651             MOV      R1,R10
   \       0xCA   0x.... 0x....      BL       __aeabi_fmul
   \       0xCE   0x4682             MOV      R10,R0
   \                     ??print_line_from_here_to_there_9: (+1)
   \       0xD0   0x07E0             LSLS     R0,R4,#+31
   \       0xD2   0xD504             BPL.N    ??print_line_from_here_to_there_11
   \       0xD4   0x4658             MOV      R0,R11
   \       0xD6   0x4651             MOV      R1,R10
   \       0xD8   0x.... 0x....      BL       __aeabi_fmul
   \       0xDC   0x4683             MOV      R11,R0
   \                     ??print_line_from_here_to_there_11: (+1)
   \       0xDE   0x0864             LSRS     R4,R4,#+1
   \       0xE0   0xD1F1             BNE.N    ??print_line_from_here_to_there_10
   \       0xE2   0x4648             MOV      R0,R9
   \       0xE4   0x4659             MOV      R1,R11
   \       0xE6   0x.... 0x....      BL       __aeabi_fadd
   \       0xEA   0x4682             MOV      R10,R0
    612          
    613                          line_length = HYPOT(ex - sx, ey - sy);
   \       0xEC   0x9802             LDR      R0,[SP, #+8]
   \       0xEE   0x6800             LDR      R0,[R0, #+0]
   \       0xF0   0x6829             LDR      R1,[R5, #+0]
   \       0xF2   0x.... 0x....      BL       __aeabi_fsub
   \       0xF6   0x4683             MOV      R11,R0
   \       0xF8   0x2402             MOVS     R4,#+2
   \       0xFA   0x46B9             MOV      R9,R7
   \       0xFC   0xE004             B.N      ??print_line_from_here_to_there_12
   \                     ??print_line_from_here_to_there_13: (+1)
   \       0xFE   0x4658             MOV      R0,R11
   \      0x100   0x4659             MOV      R1,R11
   \      0x102   0x.... 0x....      BL       __aeabi_fmul
   \      0x106   0x4683             MOV      R11,R0
   \                     ??print_line_from_here_to_there_12: (+1)
   \      0x108   0x07E0             LSLS     R0,R4,#+31
   \      0x10A   0xD504             BPL.N    ??print_line_from_here_to_there_14
   \      0x10C   0x4648             MOV      R0,R9
   \      0x10E   0x4659             MOV      R1,R11
   \      0x110   0x.... 0x....      BL       __aeabi_fmul
   \      0x114   0x4681             MOV      R9,R0
   \                     ??print_line_from_here_to_there_14: (+1)
   \      0x116   0x0864             LSRS     R4,R4,#+1
   \      0x118   0xD1F1             BNE.N    ??print_line_from_here_to_there_13
   \      0x11A   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \      0x11E   0x6831             LDR      R1,[R6, #+0]
   \      0x120   0x.... 0x....      BL       __aeabi_fsub
   \      0x124   0x4683             MOV      R11,R0
   \      0x126   0x2402             MOVS     R4,#+2
   \      0x128   0xE004             B.N      ??print_line_from_here_to_there_15
   \                     ??print_line_from_here_to_there_16: (+1)
   \      0x12A   0x4658             MOV      R0,R11
   \      0x12C   0x4659             MOV      R1,R11
   \      0x12E   0x.... 0x....      BL       __aeabi_fmul
   \      0x132   0x4683             MOV      R11,R0
   \                     ??print_line_from_here_to_there_15: (+1)
   \      0x134   0x07E0             LSLS     R0,R4,#+31
   \      0x136   0xD504             BPL.N    ??print_line_from_here_to_there_17
   \      0x138   0x4638             MOV      R0,R7
   \      0x13A   0x4659             MOV      R1,R11
   \      0x13C   0x.... 0x....      BL       __aeabi_fmul
   \      0x140   0x4607             MOV      R7,R0
   \                     ??print_line_from_here_to_there_17: (+1)
   \      0x142   0x0864             LSRS     R4,R4,#+1
   \      0x144   0xD1F1             BNE.N    ??print_line_from_here_to_there_16
   \      0x146   0x4648             MOV      R0,R9
   \      0x148   0x4639             MOV      R1,R7
   \      0x14A   0x.... 0x....      BL       __aeabi_fadd
   \      0x14E   0x.... 0x....      BL       sqrtf
   \      0x152   0x4681             MOV      R9,R0
   \      0x154   0x9C04             LDR      R4,[SP, #+16]
   \      0x156   0x9F0F             LDR      R7,[SP, #+60]
    614          
    615              // If the end point of the line is closer to the nozzle, flip the direction,
    616              // moving from the end to the start. On very small lines the optimization isn't worth it.
    617              if (dist_end < dist_start && (SIZE_OF_INTERSECTION_CIRCLES) < abs(line_length)) {
   \      0x158   0x4650             MOV      R0,R10
   \      0x15A   0x9900             LDR      R1,[SP, #+0]
   \      0x15C   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x160   0xD20F             BCS.N    ??print_line_from_here_to_there_18
   \      0x162   0xF029 0x4000      BIC      R0,R9,#0x80000000
   \      0x166   0x.... 0x....      LDR.W    R1,??DataTable41_8  ;; 0x40a00001
   \      0x16A   0x.... 0x....      BL       __aeabi_cfrcmple
   \      0x16E   0xD808             BHI.N    ??print_line_from_here_to_there_18
    618                //if (ubl.g26_debug_flag) SERIAL_ECHOLNPGM("  Reversing start and end of print_line_from_here_to_there()");
    619                return print_line_from_here_to_there(ex, ey, ez, sx, sy, sz);
   \      0x170   0x9401             STR      R4,[SP, #+4]
   \      0x172   0x9600             STR      R6,[SP, #+0]
   \      0x174   0x462B             MOV      R3,R5
   \      0x176   0x463A             MOV      R2,R7
   \      0x178   0x4641             MOV      R1,R8
   \      0x17A   0x9802             LDR      R0,[SP, #+8]
   \      0x17C   0xF7FF 0xFF40      BL       _Z29print_line_from_here_to_thereRKfS0_S0_S0_S0_S0_
   \      0x180   0xE025             B.N      ??print_line_from_here_to_there_19
    620              }
    621          
    622              // Decide whether to retract.
    623          
    624              if (dist_start > 2.0) {
   \                     ??print_line_from_here_to_there_18: (+1)
   \      0x182   0x.... 0x....      LDR.W    R10,??DataTable41_5
   \      0x186   0x9800             LDR      R0,[SP, #+0]
   \      0x188   0x.... 0x....      LDR.W    R1,??DataTable41_9  ;; 0x40000001
   \      0x18C   0x.... 0x....      BL       __aeabi_cfrcmple
   \      0x190   0xD802             BHI.N    ??print_line_from_here_to_there_20
    625                retract_filament(destination);
   \      0x192   0x4650             MOV      R0,R10
   \      0x194   0x.... 0x....      BL       _Z16retract_filamentPf
    626                //if (ubl.g26_debug_flag) SERIAL_ECHOLNPGM("  filament retracted.");
    627              }
    628              move_to(sx, sy, sz, 0.0); // Get to the starting point with no extrusion
   \                     ??print_line_from_here_to_there_20: (+1)
   \      0x198   0x2000             MOVS     R0,#+0
   \      0x19A   0x9000             STR      R0,[SP, #+0]
   \      0x19C   0x466B             MOV      R3,SP
   \      0x19E   0x4622             MOV      R2,R4
   \      0x1A0   0x4631             MOV      R1,R6
   \      0x1A2   0x4628             MOV      R0,R5
   \      0x1A4   0x.... 0x....      BL       _Z7move_toRKfS0_S0_S0_
    629          
    630              const float e_pos_delta = line_length * g26_e_axis_feedrate * extrusion_multiplier;
   \      0x1A8   0x.... 0x....      LDR.W    R4,??DataTable41_10
   \      0x1AC   0x68E0             LDR      R0,[R4, #+12]
   \      0x1AE   0x4649             MOV      R1,R9
   \      0x1B0   0x.... 0x....      BL       __aeabi_fmul
   \      0x1B4   0x69A1             LDR      R1,[R4, #+24]
   \      0x1B6   0x.... 0x....      BL       __aeabi_fmul
   \      0x1BA   0x9000             STR      R0,[SP, #+0]
    631          
    632              un_retract_filament(destination);
   \      0x1BC   0x4650             MOV      R0,R10
   \      0x1BE   0x.... 0x....      BL       _Z19un_retract_filamentPf
    633          
    634              //if (ubl.g26_debug_flag) {
    635              //  SERIAL_ECHOLNPGM("  doing printing move.");
    636              //  debug_current_and_destination(PSTR("doing final move_to() inside print_line_from_here_to_there()"));
    637              //}
    638              move_to(ex, ey, ez, e_pos_delta);  // Get to the ending point with an appropriate amount of extrusion
   \      0x1C2   0x466B             MOV      R3,SP
   \      0x1C4   0x463A             MOV      R2,R7
   \      0x1C6   0x4641             MOV      R1,R8
   \      0x1C8   0x9802             LDR      R0,[SP, #+8]
   \      0x1CA   0x.... 0x....      BL       _Z7move_toRKfS0_S0_S0_
    639            }
   \                     ??print_line_from_here_to_there_19: (+1)
   \      0x1CE   0xB005             ADD      SP,SP,#+20
   \      0x1D0   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    640          
    641            /**
    642             * This function used to be inline code in G26. But there are so many
    643             * parameters it made sense to turn them into static globals and get
    644             * this code out of sight of the main routine.
    645             */

   \                                 In section .text, align 2, keep-with-next
    646            bool parse_G26_parameters() {
   \                     _Z20parse_G26_parametersv: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
    647          
    648              extrusion_multiplier  = EXTRUSION_MULTIPLIER;
   \        0x4   0x.... 0x....      LDR.W    R6,??DataTable41_10
   \        0x8   0xF04F 0x507E      MOV      R0,#+1065353216
   \        0xC   0x61B0             STR      R0,[R6, #+24]
    649              retraction_multiplier = RETRACTION_MULTIPLIER;
   \        0xE   0x61F0             STR      R0,[R6, #+28]
    650              nozzle                = NOZZLE;
   \       0x10   0x.... 0x....      LDR.W    R0,??DataTable41_11  ;; 0x3ecccccd
   \       0x14   0x6230             STR      R0,[R6, #+32]
    651              filament_diameter     = FILAMENT;
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable41_12  ;; 0x3fe00000
   \       0x1A   0x6270             STR      R0,[R6, #+36]
    652              layer_height          = LAYER_HEIGHT;
   \       0x1C   0x.... 0x....      LDR.W    R0,??DataTable41_13  ;; 0x3e4ccccd
   \       0x20   0x6170             STR      R0,[R6, #+20]
    653              prime_length          = PRIME_LENGTH;
   \       0x22   0x.... 0x....      LDR.W    R0,??DataTable41_6  ;; 0x41200000
   \       0x26   0x62B0             STR      R0,[R6, #+40]
    654              bed_temp              = BED_TEMP;
   \       0x28   0x203C             MOVS     R0,#+60
   \       0x2A   0x80B0             STRH     R0,[R6, #+4]
    655              hotend_temp           = HOTEND_TEMP;
   \       0x2C   0x20CD             MOVS     R0,#+205
   \       0x2E   0x80F0             STRH     R0,[R6, #+6]
    656              ooze_amount           = OOZE_AMOUNT;
   \       0x30   0x.... 0x....      LDR.W    R0,??DataTable41_14  ;; 0x3e99999a
   \       0x34   0x6370             STR      R0,[R6, #+52]
    657              prime_flag            = 0;
   \       0x36   0x2000             MOVS     R0,#+0
   \       0x38   0x7070             STRB     R0,[R6, #+1]
    658              keep_heaters_on       = false;
   \       0x3A   0x70B0             STRB     R0,[R6, #+2]
    659          
    660              if (code_seen('B')) {
   \       0x3C   0x2042             MOVS     R0,#+66
   \       0x3E   0x.... 0x....      BL       _Z9code_seenc
   \       0x42   0x2800             CMP      R0,#+0
   \       0x44   0xD00B             BEQ.N    ??parse_G26_parameters_0
    661                bed_temp = code_value_temp_abs();
   \       0x46   0x.... 0x....      BL       _Z19code_value_temp_absv
   \       0x4A   0x80B0             STRH     R0,[R6, #+4]
    662                if (!WITHIN(bed_temp, 15, 140)) {
   \       0x4C   0x380F             SUBS     R0,R0,#+15
   \       0x4E   0x287E             CMP      R0,#+126
   \       0x50   0xD305             BCC.N    ??parse_G26_parameters_0
    663                  SERIAL_PROTOCOLLNPGM("?Specified bed temperature not plausible.");
   \       0x52   0x.... 0x....      ADR.W    R0,?_16
   \       0x56   0x.... 0x....      BL       _Z14serialprintPGMPKc
    664                  return UBL_ERR;
   \       0x5A   0x2001             MOVS     R0,#+1
   \       0x5C   0xE1A3             B.N      ??parse_G26_parameters_1
    665                }
    666              }
    667          
    668              if (code_seen('C')) continue_with_closest++;
   \                     ??parse_G26_parameters_0: (+1)
   \       0x5E   0x2043             MOVS     R0,#+67
   \       0x60   0x.... 0x....      BL       _Z9code_seenc
   \       0x64   0x2800             CMP      R0,#+0
   \       0x66   0xD002             BEQ.N    ??parse_G26_parameters_2
   \       0x68   0x68B0             LDR      R0,[R6, #+8]
   \       0x6A   0x1C40             ADDS     R0,R0,#+1
   \       0x6C   0x60B0             STR      R0,[R6, #+8]
    669          
    670              if (code_seen('L')) {
   \                     ??parse_G26_parameters_2: (+1)
   \       0x6E   0x204C             MOVS     R0,#+76
   \       0x70   0x.... 0x....      BL       _Z9code_seenc
   \       0x74   0x2800             CMP      R0,#+0
   \       0x76   0xD011             BEQ.N    ??parse_G26_parameters_3
    671                layer_height = code_value_linear_units();
   \       0x78   0x.... 0x....      BL       _Z16code_value_floatv
   \       0x7C   0x6170             STR      R0,[R6, #+20]
    672                if (!WITHIN(layer_height, 0.0, 2.0)) {
   \       0x7E   0x2100             MOVS     R1,#+0
   \       0x80   0x.... 0x....      BL       __aeabi_cfrcmple
   \       0x84   0xD804             BHI.N    ??parse_G26_parameters_4
   \       0x86   0x.... 0x....      LDR.W    R1,??DataTable41_9  ;; 0x40000001
   \       0x8A   0x.... 0x....      BL       __aeabi_cfcmple
   \       0x8E   0xD305             BCC.N    ??parse_G26_parameters_3
    673                  SERIAL_PROTOCOLLNPGM("?Specified layer height not plausible.");
   \                     ??parse_G26_parameters_4: (+1)
   \       0x90   0x.... 0x....      ADR.W    R0,?_17
   \       0x94   0x.... 0x....      BL       _Z14serialprintPGMPKc
    674                  return UBL_ERR;
   \       0x98   0x2001             MOVS     R0,#+1
   \       0x9A   0xE184             B.N      ??parse_G26_parameters_1
    675                }
    676              }
    677          
    678              if (code_seen('Q')) {
   \                     ??parse_G26_parameters_3: (+1)
   \       0x9C   0x2051             MOVS     R0,#+81
   \       0x9E   0x.... 0x....      BL       _Z9code_seenc
   \       0xA2   0x2800             CMP      R0,#+0
   \       0xA4   0xD01C             BEQ.N    ??parse_G26_parameters_5
    679                if (code_has_value()) {
   \       0xA6   0x.... 0x....      BL       _Z14code_has_valuev
   \       0xAA   0x2800             CMP      R0,#+0
   \       0xAC   0xD012             BEQ.N    ??parse_G26_parameters_6
    680                  retraction_multiplier = code_value_float();
   \       0xAE   0x.... 0x....      BL       _Z16code_value_floatv
   \       0xB2   0x61F0             STR      R0,[R6, #+28]
    681                  if (!WITHIN(retraction_multiplier, 0.05, 15.0)) {
   \       0xB4   0x.... 0x....      LDR.W    R1,??DataTable41_15  ;; 0x3d4ccccd
   \       0xB8   0x.... 0x....      BL       __aeabi_cfrcmple
   \       0xBC   0xD804             BHI.N    ??parse_G26_parameters_7
   \       0xBE   0x.... 0x....      LDR.W    R1,??DataTable41_16  ;; 0x41700001
   \       0xC2   0x.... 0x....      BL       __aeabi_cfcmple
   \       0xC6   0xD30B             BCC.N    ??parse_G26_parameters_5
    682                    SERIAL_PROTOCOLLNPGM("?Specified Retraction Multiplier not plausible.");
   \                     ??parse_G26_parameters_7: (+1)
   \       0xC8   0x.... 0x....      ADR.W    R0,?_18
   \       0xCC   0x.... 0x....      BL       _Z14serialprintPGMPKc
    683                    return UBL_ERR;
   \       0xD0   0x2001             MOVS     R0,#+1
   \       0xD2   0xE168             B.N      ??parse_G26_parameters_1
    684                  }
    685                }
    686                else {
    687                  SERIAL_PROTOCOLLNPGM("?Retraction Multiplier must be specified.");
   \                     ??parse_G26_parameters_6: (+1)
   \       0xD4   0x.... 0x....      ADR.W    R0,?_19
   \       0xD8   0x.... 0x....      BL       _Z14serialprintPGMPKc
    688                  return UBL_ERR;
   \       0xDC   0x2001             MOVS     R0,#+1
   \       0xDE   0xE162             B.N      ??parse_G26_parameters_1
    689                }
    690              }
    691          
    692              if (code_seen('N') || code_seen('n')) {
   \                     ??parse_G26_parameters_5: (+1)
   \       0xE0   0x204E             MOVS     R0,#+78
   \       0xE2   0x.... 0x....      BL       _Z9code_seenc
   \       0xE6   0x2800             CMP      R0,#+0
   \       0xE8   0xD104             BNE.N    ??parse_G26_parameters_8
   \       0xEA   0x206E             MOVS     R0,#+110
   \       0xEC   0x.... 0x....      BL       _Z9code_seenc
   \       0xF0   0x2800             CMP      R0,#+0
   \       0xF2   0xD012             BEQ.N    ??parse_G26_parameters_9
    693                nozzle = code_value_float();
   \                     ??parse_G26_parameters_8: (+1)
   \       0xF4   0x.... 0x....      BL       _Z16code_value_floatv
   \       0xF8   0x6230             STR      R0,[R6, #+32]
    694                if (!WITHIN(nozzle, 0.1, 1.0)) {
   \       0xFA   0x.... 0x....      LDR.W    R1,??DataTable41_17  ;; 0x3dcccccd
   \       0xFE   0x.... 0x....      BL       __aeabi_cfrcmple
   \      0x102   0xD804             BHI.N    ??parse_G26_parameters_10
   \      0x104   0x.... 0x....      LDR.W    R1,??DataTable41_18  ;; 0x3f800001
   \      0x108   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x10C   0xD305             BCC.N    ??parse_G26_parameters_9
    695                  SERIAL_PROTOCOLLNPGM("?Specified nozzle size not plausible.");
   \                     ??parse_G26_parameters_10: (+1)
   \      0x10E   0x.... 0x....      ADR.W    R0,?_20
   \      0x112   0x.... 0x....      BL       _Z14serialprintPGMPKc
    696                  return UBL_ERR;
   \      0x116   0x2001             MOVS     R0,#+1
   \      0x118   0xE145             B.N      ??parse_G26_parameters_1
    697                }
    698              }
    699          
    700              if (code_seen('K')) keep_heaters_on++;
                                         ^
Warning[Pe708]: incrementing a bool value is deprecated
   \                     ??parse_G26_parameters_9: (+1)
   \      0x11A   0x204B             MOVS     R0,#+75
   \      0x11C   0x.... 0x....      BL       _Z9code_seenc
   \      0x120   0x2800             CMP      R0,#+0
   \      0x122   0xD001             BEQ.N    ??parse_G26_parameters_11
   \      0x124   0x2001             MOVS     R0,#+1
   \      0x126   0x70B0             STRB     R0,[R6, #+2]
    701          
    702              if (code_seen('O') && code_has_value())
   \                     ??parse_G26_parameters_11: (+1)
   \      0x128   0x204F             MOVS     R0,#+79
   \      0x12A   0x.... 0x....      BL       _Z9code_seenc
   \      0x12E   0x2800             CMP      R0,#+0
   \      0x130   0xD006             BEQ.N    ??parse_G26_parameters_12
   \      0x132   0x.... 0x....      BL       _Z14code_has_valuev
   \      0x136   0x2800             CMP      R0,#+0
   \      0x138   0xD002             BEQ.N    ??parse_G26_parameters_12
    703                ooze_amount = code_value_linear_units();
   \      0x13A   0x.... 0x....      BL       _Z16code_value_floatv
   \      0x13E   0x6370             STR      R0,[R6, #+52]
    704          
    705              if (code_seen('P')) {
   \                     ??parse_G26_parameters_12: (+1)
   \      0x140   0x2050             MOVS     R0,#+80
   \      0x142   0x.... 0x....      BL       _Z9code_seenc
   \      0x146   0x2800             CMP      R0,#+0
   \      0x148   0xD006             BEQ.N    ??parse_G26_parameters_13
    706                if (!code_has_value())
   \      0x14A   0x.... 0x....      BL       _Z14code_has_valuev
   \      0x14E   0x2800             CMP      R0,#+0
   \      0x150   0xD11A             BNE.N    ??parse_G26_parameters_14
    707                  prime_flag = -1;
   \      0x152   0xF04F 0x30FF      MOV      R0,#-1
   \      0x156   0x7070             STRB     R0,[R6, #+1]
    708                else {
    709                  prime_flag++;
    710                  prime_length = code_value_linear_units();
    711                  if (!WITHIN(prime_length, 0.0, 25.0)) {
    712                    SERIAL_PROTOCOLLNPGM("?Specified prime length not plausible.");
    713                    return UBL_ERR;
    714                  }
    715                }
    716              }
    717          
    718              if (code_seen('F')) {
   \                     ??parse_G26_parameters_13: (+1)
   \      0x158   0x2046             MOVS     R0,#+70
   \      0x15A   0x.... 0x....      BL       _Z9code_seenc
   \      0x15E   0x2800             CMP      R0,#+0
   \      0x160   0xD027             BEQ.N    ??parse_G26_parameters_15
    719                filament_diameter = code_value_linear_units();
   \      0x162   0x.... 0x....      BL       _Z16code_value_floatv
   \      0x166   0x6270             STR      R0,[R6, #+36]
    720                if (!WITHIN(filament_diameter, 1.0, 4.0)) {
   \      0x168   0xF04F 0x517E      MOV      R1,#+1065353216
   \      0x16C   0x.... 0x....      BL       __aeabi_cfrcmple
   \      0x170   0xD804             BHI.N    ??parse_G26_parameters_16
   \      0x172   0x.... 0x....      LDR.W    R1,??DataTable41_19  ;; 0x40800001
   \      0x176   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x17A   0xD31A             BCC.N    ??parse_G26_parameters_15
    721                  SERIAL_PROTOCOLLNPGM("?Specified filament size not plausible.");
   \                     ??parse_G26_parameters_16: (+1)
   \      0x17C   0x.... 0x....      ADR.W    R0,?_22
   \      0x180   0x.... 0x....      BL       _Z14serialprintPGMPKc
    722                  return UBL_ERR;
   \      0x184   0x2001             MOVS     R0,#+1
   \      0x186   0xE10E             B.N      ??parse_G26_parameters_1
    723                }
    724              }
   \                     ??parse_G26_parameters_14: (+1)
   \      0x188   0x7870             LDRB     R0,[R6, #+1]
   \      0x18A   0x1C40             ADDS     R0,R0,#+1
   \      0x18C   0x7070             STRB     R0,[R6, #+1]
   \      0x18E   0x.... 0x....      BL       _Z16code_value_floatv
   \      0x192   0x62B0             STR      R0,[R6, #+40]
   \      0x194   0x2100             MOVS     R1,#+0
   \      0x196   0x.... 0x....      BL       __aeabi_cfrcmple
   \      0x19A   0xD804             BHI.N    ??parse_G26_parameters_17
   \      0x19C   0x.... 0x....      LDR.W    R1,??DataTable41_20  ;; 0x41c80001
   \      0x1A0   0x.... 0x....      BL       __aeabi_cfcmple
   \      0x1A4   0xD3D8             BCC.N    ??parse_G26_parameters_13
   \                     ??parse_G26_parameters_17: (+1)
   \      0x1A6   0x.... 0x....      ADR.W    R0,?_21
   \      0x1AA   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \      0x1AE   0x2001             MOVS     R0,#+1
   \      0x1B0   0xE0F9             B.N      ??parse_G26_parameters_1
    725              extrusion_multiplier *= sq(1.75) / sq(filament_diameter);         // If we aren't using 1.75mm filament, we need to
   \                     ??parse_G26_parameters_15: (+1)
   \      0x1B2   0xF04F 0x0A00      MOV      R10,#+0
   \      0x1B6   0x.... 0x....      LDR.W    R11,??DataTable41_21  ;; 0x3ffc0000
   \      0x1BA   0x2702             MOVS     R7,#+2
   \      0x1BC   0x46D0             MOV      R8,R10
   \      0x1BE   0x.... 0x....      LDR.W    R9,??DataTable41_22  ;; 0x3ff00000
   \      0x1C2   0x4644             MOV      R4,R8
   \      0x1C4   0x464D             MOV      R5,R9
   \      0x1C6   0xE007             B.N      ??parse_G26_parameters_18
   \                     ??parse_G26_parameters_19: (+1)
   \      0x1C8   0x4650             MOV      R0,R10
   \      0x1CA   0x4659             MOV      R1,R11
   \      0x1CC   0x4652             MOV      R2,R10
   \      0x1CE   0x465B             MOV      R3,R11
   \      0x1D0   0x.... 0x....      BL       __aeabi_dmul
   \      0x1D4   0x4682             MOV      R10,R0
   \      0x1D6   0x468B             MOV      R11,R1
   \                     ??parse_G26_parameters_18: (+1)
   \      0x1D8   0x07F8             LSLS     R0,R7,#+31
   \      0x1DA   0xD507             BPL.N    ??parse_G26_parameters_20
   \      0x1DC   0x4652             MOV      R2,R10
   \      0x1DE   0x465B             MOV      R3,R11
   \      0x1E0   0x4620             MOV      R0,R4
   \      0x1E2   0x4629             MOV      R1,R5
   \      0x1E4   0x.... 0x....      BL       __aeabi_dmul
   \      0x1E8   0x4604             MOV      R4,R0
   \      0x1EA   0x460D             MOV      R5,R1
   \                     ??parse_G26_parameters_20: (+1)
   \      0x1EC   0x087F             LSRS     R7,R7,#+1
   \      0x1EE   0xD1EB             BNE.N    ??parse_G26_parameters_19
   \      0x1F0   0xF8D6 0xB024      LDR      R11,[R6, #+36]
   \      0x1F4   0xF04F 0x0A02      MOV      R10,#+2
   \      0x1F8   0xF04F 0x577E      MOV      R7,#+1065353216
   \      0x1FC   0xE004             B.N      ??parse_G26_parameters_21
   \                     ??parse_G26_parameters_22: (+1)
   \      0x1FE   0x4658             MOV      R0,R11
   \      0x200   0x4659             MOV      R1,R11
   \      0x202   0x.... 0x....      BL       __aeabi_fmul
   \      0x206   0x4683             MOV      R11,R0
   \                     ??parse_G26_parameters_21: (+1)
   \      0x208   0xEA5F 0x70CA      LSLS     R0,R10,#+31
   \      0x20C   0xD504             BPL.N    ??parse_G26_parameters_23
   \      0x20E   0x4638             MOV      R0,R7
   \      0x210   0x4659             MOV      R1,R11
   \      0x212   0x.... 0x....      BL       __aeabi_fmul
   \      0x216   0x4607             MOV      R7,R0
   \                     ??parse_G26_parameters_23: (+1)
   \      0x218   0xEA5F 0x0A5A      LSRS     R10,R10,#+1
   \      0x21C   0xD1EF             BNE.N    ??parse_G26_parameters_22
   \      0x21E   0x69B0             LDR      R0,[R6, #+24]
   \      0x220   0x.... 0x....      BL       __aeabi_f2d
   \      0x224   0x4682             MOV      R10,R0
   \      0x226   0x468B             MOV      R11,R1
   \      0x228   0x4638             MOV      R0,R7
   \      0x22A   0x.... 0x....      BL       __aeabi_f2d
   \      0x22E   0x4602             MOV      R2,R0
   \      0x230   0x460B             MOV      R3,R1
   \      0x232   0x4620             MOV      R0,R4
   \      0x234   0x4629             MOV      R1,R5
   \      0x236   0x.... 0x....      BL       __aeabi_ddiv
   \      0x23A   0x4652             MOV      R2,R10
   \      0x23C   0x465B             MOV      R3,R11
   \      0x23E   0x.... 0x....      BL       __aeabi_dmul
   \      0x242   0x.... 0x....      BL       __aeabi_d2f
   \      0x246   0x4682             MOV      R10,R0
   \      0x248   0xF8C6 0xA018      STR      R10,[R6, #+24]
    726                                                                                // scale up or down the length needed to get the
    727                                                                                // same volume of filament
    728          
    729              extrusion_multiplier *= filament_diameter * sq(nozzle) / sq(0.3); // Scale up by nozzle size
   \      0x24C   0x6A35             LDR      R5,[R6, #+32]
   \      0x24E   0x2402             MOVS     R4,#+2
   \      0x250   0xF04F 0x577E      MOV      R7,#+1065353216
   \      0x254   0xE004             B.N      ??parse_G26_parameters_24
   \                     ??parse_G26_parameters_25: (+1)
   \      0x256   0x4628             MOV      R0,R5
   \      0x258   0x4629             MOV      R1,R5
   \      0x25A   0x.... 0x....      BL       __aeabi_fmul
   \      0x25E   0x4605             MOV      R5,R0
   \                     ??parse_G26_parameters_24: (+1)
   \      0x260   0x07E0             LSLS     R0,R4,#+31
   \      0x262   0xD504             BPL.N    ??parse_G26_parameters_26
   \      0x264   0x4638             MOV      R0,R7
   \      0x266   0x4629             MOV      R1,R5
   \      0x268   0x.... 0x....      BL       __aeabi_fmul
   \      0x26C   0x4607             MOV      R7,R0
   \                     ??parse_G26_parameters_26: (+1)
   \      0x26E   0x0864             LSRS     R4,R4,#+1
   \      0x270   0xD1F1             BNE.N    ??parse_G26_parameters_25
   \      0x272   0xF04F 0x3033      MOV      R0,#+858993459
   \      0x276   0x.... 0x....      LDR.W    R1,??DataTable41_23  ;; 0x3fd33333
   \      0x27A   0xF04F 0x0B02      MOV      R11,#+2
   \      0x27E   0x4644             MOV      R4,R8
   \      0x280   0x464D             MOV      R5,R9
   \      0x282   0x4680             MOV      R8,R0
   \      0x284   0x4689             MOV      R9,R1
   \      0x286   0xE007             B.N      ??parse_G26_parameters_27
   \                     ??parse_G26_parameters_28: (+1)
   \      0x288   0x4640             MOV      R0,R8
   \      0x28A   0x4649             MOV      R1,R9
   \      0x28C   0x4642             MOV      R2,R8
   \      0x28E   0x464B             MOV      R3,R9
   \      0x290   0x.... 0x....      BL       __aeabi_dmul
   \      0x294   0x4680             MOV      R8,R0
   \      0x296   0x4689             MOV      R9,R1
   \                     ??parse_G26_parameters_27: (+1)
   \      0x298   0xEA5F 0x70CB      LSLS     R0,R11,#+31
   \      0x29C   0xD507             BPL.N    ??parse_G26_parameters_29
   \      0x29E   0x4642             MOV      R2,R8
   \      0x2A0   0x464B             MOV      R3,R9
   \      0x2A2   0x4620             MOV      R0,R4
   \      0x2A4   0x4629             MOV      R1,R5
   \      0x2A6   0x.... 0x....      BL       __aeabi_dmul
   \      0x2AA   0x4604             MOV      R4,R0
   \      0x2AC   0x460D             MOV      R5,R1
   \                     ??parse_G26_parameters_29: (+1)
   \      0x2AE   0xEA5F 0x0B5B      LSRS     R11,R11,#+1
   \      0x2B2   0xD1E9             BNE.N    ??parse_G26_parameters_28
   \      0x2B4   0x4650             MOV      R0,R10
   \      0x2B6   0x.... 0x....      BL       __aeabi_f2d
   \      0x2BA   0x4680             MOV      R8,R0
   \      0x2BC   0x4689             MOV      R9,R1
   \      0x2BE   0x6A70             LDR      R0,[R6, #+36]
   \      0x2C0   0x4639             MOV      R1,R7
   \      0x2C2   0x.... 0x....      BL       __aeabi_fmul
   \      0x2C6   0x.... 0x....      BL       __aeabi_f2d
   \      0x2CA   0x4622             MOV      R2,R4
   \      0x2CC   0x462B             MOV      R3,R5
   \      0x2CE   0x.... 0x....      BL       __aeabi_ddiv
   \      0x2D2   0x4642             MOV      R2,R8
   \      0x2D4   0x464B             MOV      R3,R9
   \      0x2D6   0x.... 0x....      BL       __aeabi_dmul
   \      0x2DA   0x.... 0x....      BL       __aeabi_d2f
   \      0x2DE   0x61B0             STR      R0,[R6, #+24]
    730          
    731              if (code_seen('H')) {
   \      0x2E0   0x2048             MOVS     R0,#+72
   \      0x2E2   0x.... 0x....      BL       _Z9code_seenc
   \      0x2E6   0x2800             CMP      R0,#+0
   \      0x2E8   0xD00B             BEQ.N    ??parse_G26_parameters_30
    732                hotend_temp = code_value_temp_abs();
   \      0x2EA   0x.... 0x....      BL       _Z19code_value_temp_absv
   \      0x2EE   0x80F0             STRH     R0,[R6, #+6]
    733                if (!WITHIN(hotend_temp, 165, 280)) {
   \      0x2F0   0x38A5             SUBS     R0,R0,#+165
   \      0x2F2   0x2874             CMP      R0,#+116
   \      0x2F4   0xD305             BCC.N    ??parse_G26_parameters_30
    734                  SERIAL_PROTOCOLLNPGM("?Specified nozzle temperature not plausible.");
   \      0x2F6   0x.... 0x....      ADR.W    R0,?_23
   \      0x2FA   0x.... 0x....      BL       _Z14serialprintPGMPKc
    735                  return UBL_ERR;
   \      0x2FE   0x2001             MOVS     R0,#+1
   \      0x300   0xE051             B.N      ??parse_G26_parameters_1
    736                }
    737              }
    738          
    739              if (code_seen('R')) {
   \                     ??parse_G26_parameters_30: (+1)
   \      0x302   0x2052             MOVS     R0,#+82
   \      0x304   0x.... 0x....      BL       _Z9code_seenc
   \      0x308   0x2800             CMP      R0,#+0
   \      0x30A   0xD00C             BEQ.N    ??parse_G26_parameters_31
    740                //randomSeed(millis());/*--mks cfg-random*/
    741          	  srand(millis());
   \      0x30C   0x.... 0x....      BL       HAL_GetTick
   \      0x310   0x.... 0x....      BL       srand
    742                random_deviation = code_has_value() ? code_value_float() : 50.0;
   \      0x314   0x.... 0x....      BL       _Z14code_has_valuev
   \      0x318   0x2800             CMP      R0,#+0
   \      0x31A   0xD002             BEQ.N    ??parse_G26_parameters_32
   \      0x31C   0x.... 0x....      BL       _Z16code_value_floatv
   \      0x320   0xE000             B.N      ??parse_G26_parameters_33
   \                     ??parse_G26_parameters_32: (+1)
   \      0x322   0x....             LDR.N    R0,??DataTable41_24  ;; 0x42480000
   \                     ??parse_G26_parameters_33: (+1)
   \      0x324   0x6130             STR      R0,[R6, #+16]
    743              }
    744          
    745              x_pos = current_position[X_AXIS];
   \                     ??parse_G26_parameters_31: (+1)
   \      0x326   0x....             LDR.N    R0,??DataTable41_1
   \      0x328   0x6801             LDR      R1,[R0, #+0]
   \      0x32A   0x62F1             STR      R1,[R6, #+44]
    746              y_pos = current_position[Y_AXIS];
   \      0x32C   0x6840             LDR      R0,[R0, #+4]
   \      0x32E   0x6330             STR      R0,[R6, #+48]
    747          
    748              if (code_seen('X')) {
   \      0x330   0x2058             MOVS     R0,#+88
   \      0x332   0x.... 0x....      BL       _Z9code_seenc
   \      0x336   0x2800             CMP      R0,#+0
   \      0x338   0xD013             BEQ.N    ??parse_G26_parameters_34
    749                x_pos = code_value_axis_units(X_AXIS);
   \      0x33A   0x.... 0x....      BL       _Z16code_value_floatv
   \      0x33E   0x4602             MOV      R2,R0
   \      0x340   0x62F2             STR      R2,[R6, #+44]
    750                if (!WITHIN(x_pos, X_MIN_POS, X_MAX_POS)) {
   \      0x342   0x....             LDR.N    R3,??DataTable39
   \      0x344   0x6899             LDR      R1,[R3, #+8]
   \      0x346   0x.... 0x....      BL       __aeabi_cfrcmple
   \      0x34A   0xD804             BHI.N    ??parse_G26_parameters_35
   \      0x34C   0x6958             LDR      R0,[R3, #+20]
   \      0x34E   0x4611             MOV      R1,R2
   \      0x350   0x.... 0x....      BL       __aeabi_cfrcmple
   \      0x354   0xD91E             BLS.N    ??parse_G26_parameters_36
    751                  SERIAL_PROTOCOLLNPGM("?Specified X coordinate not plausible.");
   \                     ??parse_G26_parameters_35: (+1)
   \      0x356   0x.... 0x....      ADR.W    R0,?_24
   \      0x35A   0x.... 0x....      BL       _Z14serialprintPGMPKc
    752                  return UBL_ERR;
   \      0x35E   0x2001             MOVS     R0,#+1
   \      0x360   0xE021             B.N      ??parse_G26_parameters_1
    753                }
    754              }
    755              else
    756          
    757              if (code_seen('Y')) {
   \                     ??parse_G26_parameters_34: (+1)
   \      0x362   0x2059             MOVS     R0,#+89
   \      0x364   0x.... 0x....      BL       _Z9code_seenc
   \      0x368   0x2800             CMP      R0,#+0
   \      0x36A   0xD013             BEQ.N    ??parse_G26_parameters_36
    758                y_pos = code_value_axis_units(Y_AXIS);
   \      0x36C   0x.... 0x....      BL       _Z16code_value_floatv
   \      0x370   0x4603             MOV      R3,R0
   \      0x372   0x6333             STR      R3,[R6, #+48]
    759                if (!WITHIN(y_pos, Y_MIN_POS, Y_MAX_POS)) {
   \      0x374   0x....             LDR.N    R2,??DataTable39
   \      0x376   0x68D1             LDR      R1,[R2, #+12]
   \      0x378   0x.... 0x....      BL       __aeabi_cfrcmple
   \      0x37C   0xD804             BHI.N    ??parse_G26_parameters_37
   \      0x37E   0x6990             LDR      R0,[R2, #+24]
   \      0x380   0x4619             MOV      R1,R3
   \      0x382   0x.... 0x....      BL       __aeabi_cfrcmple
   \      0x386   0xD905             BLS.N    ??parse_G26_parameters_36
    760                  SERIAL_PROTOCOLLNPGM("?Specified Y coordinate not plausible.");
   \                     ??parse_G26_parameters_37: (+1)
   \      0x388   0x.... 0x....      ADR.W    R0,?_25
   \      0x38C   0x.... 0x....      BL       _Z14serialprintPGMPKc
    761                  return UBL_ERR;
   \      0x390   0x2001             MOVS     R0,#+1
   \      0x392   0xE008             B.N      ??parse_G26_parameters_1
    762                }
    763              }
    764          
    765              /**
    766               * We save the question of what to do with the Unified Bed Leveling System's Activation until the very
    767               * end.  The reason is, if one of the parameters specified up above is incorrect, we don't want to
    768               * alter the system's status.  We wait until we know everything is correct before altering the state
    769               * of the system.
    770               */
    771              ubl.state.active = !code_seen('D');
   \                     ??parse_G26_parameters_36: (+1)
   \      0x394   0x2044             MOVS     R0,#+68
   \      0x396   0x.... 0x....      BL       _Z9code_seenc
   \      0x39A   0x1E40             SUBS     R0,R0,#+1
   \      0x39C   0x4180             SBCS     R0,R0,R0
   \      0x39E   0x0FC0             LSRS     R0,R0,#+31
   \      0x3A0   0x....             LDR.N    R1,??DataTable41_25
   \      0x3A2   0x7008             STRB     R0,[R1, #+0]
    772          
    773              return UBL_OK;
   \      0x3A4   0x2000             MOVS     R0,#+0
   \                     ??parse_G26_parameters_1: (+1)
   \      0x3A6   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}   ;; return
    774            }
    775          

   \                                 In section .text, align 2, keep-with-next
    776            bool exit_from_g26() {
   \                     _Z13exit_from_g26v: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    777              //strcpy(lcd_status_message, "Leaving G26"); // We can't do lcd_setstatus() without having it continue;
    778              lcd_reset_alert_level();
   \        0x2   0x.... 0x....      BL       _Z21lcd_reset_alert_levelv
    779              lcd_setstatuspgm(PSTR("Leaving G26"));
   \        0x6   0x2100             MOVS     R1,#+0
   \        0x8   0x.... 0x....      ADR.W    R0,?_8
   \        0xC   0x.... 0x....      BL       _Z16lcd_setstatuspgmPKch
   \       0x10   0xE002             B.N      ??exit_from_g26_0
    780              while (ubl_lcd_clicked()) idle();
   \                     ??exit_from_g26_1: (+1)
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0x.... 0x....      BL       _Z4idleb
   \                     ??exit_from_g26_0: (+1)
   \       0x18   0x.... 0x....      BL       _Z15ubl_lcd_clickedv
   \       0x1C   0x2800             CMP      R0,#+0
   \       0x1E   0xD1F8             BNE.N    ??exit_from_g26_1
    781              return UBL_ERR;
   \       0x20   0x2001             MOVS     R0,#+1
   \       0x22   0xBD02             POP      {R1,PC}          ;; return
    782            }
    783          
    784            /**
    785             * Turn on the bed and nozzle heat and
    786             * wait for them to get up to temperature.
    787             */

   \                                 In section .text, align 2, keep-with-next
    788            bool turn_on_heaters() {
   \                     _Z15turn_on_heatersv: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
    789              millis_t next;
    790             // #if HAS_TEMP_BED	/*--mks cfg-- HAS_TEMP_BED --*/
    791             if(HAS_TEMP_BED) {
   \        0x2   0x....             LDR.N    R4,??DataTable41_10
   \        0x4   0x....             LDR.N    R0,??DataTable41_26
   \        0x6   0xF890 0x0036      LDRB     R0,[R0, #+54]
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD076             BEQ.N    ??turn_on_heaters_0
    792                #if ENABLED(ULTRA_LCD)
    793                  if (bed_temp > 25) {
   \        0xE   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \       0x12   0x281A             CMP      R0,#+26
   \       0x14   0xDB6B             BLT.N    ??turn_on_heaters_1
    794                    lcd_setstatuspgm(PSTR("G26 Heating Bed."), 99);
   \       0x16   0x2163             MOVS     R1,#+99
   \       0x18   0x.... 0x....      ADR.W    R0,?_26
   \       0x1C   0x.... 0x....      BL       _Z16lcd_setstatuspgmPKch
    795                    lcd_quick_feedback();
   \       0x20   0x.... 0x....      BL       _Z18lcd_quick_feedbackv
    796                #endif
    797                    ubl.has_control_of_lcd_panel = true;
   \       0x24   0x2001             MOVS     R0,#+1
   \       0x26   0x....             LDR.N    R1,??DataTable41_27
   \       0x28   0x7008             STRB     R0,[R1, #+0]
    798                    thermalManager.setTargetBed(bed_temp);
   \       0x2A   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \       0x2E   0x.... 0x....      BL       __aeabi_i2f
   \       0x32   0x.... 0x....      BL       _ZN11Temperature12setTargetBedEf
    799                    next = millis() + 5000UL;
   \       0x36   0xF241 0x3688      MOVW     R6,#+5000
   \       0x3A   0x.... 0x....      BL       HAL_GetTick
   \       0x3E   0x4605             MOV      R5,R0
   \       0x40   0x1975             ADDS     R5,R6,R5
   \       0x42   0xE010             B.N      ??turn_on_heaters_2
    800                    while (abs(thermalManager.degBed() - bed_temp) > 3) {
    801                      if (ubl_lcd_clicked()) return exit_from_g26();
    802                      if (PENDING(millis(), next)) {
   \                     ??turn_on_heaters_3: (+1)
   \       0x44   0x.... 0x....      BL       HAL_GetTick
   \       0x48   0x1B40             SUBS     R0,R0,R5
   \       0x4A   0xD509             BPL.N    ??turn_on_heaters_4
    803                        next = millis() + 5000UL;
   \       0x4C   0x.... 0x....      BL       HAL_GetTick
   \       0x50   0x4605             MOV      R5,R0
   \       0x52   0x1975             ADDS     R5,R6,R5
    804                        print_heaterstates();
   \       0x54   0x.... 0x....      BL       _Z18print_heaterstatesv
    805                        delay(2000);      //mks add
   \       0x58   0xF44F 0x60FA      MOV      R0,#+2000
   \       0x5C   0x.... 0x....      BL       HAL_Delay
    806                      }
    807                      idle();
   \                     ??turn_on_heaters_4: (+1)
   \       0x60   0x2000             MOVS     R0,#+0
   \       0x62   0x.... 0x....      BL       _Z4idleb
   \                     ??turn_on_heaters_2: (+1)
   \       0x66   0x.... 0x....      BL       _ZN11Temperature6degBedEv
   \       0x6A   0x4607             MOV      R7,R0
   \       0x6C   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \       0x70   0x.... 0x....      BL       __aeabi_i2f
   \       0x74   0x4601             MOV      R1,R0
   \       0x76   0x4638             MOV      R0,R7
   \       0x78   0x.... 0x....      BL       __aeabi_fsub
   \       0x7C   0xF020 0x4000      BIC      R0,R0,#0x80000000
   \       0x80   0x....             LDR.N    R1,??DataTable41_28  ;; 0x40400001
   \       0x82   0x.... 0x....      BL       __aeabi_cfrcmple
   \       0x86   0xD832             BHI.N    ??turn_on_heaters_1
   \       0x88   0x.... 0x....      BL       _Z15ubl_lcd_clickedv
   \       0x8C   0x2800             CMP      R0,#+0
   \       0x8E   0xD0D9             BEQ.N    ??turn_on_heaters_3
   \       0x90   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \       0x94   0x....             B.N      _Z13exit_from_g26v
    808                    }
    809                #if ENABLED(ULTRA_LCD)
    810                  }
    811                  lcd_setstatuspgm(PSTR("G26 Heating Nozzle."), 99);
    812                  lcd_quick_feedback();
    813                #endif
    814             }// #endif
    815          
    816              // Start heating the nozzle and wait for it to reach temperature.
    817              thermalManager.setTargetHotend(hotend_temp, 0);
    818              while (abs(thermalManager.degHotend(0) - hotend_temp) > 3) {
    819                if (ubl_lcd_clicked()) return exit_from_g26();
    820                if (PENDING(millis(), next)) {
   \                     ??turn_on_heaters_5: (+1)
   \       0x96   0x.... 0x....      BL       HAL_GetTick
   \       0x9A   0x1B40             SUBS     R0,R0,R5
   \       0x9C   0xD50B             BPL.N    ??turn_on_heaters_6
    821                  next = millis() + 5000UL;
   \       0x9E   0x.... 0x....      BL       HAL_GetTick
   \       0xA2   0x4605             MOV      R5,R0
   \       0xA4   0xF505 0x5598      ADD      R5,R5,#+4864
   \       0xA8   0x3588             ADDS     R5,R5,#+136
    822                  print_heaterstates();
   \       0xAA   0x.... 0x....      BL       _Z18print_heaterstatesv
    823                  delay(2000);      //mks add
   \       0xAE   0xF44F 0x60FA      MOV      R0,#+2000
   \       0xB2   0x.... 0x....      BL       HAL_Delay
    824                }
    825                idle();
   \                     ??turn_on_heaters_6: (+1)
   \       0xB6   0x2000             MOVS     R0,#+0
   \       0xB8   0x.... 0x....      BL       _Z4idleb
   \                     ??turn_on_heaters_7: (+1)
   \       0xBC   0x2000             MOVS     R0,#+0
   \       0xBE   0x.... 0x....      BL       _ZN11Temperature9degHotendEh
   \       0xC2   0x4606             MOV      R6,R0
   \       0xC4   0xF9B4 0x0006      LDRSH    R0,[R4, #+6]
   \       0xC8   0x.... 0x....      BL       __aeabi_i2f
   \       0xCC   0x4601             MOV      R1,R0
   \       0xCE   0x4630             MOV      R0,R6
   \       0xD0   0x.... 0x....      BL       __aeabi_fsub
   \       0xD4   0xF020 0x4000      BIC      R0,R0,#0x80000000
   \       0xD8   0x....             LDR.N    R1,??DataTable41_28  ;; 0x40400001
   \       0xDA   0x.... 0x....      BL       __aeabi_cfrcmple
   \       0xDE   0xD817             BHI.N    ??turn_on_heaters_8
   \       0xE0   0x.... 0x....      BL       _Z15ubl_lcd_clickedv
   \       0xE4   0x2800             CMP      R0,#+0
   \       0xE6   0xD0D6             BEQ.N    ??turn_on_heaters_5
   \       0xE8   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \       0xEC   0x....             B.N      _Z13exit_from_g26v
    826              }
   \                     ??turn_on_heaters_1: (+1)
   \       0xEE   0x2163             MOVS     R1,#+99
   \       0xF0   0x.... 0x....      ADR.W    R0,?_27
   \       0xF4   0x.... 0x....      BL       _Z16lcd_setstatuspgmPKch
   \       0xF8   0x.... 0x....      BL       _Z18lcd_quick_feedbackv
   \                     ??turn_on_heaters_0: (+1)
   \       0xFC   0x2100             MOVS     R1,#+0
   \       0xFE   0x460E             MOV      R6,R1
   \      0x100   0xF9B4 0x0006      LDRSH    R0,[R4, #+6]
   \      0x104   0x.... 0x....      BL       __aeabi_i2f
   \      0x108   0x4631             MOV      R1,R6
   \      0x10A   0x.... 0x....      BL       _ZN11Temperature15setTargetHotendEfh
   \      0x10E   0xE7D5             B.N      ??turn_on_heaters_7
    827          
    828              #if ENABLED(ULTRA_LCD)
    829                lcd_reset_alert_level();
   \                     ??turn_on_heaters_8: (+1)
   \      0x110   0x.... 0x....      BL       _Z21lcd_reset_alert_levelv
    830                lcd_setstatuspgm(PSTR(""));
   \      0x114   0x2100             MOVS     R1,#+0
   \      0x116   0x....             ADR.N    R0,??DataTable41  ;; ""
   \      0x118   0x.... 0x....      BL       _Z16lcd_setstatuspgmPKch
    831                lcd_quick_feedback();
   \      0x11C   0x.... 0x....      BL       _Z18lcd_quick_feedbackv
    832              #endif
    833          
    834              return UBL_OK;
   \      0x120   0x2000             MOVS     R0,#+0
   \      0x122   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    835            }
    836          
    837            /**
    838             * Prime the nozzle if needed. Return true on error.
    839             */

   \                                 In section .text, align 2, keep-with-next
    840            bool prime_nozzle() {
   \                     _Z12prime_nozzlev: (+1)
   \        0x0   0xB57C             PUSH     {R2-R6,LR}
    841              float Total_Prime = 0.0;
   \        0x2   0x2500             MOVS     R5,#+0
    842          
    843              if (prime_flag == -1) {  // The user wants to control how much filament gets purged
   \        0x4   0x....             LDR.N    R4,??DataTable41_5
   \        0x6   0x....             LDR.N    R6,??DataTable41_10
   \        0x8   0xF996 0x0001      LDRSB    R0,[R6, #+1]
   \        0xC   0xF110 0x0F01      CMN      R0,#+1
   \       0x10   0xD14F             BNE.N    ??prime_nozzle_0
    844          
    845                ubl.has_control_of_lcd_panel = true;
   \       0x12   0x....             LDR.N    R6,??DataTable41_27
   \       0x14   0x2001             MOVS     R0,#+1
   \       0x16   0x7030             STRB     R0,[R6, #+0]
    846          
    847                lcd_setstatuspgm(PSTR("User-Controlled Prime"), 99);
   \       0x18   0x2163             MOVS     R1,#+99
   \       0x1A   0x.... 0x....      ADR.W    R0,?_28
   \       0x1E   0x.... 0x....      BL       _Z16lcd_setstatuspgmPKch
    848                chirp_at_user();
   \       0x22   0x.... 0x....      BL       _Z13chirp_at_userv
    849          
    850                set_destination_to_current();
   \       0x26   0x.... 0x....      BL       _Z26set_destination_to_currentv
    851          
    852                un_retract_filament(destination); // Make sure G26 doesn't think the filament is retracted().
   \       0x2A   0x4620             MOV      R0,R4
   \       0x2C   0x.... 0x....      BL       _Z19un_retract_filamentPf
   \       0x30   0xE010             B.N      ??prime_nozzle_1
    853          
    854                while (!ubl_lcd_clicked()) {
    855                  chirp_at_user();
    856                  destination[E_AXIS] += 0.25;
    857                  #ifdef PREVENT_LENGTHY_EXTRUDE
    858                    Total_Prime += 0.25;
    859                    if (Total_Prime >= EXTRUDE_MAXLENGTH) return UBL_ERR;
    860                  #endif
    861                  ubl_line_to_destination(planner.max_feedrate_mm_s[E_AXIS] / 15.0, 0);
   \                     ??prime_nozzle_2: (+1)
   \       0x32   0x....             LDR.N    R0,??DataTable41_2
   \       0x34   0x68C0             LDR      R0,[R0, #+12]
   \       0x36   0x....             LDR.N    R1,??DataTable41_29  ;; 0x41700000
   \       0x38   0x.... 0x....      BL       __aeabi_fdiv
   \       0x3C   0x9000             STR      R0,[SP, #+0]
   \       0x3E   0x2100             MOVS     R1,#+0
   \       0x40   0x4668             MOV      R0,SP
   \       0x42   0x.... 0x....      BL       _Z23ubl_line_to_destinationRKfh
    862          
    863                  stepper.synchronize();    // Without this synchronize, the purge is more consistent,
   \       0x46   0x.... 0x....      BL       _ZN7Stepper11synchronizeEv
    864                                            // but because the planner has a buffer, we won't be able
    865                                            // to stop as quickly.  So we put up with the less smooth
    866                                            // action to give the user a more responsive 'Stop'.
    867                  set_destination_to_current();
   \       0x4A   0x.... 0x....      BL       _Z26set_destination_to_currentv
    868                  idle();
   \       0x4E   0x2000             MOVS     R0,#+0
   \       0x50   0x.... 0x....      BL       _Z4idleb
   \                     ??prime_nozzle_1: (+1)
   \       0x54   0x.... 0x....      BL       _Z15ubl_lcd_clickedv
   \       0x58   0x2800             CMP      R0,#+0
   \       0x5A   0xD116             BNE.N    ??prime_nozzle_3
   \       0x5C   0x.... 0x....      BL       _Z13chirp_at_userv
   \       0x60   0x68E1             LDR      R1,[R4, #+12]
   \       0x62   0xF04F 0x507A      MOV      R0,#+1048576000
   \       0x66   0x.... 0x....      BL       __aeabi_fadd
   \       0x6A   0x60E0             STR      R0,[R4, #+12]
   \       0x6C   0xF04F 0x517A      MOV      R1,#+1048576000
   \       0x70   0x4628             MOV      R0,R5
   \       0x72   0x.... 0x....      BL       __aeabi_fadd
   \       0x76   0x4605             MOV      R5,R0
   \       0x78   0x....             LDR.N    R1,??DataTable41_30  ;; 0x43960000
   \       0x7A   0x.... 0x....      BL       __aeabi_cfrcmple
   \       0x7E   0xD8D8             BHI.N    ??prime_nozzle_2
   \       0x80   0x2001             MOVS     R0,#+1
   \       0x82   0xBD76             POP      {R1,R2,R4-R6,PC}
    869                }
    870          
    871                while (ubl_lcd_clicked()) idle();           // Debounce Encoder Wheel
   \                     ??prime_nozzle_4: (+1)
   \       0x84   0x2000             MOVS     R0,#+0
   \       0x86   0x.... 0x....      BL       _Z4idleb
   \                     ??prime_nozzle_3: (+1)
   \       0x8A   0x.... 0x....      BL       _Z15ubl_lcd_clickedv
   \       0x8E   0x2800             CMP      R0,#+0
   \       0x90   0xD1F8             BNE.N    ??prime_nozzle_4
    872          
    873                #if ENABLED(ULTRA_LCD)
    874                  strcpy_P(lcd_status_message, PSTR("Done Priming")); // We can't do lcd_setstatuspgm() without having it continue;
   \       0x92   0x.... 0x....      ADR.W    R4,?_29
   \       0x96   0x220D             MOVS     R2,#+13
   \       0x98   0x4621             MOV      R1,R4
   \       0x9A   0x....             LDR.N    R0,??DataTable41_31
   \       0x9C   0x.... 0x....      BL       __aeabi_memcpy
    875                                                                      // So...  We cheat to get a message up.
    876                  lcd_setstatuspgm(PSTR("Done Priming"), 99);
   \       0xA0   0x2163             MOVS     R1,#+99
   \       0xA2   0x4620             MOV      R0,R4
   \       0xA4   0x.... 0x....      BL       _Z16lcd_setstatuspgmPKch
    877                  lcd_quick_feedback();
   \       0xA8   0x.... 0x....      BL       _Z18lcd_quick_feedbackv
    878                #endif
    879          
    880                ubl.has_control_of_lcd_panel = false;
   \       0xAC   0x2000             MOVS     R0,#+0
   \       0xAE   0x7030             STRB     R0,[R6, #+0]
   \       0xB0   0xE01E             B.N      ??prime_nozzle_5
    881          
    882              }
    883              else {
    884                #if ENABLED(ULTRA_LCD)
    885                  lcd_setstatuspgm(PSTR("Fixed Length Prime."), 99);
   \                     ??prime_nozzle_0: (+1)
   \       0xB2   0x2163             MOVS     R1,#+99
   \       0xB4   0x.... 0x....      ADR.W    R0,?_30
   \       0xB8   0x.... 0x....      BL       _Z16lcd_setstatuspgmPKch
    886                  lcd_quick_feedback();
   \       0xBC   0x.... 0x....      BL       _Z18lcd_quick_feedbackv
    887                #endif
    888                set_destination_to_current();
   \       0xC0   0x.... 0x....      BL       _Z26set_destination_to_currentv
    889                destination[E_AXIS] += prime_length;
   \       0xC4   0x68E0             LDR      R0,[R4, #+12]
   \       0xC6   0x6AB1             LDR      R1,[R6, #+40]
   \       0xC8   0x.... 0x....      BL       __aeabi_fadd
   \       0xCC   0x60E0             STR      R0,[R4, #+12]
    890                ubl_line_to_destination(planner.max_feedrate_mm_s[E_AXIS] / 15.0, 0);
   \       0xCE   0x....             LDR.N    R0,??DataTable41_2
   \       0xD0   0x68C0             LDR      R0,[R0, #+12]
   \       0xD2   0x....             LDR.N    R1,??DataTable41_29  ;; 0x41700000
   \       0xD4   0x.... 0x....      BL       __aeabi_fdiv
   \       0xD8   0x9000             STR      R0,[SP, #+0]
   \       0xDA   0x4629             MOV      R1,R5
   \       0xDC   0x4668             MOV      R0,SP
   \       0xDE   0x.... 0x....      BL       _Z23ubl_line_to_destinationRKfh
    891                stepper.synchronize();
   \       0xE2   0x.... 0x....      BL       _ZN7Stepper11synchronizeEv
    892                set_destination_to_current();
   \       0xE6   0x.... 0x....      BL       _Z26set_destination_to_currentv
    893                retract_filament(destination);
   \       0xEA   0x4620             MOV      R0,R4
   \       0xEC   0x.... 0x....      BL       _Z16retract_filamentPf
    894              }
    895          
    896              return UBL_OK;
   \                     ??prime_nozzle_5: (+1)
   \       0xF0   0x2000             MOVS     R0,#+0
   \       0xF2   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
    897            }

   \                                 In section .rodata, align 1, keep-with-next
   \                     ?_2:
   \        0x0   0x00               DC8 ""

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \        0x0   0x47 0x32          DC8 "G26 command started.  Waiting for heater(s).\012"
   \              0x36 0x20    
   \              0x63 0x6F    
   \              0x6D 0x6D    
   \              0x61 0x6E    
   \              0x64 0x20    
   \              0x73 0x74    
   \              0x61 0x72    
   \              0x74 0x65    
   \              0x64 0x2E    
   \              0x20 0x20    
   \              0x57 0x61    
   \              0x69 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x66 0x6F    
   \              0x72 0x20    
   \              0x68 0x65    
   \              0x61 0x74    
   \              0x65 0x72    
   \              0x28 0x73    
   \              0x29 0x2E    
   \              0x0A 0x00    
   \       0x2E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \        0x0   0x4D 0x65          DC8 "Mesh Validation Stopped."
   \              0x73 0x68    
   \              0x20 0x56    
   \              0x61 0x6C    
   \              0x69 0x64    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x53 0x74    
   \              0x6F 0x70    
   \              0x70 0x65    
   \              0x64 0x2E    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \        0x0   0x55 0x6E          DC8 "Unpress Wheel"
   \              0x70 0x72    
   \              0x65 0x73    
   \              0x73 0x20    
   \              0x57 0x68    
   \              0x65 0x65    
   \              0x6C 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \        0x0   0x20 0x20          DC8 "   Doing circle at: (xi="
   \              0x20 0x44    
   \              0x6F 0x69    
   \              0x6E 0x67    
   \              0x20 0x63    
   \              0x69 0x72    
   \              0x63 0x6C    
   \              0x65 0x20    
   \              0x61 0x74    
   \              0x3A 0x20    
   \              0x28 0x78    
   \              0x69 0x3D    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \        0x0   0x2C 0x20          DC8 ", yi="
   \              0x79 0x69    
   \              0x3D 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \        0x0   0x41 0x74          DC8 41H, 74H, 74H, 65H, 6DH, 70H, 74H, 20H
   \              0x74 0x65    
   \              0x6D 0x70    
   \              0x74 0x20    
   \        0x8   0x74 0x6F          DC8 74H, 6FH, 20H, 70H, 72H, 69H, 6EH, 74H
   \              0x20 0x70    
   \              0x72 0x69    
   \              0x6E 0x74    
   \       0x10   0x20 0x6F          DC8 20H, 6FH, 75H, 74H, 73H, 69H, 64H, 65H
   \              0x75 0x74    
   \              0x73 0x69    
   \              0x64 0x65    
   \       0x18   0x20 0x6F          DC8 20H, 6FH, 66H, 20H, 44H, 45H, 4CH, 54H
   \              0x66 0x20    
   \              0x44 0x45    
   \              0x4C 0x54    
   \       0x20   0x41 0x5F          DC8 41H, 5FH, 50H, 52H, 49H, 4EH, 54H, 41H
   \              0x50 0x52    
   \              0x49 0x4E    
   \              0x54 0x41    
   \       0x28   0x42 0x4C          DC8 42H, 4CH, 45H, 5FH, 52H, 41H, 44H, 49H
   \              0x45 0x5F    
   \              0x52 0x41    
   \              0x44 0x49    
   \       0x30   0x55 0x53          DC8 55H, 53H, 2EH, 0AH, 0
   \              0x2E 0x0A    
   \              0x00         
   \       0x35   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \        0x0   0x41 0x74          DC8 "Attempt to print off the bed.\012"
   \              0x74 0x65    
   \              0x6D 0x70    
   \              0x74 0x20    
   \              0x74 0x6F    
   \              0x20 0x70    
   \              0x72 0x69    
   \              0x6E 0x74    
   \              0x20 0x6F    
   \              0x66 0x66    
   \              0x20 0x74    
   \              0x68 0x65    
   \              0x20 0x62    
   \              0x65 0x64    
   \              0x2E 0x0A    
   \              0x00         
   \       0x1F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33:
   \        0x0   0x....'....        DC32     mksCfg+0x54

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_1:
   \        0x0   0x....'....        DC32     current_position

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_2:
   \        0x0   0x....'....        DC32     mksCfg+0x68

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_3:
   \        0x0   0x....'....        DC32     g26_retracted+0x78

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_4:
   \        0x0   0x....'....        DC32     g26_retracted+0xB8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_5:
   \        0x0   0x....'....        DC32     g26_retracted+0x34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34:
   \        0x0   0x....'....        DC32     g26_retracted

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_1:
   \        0x0   0x....'....        DC32     g26_retracted+0x38

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_2:
   \        0x0   0x....'....        DC32     destination

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_3:
   \        0x0   0x....'....        DC32     _ZN20unified_bed_leveling24has_control_of_lcd_panelE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_4:
   \        0x0   0x5444'2D18        DC32     0x54442d18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_5:
   \        0x0   0x4009'21FB        DC32     0x400921fb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_6:
   \        0x0   0x4014'0000        DC32     0x40140000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_7:
   \        0x0   0x403E'0000        DC32     0x403e0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_8:
   \        0x0   0x4066'8000        DC32     0x40668000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_9:
   \        0x0   0x....'....        DC32     _ZN20unified_bed_leveling18mesh_index_to_xposE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_10:
   \        0x0   0x....'....        DC32     _ZN20unified_bed_leveling18mesh_index_to_yposE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_11:
   \        0x0   0x....'....        DC32     g26_retracted+0x30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_12:
   \        0x0   0x....'....        DC32     g26_retracted+0x2C

   \                                 In section .text, align 4, keep-with-next
   \                     ?_14:
   \        0x0   0x43 0x6F          DC8 "Connecting vertical line."
   \              0x6E 0x6E    
   \              0x65 0x63    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x20 0x76    
   \              0x65 0x72    
   \              0x74 0x69    
   \              0x63 0x61    
   \              0x6C 0x20    
   \              0x6C 0x69    
   \              0x6E 0x65    
   \              0x2E 0x00    
   \       0x1A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \        0x0   0x20 0x43          DC8 " Connecting with horizontal line (sx="
   \              0x6F 0x6E    
   \              0x6E 0x65    
   \              0x63 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x77 0x69    
   \              0x74 0x68    
   \              0x20 0x68    
   \              0x6F 0x72    
   \              0x69 0x7A    
   \              0x6F 0x6E    
   \              0x74 0x61    
   \              0x6C 0x20    
   \              0x6C 0x69    
   \              0x6E 0x65    
   \              0x20 0x28    
   \              0x73 0x78    
   \              0x3D 0x00    
   \       0x26   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_10:
   \        0x0   0x2C 0x20          DC8 ", sy="
   \              0x73 0x79    
   \              0x3D 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_11:
   \        0x0   0x29 0x20          DC8 ") -> (ex="
   \              0x2D 0x3E    
   \              0x20 0x28    
   \              0x65 0x78    
   \              0x3D 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_12:
   \        0x0   0x2C 0x20          DC8 ", ey="
   \              0x65 0x79    
   \              0x3D 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37:
   \        0x0   0x....'....        DC32     mksCfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_1:
   \        0x0   0x....'....        DC32     _ZN20unified_bed_leveling14g26_debug_flagE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_2:
   \        0x0   0x....'....        DC32     from_wifi_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_3:
   \        0x0   0x....'....        DC32     customizedSerial

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_4:
   \        0x0   0x43B4'0000        DC32     0x43b40000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_5:
   \        0x0   0xC2B4'0000        DC32     0xc2b40000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_6:
   \        0x0   0x42B4'0000        DC32     0x42b40000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_7:
   \        0x0   0x....'....        DC32     errormagic

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_8:
   \        0x0   0x....'....        DC32     serial2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_9:
   \        0x0   0x4387'0000        DC32     0x43870000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_10:
   \        0x0   0x4334'0000        DC32     0x43340000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_11:
   \        0x0   0xBF80'0000        DC32     0xbf800000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_12:
   \        0x0   0x....'....        DC32     workspace_offset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_13:
   \        0x0   0x41F0'0000        DC32     0x41f00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_14:
   \        0x0   0x9999'999A        DC32     0x9999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_15:
   \        0x0   0xBFB9'9999        DC32     0xbfb99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable38:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable38_1:
   \        0x0   0xC3B4'0000        DC32     0xc3b40000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable38_2:
   \        0x0   0x43B4'0001        DC32     0x43b40001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable38_3:
   \        0x0   0x47C3'4FFF        DC32     0x47c34fff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable38_4:
   \        0x0   0x....'....        DC32     mksCfg+0x60

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable38_5:
   \        0x0   0x402E'0000        DC32     0x402e0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable38_6:
   \        0x0   0x3F80'0001        DC32     0x3f800001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable38_7:
   \        0x0   0x....'....        DC32     _ZN20unified_bed_leveling18mesh_index_to_yposE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable38_8:
   \        0x0   0x....'....        DC32     g26_retracted

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39:
   \        0x0   0x....'....        DC32     mksCfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41:
   \        0x0   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_1:
   \        0x0   0x....'....        DC32     current_position

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_2:
   \        0x0   0x....'....        DC32     _ZN7Planner17max_feedrate_mm_sE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_3:
   \        0x0   0x....'....        DC32     `move_to(float const &, float const &, float const &, float const &)::last_z`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_4:
   \        0x0   0x4040'0000        DC32     0x40400000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_5:
   \        0x0   0x....'....        DC32     destination

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_6:
   \        0x0   0x4120'0000        DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_7:
   \        0x0   0x3FF3'3333        DC32     0x3ff33333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_8:
   \        0x0   0x40A0'0001        DC32     0x40a00001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_9:
   \        0x0   0x4000'0001        DC32     0x40000001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_10:
   \        0x0   0x....'....        DC32     g26_retracted

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_11:
   \        0x0   0x3ECC'CCCD        DC32     0x3ecccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_12:
   \        0x0   0x3FE0'0000        DC32     0x3fe00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_13:
   \        0x0   0x3E4C'CCCD        DC32     0x3e4ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_14:
   \        0x0   0x3E99'999A        DC32     0x3e99999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_15:
   \        0x0   0x3D4C'CCCD        DC32     0x3d4ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_16:
   \        0x0   0x4170'0001        DC32     0x41700001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_17:
   \        0x0   0x3DCC'CCCD        DC32     0x3dcccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_18:
   \        0x0   0x3F80'0001        DC32     0x3f800001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_19:
   \        0x0   0x4080'0001        DC32     0x40800001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_20:
   \        0x0   0x41C8'0001        DC32     0x41c80001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_21:
   \        0x0   0x3FFC'0000        DC32     0x3ffc0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_22:
   \        0x0   0x3FF0'0000        DC32     0x3ff00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_23:
   \        0x0   0x3FD3'3333        DC32     0x3fd33333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_24:
   \        0x0   0x4248'0000        DC32     0x42480000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_25:
   \        0x0   0x....'....        DC32     _ZN20unified_bed_leveling5stateE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_26:
   \        0x0   0x....'....        DC32     mksCfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_27:
   \        0x0   0x....'....        DC32     _ZN20unified_bed_leveling24has_control_of_lcd_panelE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_28:
   \        0x0   0x4040'0001        DC32     0x40400001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_29:
   \        0x0   0x4170'0000        DC32     0x41700000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_30:
   \        0x0   0x4396'0000        DC32     0x43960000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_31:
   \        0x0   0x....'....        DC32     lcd_status_message

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \        0x0   0x4C 0x65          DC8 "Leaving G26"
   \              0x61 0x76    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x47 0x32    
   \              0x36 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_13:
   \        0x0   0x20 0x43          DC8 " Connecting with vertical line (sx="
   \              0x6F 0x6E    
   \              0x6E 0x65    
   \              0x63 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x77 0x69    
   \              0x74 0x68    
   \              0x20 0x76    
   \              0x65 0x72    
   \              0x74 0x69    
   \              0x63 0x61    
   \              0x6C 0x20    
   \              0x6C 0x69    
   \              0x6E 0x65    
   \              0x20 0x28    
   \              0x73 0x78    
   \              0x3D 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_15:
   \        0x0   0x69 0x6E          DC8 "in move_to() feed_value for XY:"
   \              0x20 0x6D    
   \              0x6F 0x76    
   \              0x65 0x5F    
   \              0x74 0x6F    
   \              0x28 0x29    
   \              0x20 0x66    
   \              0x65 0x65    
   \              0x64 0x5F    
   \              0x76 0x61    
   \              0x6C 0x75    
   \              0x65 0x20    
   \              0x66 0x6F    
   \              0x72 0x20    
   \              0x58 0x59    
   \              0x3A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_16:
   \        0x0   0x3F 0x53          DC8 "?Specified bed temperature not plausible.\012"
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x62    
   \              0x65 0x64    
   \              0x20 0x74    
   \              0x65 0x6D    
   \              0x70 0x65    
   \              0x72 0x61    
   \              0x74 0x75    
   \              0x72 0x65    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x70    
   \              0x6C 0x61    
   \              0x75 0x73    
   \              0x69 0x62    
   \              0x6C 0x65    
   \              0x2E 0x0A    
   \              0x00         
   \       0x2B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_17:
   \        0x0   0x3F 0x53          DC8 "?Specified layer height not plausible.\012"
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x6C    
   \              0x61 0x79    
   \              0x65 0x72    
   \              0x20 0x68    
   \              0x65 0x69    
   \              0x67 0x68    
   \              0x74 0x20    
   \              0x6E 0x6F    
   \              0x74 0x20    
   \              0x70 0x6C    
   \              0x61 0x75    
   \              0x73 0x69    
   \              0x62 0x6C    
   \              0x65 0x2E    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_18:
   \        0x0   0x3F 0x53          DC8 "?Specified Retraction Multiplier not plausible.\012"
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x52    
   \              0x65 0x74    
   \              0x72 0x61    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x4D 0x75    
   \              0x6C 0x74    
   \              0x69 0x70    
   \              0x6C 0x69    
   \              0x65 0x72    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x70    
   \              0x6C 0x61    
   \              0x75 0x73    
   \              0x69 0x62    
   \              0x6C 0x65    
   \              0x2E 0x0A    
   \              0x00         
   \       0x31   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_19:
   \        0x0   0x3F 0x52          DC8 "?Retraction Multiplier must be specified.\012"
   \              0x65 0x74    
   \              0x72 0x61    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x4D 0x75    
   \              0x6C 0x74    
   \              0x69 0x70    
   \              0x6C 0x69    
   \              0x65 0x72    
   \              0x20 0x6D    
   \              0x75 0x73    
   \              0x74 0x20    
   \              0x62 0x65    
   \              0x20 0x73    
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x2E 0x0A    
   \              0x00         
   \       0x2B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_20:
   \        0x0   0x3F 0x53          DC8 "?Specified nozzle size not plausible.\012"
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x6E    
   \              0x6F 0x7A    
   \              0x7A 0x6C    
   \              0x65 0x20    
   \              0x73 0x69    
   \              0x7A 0x65    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x70    
   \              0x6C 0x61    
   \              0x75 0x73    
   \              0x69 0x62    
   \              0x6C 0x65    
   \              0x2E 0x0A    
   \              0x00         
   \       0x27   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_21:
   \        0x0   0x3F 0x53          DC8 "?Specified prime length not plausible.\012"
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x70    
   \              0x72 0x69    
   \              0x6D 0x65    
   \              0x20 0x6C    
   \              0x65 0x6E    
   \              0x67 0x74    
   \              0x68 0x20    
   \              0x6E 0x6F    
   \              0x74 0x20    
   \              0x70 0x6C    
   \              0x61 0x75    
   \              0x73 0x69    
   \              0x62 0x6C    
   \              0x65 0x2E    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_22:
   \        0x0   0x3F 0x53          DC8 "?Specified filament size not plausible.\012"
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x66    
   \              0x69 0x6C    
   \              0x61 0x6D    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x73 0x69    
   \              0x7A 0x65    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x70    
   \              0x6C 0x61    
   \              0x75 0x73    
   \              0x69 0x62    
   \              0x6C 0x65    
   \              0x2E 0x0A    
   \              0x00         
   \       0x29   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_23:
   \        0x0   0x3F 0x53          DC8 "?Specified nozzle temperature not plausible.\012"
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x6E    
   \              0x6F 0x7A    
   \              0x7A 0x6C    
   \              0x65 0x20    
   \              0x74 0x65    
   \              0x6D 0x70    
   \              0x65 0x72    
   \              0x61 0x74    
   \              0x75 0x72    
   \              0x65 0x20    
   \              0x6E 0x6F    
   \              0x74 0x20    
   \              0x70 0x6C    
   \              0x61 0x75    
   \              0x73 0x69    
   \              0x62 0x6C    
   \              0x65 0x2E    
   \              0x0A 0x00    
   \       0x2E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_24:
   \        0x0   0x3F 0x53          DC8 "?Specified X coordinate not plausible.\012"
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x58    
   \              0x20 0x63    
   \              0x6F 0x6F    
   \              0x72 0x64    
   \              0x69 0x6E    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x6E 0x6F    
   \              0x74 0x20    
   \              0x70 0x6C    
   \              0x61 0x75    
   \              0x73 0x69    
   \              0x62 0x6C    
   \              0x65 0x2E    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_25:
   \        0x0   0x3F 0x53          DC8 "?Specified Y coordinate not plausible.\012"
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x59    
   \              0x20 0x63    
   \              0x6F 0x6F    
   \              0x72 0x64    
   \              0x69 0x6E    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x6E 0x6F    
   \              0x74 0x20    
   \              0x70 0x6C    
   \              0x61 0x75    
   \              0x73 0x69    
   \              0x62 0x6C    
   \              0x65 0x2E    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_26:
   \        0x0   0x47 0x32          DC8 "G26 Heating Bed."
   \              0x36 0x20    
   \              0x48 0x65    
   \              0x61 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x42 0x65    
   \              0x64 0x2E    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_27:
   \        0x0   0x47 0x32          DC8 "G26 Heating Nozzle."
   \              0x36 0x20    
   \              0x48 0x65    
   \              0x61 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x4E 0x6F    
   \              0x7A 0x7A    
   \              0x6C 0x65    
   \              0x2E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_28:
   \        0x0   0x55 0x73          DC8 "User-Controlled Prime"
   \              0x65 0x72    
   \              0x2D 0x43    
   \              0x6F 0x6E    
   \              0x74 0x72    
   \              0x6F 0x6C    
   \              0x6C 0x65    
   \              0x64 0x20    
   \              0x50 0x72    
   \              0x69 0x6D    
   \              0x65 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_29:
   \        0x0   0x44 0x6F          DC8 "Done Priming"
   \              0x6E 0x65    
   \              0x20 0x50    
   \              0x72 0x69    
   \              0x6D 0x69    
   \              0x6E 0x67    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_30:
   \        0x0   0x46 0x69          DC8 "Fixed Length Prime."
   \              0x78 0x65    
   \              0x64 0x20    
   \              0x4C 0x65    
   \              0x6E 0x67    
   \              0x74 0x68    
   \              0x20 0x50    
   \              0x72 0x69    
   \              0x6D 0x65    
   \              0x2E 0x00    
    898          
    899          #endif // AUTO_BED_LEVELING_UBL && UBL_G26_MESH_EDITING

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   MarlinSerial::print(char const *)
         0   -> MarlinSerial::write(char const *)
         0   -> package_to_wifi
        16   -> strlen
      16   MarlinSerial::write(char const *)
         0   -> BSP_UartIfQueueTxData
        16   -> strlen
       8   MarlinSerial::write(uint8_t)
         8   -> BSP_UartIfQueueTxData
       0   Temperature::degBed()
       0   Temperature::degHotend(uint8_t)
       8   Temperature::setTargetBed(float)
         0   -> Temperature::start_watching_bed()
         8   -> __aeabi_f2iz
       8   Temperature::setTargetHotend(float, uint8_t)
         0   -> Temperature::start_watching_heater(uint8_t)
         8   -> __aeabi_f2iz
       8   exit_from_g26()
         8   -> idle(bool)
         8   -> lcd_reset_alert_level()
         8   -> lcd_setstatuspgm(char const *, uint8_t)
         8   -> ubl_lcd_clicked()
      72   find_closest_circle_to_print(float const &, float const &)
        72   -> __aeabi_d2f
        72   -> __aeabi_dadd
        72   -> __aeabi_ddiv
        72   -> __aeabi_f2d
        72   -> __aeabi_f2iz
        72   -> __aeabi_fadd
        72   -> __aeabi_fmul
        72   -> __aeabi_fsub
        72   -> __aeabi_i2f
        72   -> bit_set(unsigned int *, uint8_t, uint8_t)
        72   -> is_bit_set(unsigned int *, uint8_t, uint8_t)
        72   -> rand
        72   -> sqrtf
        72 __aeabi_cfcmple
        72 __aeabi_cfrcmple
     200   gcode_G26()
       200   -> MarlinSerial::print(char, int)
       200   -> MarlinSerial::write(uint8_t)
       200   -> Stepper::synchronize()
       200   -> Temperature::setTargetBed(float)
       200   -> Temperature::setTargetHotend(float, uint8_t)
       200   -> __aeabi_d2f
       200   -> __aeabi_d2iz
       200   -> __aeabi_dadd
       200   -> __aeabi_ddiv
       200   -> __aeabi_dmul
       200   -> __aeabi_f2d
       200   -> __aeabi_fadd
       200   -> __aeabi_fmul
       200   -> __aeabi_i2d
       200   -> __aeabi_memset
       200   -> axis_unhomed_error(bool, bool, bool)
       200   -> cos
       200   -> do_blocking_move_to_z(float const &, float const &)
       200   -> find_closest_circle_to_print(float const &, float const &)
       200   -> idle(bool)
       200   -> lcd_quick_feedback()
       200   -> lcd_reset_alert_level()
       200   -> lcd_setstatuspgm(char const *, uint8_t)
       200   -> look_for_lines_to_connect()
       200   -> move_to(float const &, float const &, float const &, float const &)
       200   -> parse_G26_parameters()
       200   -> prime_nozzle()
       200   -> print_line_from_here_to_there(float const &, float const &, float const &, float const &, float const &, float const &)
       200   -> retract_filament(float *)
       200   -> serial_echopair_P(char const *, int)
       200   -> serialprintPGM(char const *)
       200   -> set_current_to_destination()
       200   -> set_destination_to_current()
       200   -> sin
       200   -> sync_plan_position_e()
       200   -> turn_on_heaters()
       200   -> ubl_lcd_clicked()
       200   -> valid_trig_angle(float)
       200 __aeabi_cdcmple
       200 __aeabi_cfcmple
       200 __aeabi_cfrcmple
      72   look_for_lines_to_connect()
        72   -> MarlinSerial::print(char, int)
        72   -> MarlinSerial::write(uint8_t)
        72   -> __aeabi_fadd
        72   -> bit_set(unsigned int *, uint8_t, uint8_t)
        72   -> debug_current_and_destination(char const *)
        72   -> is_bit_set(unsigned int *, uint8_t, uint8_t)
        72   -> print_line_from_here_to_there(float const &, float const &, float const &, float const &, float const &, float const &)
        72   -> serial_echopair_P(char const *, float)
        72 __aeabi_cfcmple
      40   move_to(float const &, float const &, float const &, float const &)
        40   -> MarlinSerial::print(char, int)
        40   -> MarlinSerial::write(uint8_t)
        40   -> Stepper::synchronize()
        40   -> __aeabi_fadd
        40   -> __aeabi_fdiv
        40   -> serial_echopair_P(char const *, float)
        40   -> set_destination_to_current()
        40   -> ubl_line_to_destination(float const &, uint8_t)
        40 __aeabi_cfcmpeq
        40 __aeabi_cfcmple
      40   parse_G26_parameters()
        40   -> HAL_GetTick
        40   -> __aeabi_d2f
        40   -> __aeabi_ddiv
        40   -> __aeabi_dmul
        40   -> __aeabi_f2d
        40   -> __aeabi_fmul
        40   -> code_has_value()
        40   -> code_seen(char)
        40   -> code_value_float()
        40   -> code_value_temp_abs()
        40   -> serialprintPGM(char const *)
        40   -> srand
        40 __aeabi_cfcmple
        40 __aeabi_cfrcmple
      24   prime_nozzle()
        24   -> Stepper::synchronize()
        24   -> __aeabi_fadd
        24   -> __aeabi_fdiv
        24   -> __aeabi_memcpy
        24   -> chirp_at_user()
        24   -> idle(bool)
        24   -> lcd_quick_feedback()
        24   -> lcd_setstatuspgm(char const *, uint8_t)
        24   -> retract_filament(float *)
        24   -> set_destination_to_current()
        24   -> ubl_lcd_clicked()
        24   -> ubl_line_to_destination(float const &, uint8_t)
        24   -> un_retract_filament(float *)
        24 __aeabi_cfrcmple
      56   print_line_from_here_to_there(float const &, float const &, float const &, float const &, float const &, float const &)
        56   -> __aeabi_fadd
        56   -> __aeabi_fmul
        56   -> __aeabi_fsub
        56   -> move_to(float const &, float const &, float const &, float const &)
        56   -> print_line_from_here_to_there(float const &, float const &, float const &, float const &, float const &, float const &)
        56   -> retract_filament(float *)
        56   -> sqrtf
        56   -> un_retract_filament(float *)
        56 __aeabi_cfcmple
        56 __aeabi_cfrcmple
      16   retract_filament(float *)
        16   -> __aeabi_fmul
        16   -> move_to(float const &, float const &, float const &, float const &)
       0   serialprintPGM(char const *)
         0   -> MarlinSerial::print(char const *)
         0   -> MarlinSerial::write(char const *)
      24   turn_on_heaters()
        24   -> HAL_Delay
        24   -> HAL_GetTick
        24   -> Temperature::degBed()
        24   -> Temperature::degHotend(uint8_t)
        24   -> Temperature::setTargetBed(float)
        24   -> Temperature::setTargetHotend(float, uint8_t)
        24   -> __aeabi_fsub
        24   -> __aeabi_i2f
         0   -> exit_from_g26()
        24   -> idle(bool)
        24   -> lcd_quick_feedback()
        24   -> lcd_reset_alert_level()
        24   -> lcd_setstatuspgm(char const *, uint8_t)
        24   -> print_heaterstates()
        24   -> ubl_lcd_clicked()
        24 __aeabi_cfrcmple
      16   un_retract_filament(float *)
        16   -> __aeabi_d2f
        16   -> __aeabi_dmul
        16   -> __aeabi_f2d
        16   -> move_to(float const &, float const &, float const &, float const &)
       8   valid_trig_angle(float)
         8   -> __aeabi_fadd
         8 __aeabi_cfcmple
         8 __aeabi_cfrcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable33
       4  ??DataTable33_1
       4  ??DataTable33_2
       4  ??DataTable33_3
       4  ??DataTable33_4
       4  ??DataTable33_5
       4  ??DataTable34
       4  ??DataTable34_1
       4  ??DataTable34_10
       4  ??DataTable34_11
       4  ??DataTable34_12
       4  ??DataTable34_2
       4  ??DataTable34_3
       4  ??DataTable34_4
       4  ??DataTable34_5
       4  ??DataTable34_6
       4  ??DataTable34_7
       4  ??DataTable34_8
       4  ??DataTable34_9
       4  ??DataTable37
       4  ??DataTable37_1
       4  ??DataTable37_10
       4  ??DataTable37_11
       4  ??DataTable37_12
       4  ??DataTable37_13
       4  ??DataTable37_14
       4  ??DataTable37_15
       4  ??DataTable37_2
       4  ??DataTable37_3
       4  ??DataTable37_4
       4  ??DataTable37_5
       4  ??DataTable37_6
       4  ??DataTable37_7
       4  ??DataTable37_8
       4  ??DataTable37_9
       4  ??DataTable38
       4  ??DataTable38_1
       4  ??DataTable38_2
       4  ??DataTable38_3
       4  ??DataTable38_4
       4  ??DataTable38_5
       4  ??DataTable38_6
       4  ??DataTable38_7
       4  ??DataTable38_8
       4  ??DataTable39
       4  ??DataTable41
       4  ??DataTable41_1
       4  ??DataTable41_10
       4  ??DataTable41_11
       4  ??DataTable41_12
       4  ??DataTable41_13
       4  ??DataTable41_14
       4  ??DataTable41_15
       4  ??DataTable41_16
       4  ??DataTable41_17
       4  ??DataTable41_18
       4  ??DataTable41_19
       4  ??DataTable41_2
       4  ??DataTable41_20
       4  ??DataTable41_21
       4  ??DataTable41_22
       4  ??DataTable41_23
       4  ??DataTable41_24
       4  ??DataTable41_25
       4  ??DataTable41_26
       4  ??DataTable41_27
       4  ??DataTable41_28
       4  ??DataTable41_29
       4  ??DataTable41_3
       4  ??DataTable41_30
       4  ??DataTable41_31
       4  ??DataTable41_4
       4  ??DataTable41_5
       4  ??DataTable41_6
       4  ??DataTable41_7
       4  ??DataTable41_8
       4  ??DataTable41_9
      48  ?_0
      28  ?_1
       8  ?_10
      12  ?_11
       8  ?_12
      36  ?_13
      28  ?_14
      32  ?_15
      44  ?_16
      40  ?_17
      52  ?_18
      44  ?_19
       1  ?_2
      40  ?_20
      40  ?_21
      44  ?_22
      48  ?_23
      40  ?_24
      40  ?_25
      20  ?_26
      20  ?_27
      24  ?_28
      16  ?_29
      16  ?_3
      20  ?_30
      56  ?_4
      32  ?_5
      28  ?_6
       8  ?_7
      12  ?_8
      40  ?_9
      64  MarlinSerial::print(char const *)
      28  MarlinSerial::write(char const *)
      12  MarlinSerial::write(uint8_t)
      12  Temperature::degBed()
      12  Temperature::degHotend(uint8_t)
      24  Temperature::setTargetBed(float)
      24  Temperature::setTargetHotend(float, uint8_t)
      36  exit_from_g26()
     488  find_closest_circle_to_print(float const &, float const &)
     248  g26_retracted
          prime_flag
          keep_heaters_on
          bed_temp
          hotend_temp
          continue_with_closest
          g26_e_axis_feedrate
          random_deviation
          layer_height
          extrusion_multiplier
          retraction_multiplier
          nozzle
          filament_diameter
          prime_length
          x_pos
          y_pos
          ooze_amount
          circle_flags
          horizontal_mesh_line_flags
          vertical_mesh_line_flags
    1658  gcode_G26()
       4  last_z
     984  look_for_lines_to_connect()
     266  move_to(float const &, float const &, float const &, float const &)
     938  parse_G26_parameters()
     244  prime_nozzle()
     468  print_line_from_here_to_there(float const &, float const &, float const &, float const &, float const &, float const &)
      42  retract_filament(float *)
      36  serialprintPGM(char const *)
     292  turn_on_heaters()
      56  un_retract_filament(float *)
      44  valid_trig_angle(float)

 
   252 bytes in section .data
     1 byte  in section .rodata
 6 960 bytes in section .text
 
 6 748 bytes of CODE  memory (+ 212 bytes shared)
     1 byte  of CONST memory
   252 bytes of DATA  memory

Errors: none
Warnings: 11
