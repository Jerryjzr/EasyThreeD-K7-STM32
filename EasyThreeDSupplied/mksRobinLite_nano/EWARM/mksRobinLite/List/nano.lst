###############################################################################
#
# IAR ANSI C/C++ Compiler V8.30.1.114/W32 for ARM         07/May/2021  14:21:31
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\Users\PLT\Desktop\mksRobinLite_nano\Src\nano.cpp
#    Command line =  
#        -f C:\Users\PLT\AppData\Local\Temp\EWEE6A.tmp
#        (C:\Users\PLT\Desktop\mksRobinLite_nano\Src\nano.cpp -D USE_HAL_DRIVER
#        -D STM32F103xE -D MKS_ROBIN -D MARLIN -D __arm__ -D USE_MKS_WIFI
#        --preprocess=s
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List -lC
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List -lA
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List
#        --diag_suppress Pa050 -o
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\Obj
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.1\arm\inc\c\DLib_Config_Full.h" -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Inc\ -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Src\ -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/Inc\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/CMSIS/Include\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/STM32MKS-3dPrinter\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/Common\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/l6474\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/MotorControl\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/u8glib_arm_v1.17/src\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/arduino\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/arduino/avr\
#        -I C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Inc/Logo\ -Om --c++
#        --no_exceptions --no_rtti -I "D:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.1\arm\CMSIS\Core\Include\" -I "D:\Program
#        Files (x86)\IAR Systems\Embedded Workbench
#        8.1\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List\nano.lst
#    Object file  =  
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\Obj\nano.o
#
###############################################################################

C:\Users\PLT\Desktop\mksRobinLite_nano\Src\nano.cpp
      1          #include "Marlin.h"

    #define SDSS   18
            ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\pins_MKS_ROBIN_LITE.h",161  Warning[Pa181]: 
          incompatible redefinition of macro "SDSS" (declared at line 62)

  #define UNUSED(x) ((void)(x))
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pa181]: 
          incompatible redefinition of macro "UNUSED" (declared at line 88 of
          "C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marl
          in\macros.h")

  #define PRINT_LED_PIN         PDout(2)
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Drivers\BSP\STM32MKS-3dPrinter\mks_fastio.h",14  Warning[Pa181]: 
          incompatible redefinition of macro "PRINT_LED_PIN" (declared at line
          146 of "C:\Users\PLT\Desktop\mksRobinLite_nano\Inc\main.h")
      2          #include "cardreader.h"

  #define PSTR(str) (str)
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\arduino\avr\pgmspace.h",8  Warning[Pa181]: 
          incompatible redefinition of macro "PSTR" (declared at line 59 of
          "C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_P
          arty/Marlin\Marlin.h")

  #define strcpy_P(dest, src) strcpy((dest), (src))
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\arduino\avr\pgmspace.h",23  Warning[Pa181]: 
          incompatible redefinition of macro "strcpy_P" (declared at line 93 of
          "C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marl
          in\Marlin_export.h")

  #define strstr_P(a, b) strstr((a), (b))
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\arduino\avr\pgmspace.h",26  Warning[Pa181]: 
          incompatible redefinition of macro "strstr_P" (declared at line 94 of
          "C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marl
          in\Marlin_export.h")

  #define sprintf_P(s, f, ...) sprintf((s), (f), __VA_ARGS__)
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\arduino\avr\pgmspace.h",28  Warning[Pa181]: 
          incompatible redefinition of macro "sprintf_P" (declared at line 95
          of
          "C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marl
          in\Marlin_export.h")

  #define pgm_read_word_near(addr) pgm_read_word(addr)
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\arduino\avr\pgmspace.h",36  Warning[Pa181]: 
          incompatible redefinition of macro "pgm_read_word_near" (declared at
          line 65 of
          "C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marl
          in\Marlin_export.h")

  class SdFile : public SdBaseFile, public Print {
        ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\SdFile.h",45  Warning[Pe611]: 
          overloaded virtual function "Print::write" is only partially
          overridden in class "SdFile"

   \                                 In section .text, align 2
   \   __interwork __softfp void CardReader::pauseSDPrint()
   \                     _ZN10CardReader12pauseSDPrintEv: (+1)
   \        0x0   0x2100             MOVS     R1,#+0
   \        0x2   0x7081             STRB     R1,[R0, #+2]
   \        0x4   0x4770             BX       LR               ;; return

    FORCE_INLINE bool renameFile(const char * newPath){ file.rename(curDir, newPath);}
                                                                                     ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\cardreader.h",99  Warning[Pe940]: 
          missing return statement at end of non-void function
          "CardReader::renameFile"
      3          #include "temperature.h"

   \                                 In section .text, align 4
   \   __interwork __softfp void Temperature::setTargetHotend(float, uint8_t)
   \                     _ZN11Temperature15setTargetHotendEfh: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}

        target_temperature[HOTEND_INDEX] = celsius;
                                         ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\temperature.h",401  Warning[Pa093]: 
          implicit conversion from floating point to integer
   \        0x2   0x.... 0x....      BL       __aeabi_f2iz
   \        0x6   0x4903             LDR.N    R1,??setTargetHotend_0
   \        0x8   0x6008             STR      R0,[R1, #+0]
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0xE8BD 0x4002      POP      {R1,LR}
   \       0x10   0x.... 0x....      B.W      _ZN11Temperature21start_watching_heaterEh
   \                     ??setTargetHotend_0:
   \       0x14   0x....'....        DC32     _ZN11Temperature18target_temperatureE

        target_temperature_bed = celsius;
                               ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\temperature.h",408  Warning[Pa093]: 
          implicit conversion from floating point to integer
      4          #include "cardreader.h"
      5          #include "stepper.h"
      6          //#include "bsp_pin.h"
      7          #include "mks_fastio.h"
      8          #include "nano.h"
      9          #include "mks_reprint.h"
     10          #include "mks_cfg.h"
     11          
     12          uint16_t blink_time = 0;  
     13          uint8_t print_key_flag = 0; 
     14          float z_height_stop = 0; 
     15          float temperature_protect_last = 0;
     16          uint32_t protect_time = 0;
     17          uint8_t print_pause = 0; //????????
     18          uint32_t sys_time = 0;
     19          uint8_t print_cancel_raise;
     20          
     21          bool cancel_heatup;
     22          
     23          extern bool volatile wait_for_heatup;
     24          extern DATA_REPRINT_ITMES mksReprint;
     25          

   \                                 In section .text, align 2, keep-with-next
     26          void nano_sdcard_pause() {
   \                     _Z17nano_sdcard_pausev: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     27          
     28          	if(mksReprint.mks_printer_state == MKS_REPRINTED)	return;
   \        0x2   0x.... 0x....      LDR.W    R4,??DataTable19_2
   \        0x6   0xF894 0x0068      LDRB     R0,[R4, #+104]
   \        0xA   0x28AB             CMP      R0,#+171
   \        0xC   0xD00A             BEQ.N    ??nano_sdcard_pause_0
     29          	
     30                card.pauseSDPrint();
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable19_3
   \       0x12   0x.... 0x....      BL       _ZN10CardReader12pauseSDPrintEv
     31                print_job_timer.pause();
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable19_4
   \       0x1A   0x.... 0x....      BL       _ZN9Stopwatch5pauseEv
     32                #if ENABLED(PARK_HEAD_ON_PAUSE)
     33                  enqueue_and_echo_commands_P(PSTR("M125"));
     34                #endif
     35          
     36          	  /*-----------pause begin---------------*/   
     37          		//stepper.waitUntilEndOfAllBuffers();
     38          		mksReprint.mks_printer_state = MKS_PAUSING;
   \       0x1E   0x20A8             MOVS     R0,#+168
   \       0x20   0xF884 0x0068      STRB     R0,[R4, #+104]
     39          	  /*-----------pause end-----------------*/   	  
     40           }
   \                     ??nano_sdcard_pause_0: (+1)
   \       0x24   0xBD10             POP      {R4,PC}          ;; return
     41          

   \                                 In section .text, align 2, keep-with-next
     42           void nano_sdcard_resume() {
   \                     _Z18nano_sdcard_resumev: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     43          
     44          	mks_resumePrint();
   \        0x2   0x.... 0x....      BL       mks_resumePrint
     45                          
     46          
     47                #if ENABLED(PARK_HEAD_ON_PAUSE)
     48                  enqueue_and_echo_commands_P(PSTR("M24"));
     49                #else
     50          	  if(mksReprint.mks_printer_state != MKS_REPRINTING && mksReprint.mks_printer_state != MKS_REPRINTED)
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable19_2
   \        0xA   0xF890 0x0068      LDRB     R0,[R0, #+104]
   \        0xE   0x28AA             CMP      R0,#+170
   \       0x10   0xD00B             BEQ.N    ??nano_sdcard_resume_0
   \       0x12   0x28AB             CMP      R0,#+171
   \       0x14   0xD009             BEQ.N    ??nano_sdcard_resume_0
     51          	  	{
     52                  card.startFileprint();
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable19_3
   \       0x1A   0x.... 0x....      BL       _ZN10CardReader14startFileprintEv
     53                  print_job_timer.start();
   \       0x1E   0x.... 0x....      LDR.W    R0,??DataTable19_4
   \       0x22   0xE8BD 0x4002      POP      {R1,LR}
   \       0x26   0x.... 0x....      B.W      _ZN9Stopwatch5startEv
     54          	  	}
     55                #endif
     56          }
   \                     ??nano_sdcard_resume_0: (+1)
   \       0x2A   0xBD01             POP      {R0,PC}          ;; return
     57          

   \                                 In section .text, align 2, keep-with-next
     58          void nano_sdcard_stop() {
   \                     _Z16nano_sdcard_stopv: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable19_2
   \        0x4   0xF890 0x1068      LDRB     R1,[R0, #+104]
   \        0x8   0x29AB             CMP      R1,#+171
   \        0xA   0xD100             BNE.N    ??nano_sdcard_stop_0
   \        0xC   0x4770             BX       LR
   \                     ??nano_sdcard_stop_0: (+1)
   \        0xE   0xB580             PUSH     {R7,LR}
     59          	if(mksReprint.mks_printer_state == MKS_REPRINTED)	
     60                    return;
     61          
     62          	  mksReprint.mks_printer_state = MKS_IDLE;
   \       0x10   0x21A6             MOVS     R1,#+166
   \       0x12   0xF880 0x1068      STRB     R1,[R0, #+104]
     63          	  epr_write_data(EPR_SAV_FLAG, (uint8_t *)&mksReprint.mks_printer_state,sizeof(mksReprint.mks_printer_state));
   \       0x16   0x2201             MOVS     R2,#+1
   \       0x18   0xF100 0x0168      ADD      R1,R0,#+104
   \       0x1C   0xF44F 0x60AF      MOV      R0,#+1400
   \       0x20   0x.... 0x....      BL       epr_write_data
     64          		
     65                card.stopSDPrint();
   \       0x24   0x.... 0x....      LDR.W    R0,??DataTable19_3
   \       0x28   0x.... 0x....      BL       _ZN10CardReader11stopSDPrintEv
     66                clear_command_queue();
   \       0x2C   0x.... 0x....      BL       _Z19clear_command_queuev
     67                quickstop_stepper();
   \       0x30   0x.... 0x....      BL       _Z17quickstop_stepperv
     68                print_job_timer.stop();
   \       0x34   0x.... 0x....      LDR.W    R0,??DataTable19_4
   \       0x38   0x.... 0x....      BL       _ZN9Stopwatch4stopEv
     69                thermalManager.disable_all_heaters();
   \       0x3C   0x.... 0x....      BL       _ZN11Temperature19disable_all_heatersEv
     70                #if FAN_COUNT > 0
     71                  for (uint8_t i = 0; i < FAN_COUNT; i++) fanSpeeds[i] = 0;
   \       0x40   0x2000             MOVS     R0,#+0
   \       0x42   0x.... 0x....      LDR.W    R1,??DataTable19_5
   \       0x46   0xE002             B.N      ??nano_sdcard_stop_1
   \                     ??nano_sdcard_stop_2: (+1)
   \       0x48   0x2000             MOVS     R0,#+0
   \       0x4A   0x6008             STR      R0,[R1, #+0]
   \       0x4C   0x2001             MOVS     R0,#+1
   \                     ??nano_sdcard_stop_1: (+1)
   \       0x4E   0x2800             CMP      R0,#+0
   \       0x50   0xD0FA             BEQ.N    ??nano_sdcard_stop_2
     72          	TIM1->CCR1 = 0 ;
   \       0x52   0x2000             MOVS     R0,#+0
   \       0x54   0x.... 0x....      LDR.W    R1,??DataTable19_6  ;; 0x40012c34
   \       0x58   0x6008             STR      R0,[R1, #+0]
     73                #endif
     74                wait_for_heatup = false;
   \       0x5A   0x.... 0x....      LDR.W    R1,??DataTable19_7
   \       0x5E   0x7008             STRB     R0,[R1, #+0]
     75           //     LCD_MESSAGEPGM(MSG_PRINT_ABORTED);
     76           }
   \       0x60   0xBD01             POP      {R0,PC}          ;; return
     77          

   \                                 In section .text, align 2, keep-with-next
     78          void NanoInit()
     79          {
   \                     _Z8NanoInitv: (+1)
   \        0x0   0xB578             PUSH     {R3-R6,LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
     80            GPIO_InitTypeDef GPIO_InitStruct;
     81          
     82            /* GPIO Ports Clock Enable */
     83            __HAL_RCC_GPIOC_CLK_ENABLE();
   \        0x4   0x.... 0x....      LDR.W    R0,??DataTable19_8  ;; 0x40021018
   \        0x8   0x6801             LDR      R1,[R0, #+0]
   \        0xA   0xF041 0x0110      ORR      R1,R1,#0x10
   \        0xE   0x6001             STR      R1,[R0, #+0]
   \       0x10   0x6801             LDR      R1,[R0, #+0]
   \       0x12   0xF001 0x0110      AND      R1,R1,#0x10
   \       0x16   0x9104             STR      R1,[SP, #+16]
   \       0x18   0x9904             LDR      R1,[SP, #+16]
     84            __HAL_RCC_GPIOD_CLK_ENABLE();
   \       0x1A   0x6801             LDR      R1,[R0, #+0]
   \       0x1C   0xF041 0x0120      ORR      R1,R1,#0x20
   \       0x20   0x6001             STR      R1,[R0, #+0]
   \       0x22   0x6801             LDR      R1,[R0, #+0]
   \       0x24   0xF001 0x0120      AND      R1,R1,#0x20
   \       0x28   0x9104             STR      R1,[SP, #+16]
   \       0x2A   0x9904             LDR      R1,[SP, #+16]
     85            __HAL_RCC_GPIOA_CLK_ENABLE();
   \       0x2C   0x6801             LDR      R1,[R0, #+0]
   \       0x2E   0xF041 0x0104      ORR      R1,R1,#0x4
   \       0x32   0x6001             STR      R1,[R0, #+0]
   \       0x34   0x6801             LDR      R1,[R0, #+0]
   \       0x36   0xF001 0x0104      AND      R1,R1,#0x4
   \       0x3A   0x9104             STR      R1,[SP, #+16]
   \       0x3C   0x9904             LDR      R1,[SP, #+16]
     86            __HAL_RCC_GPIOB_CLK_ENABLE();
   \       0x3E   0x6801             LDR      R1,[R0, #+0]
   \       0x40   0xF041 0x0108      ORR      R1,R1,#0x8
   \       0x44   0x6001             STR      R1,[R0, #+0]
   \       0x46   0x6800             LDR      R0,[R0, #+0]
   \       0x48   0xF000 0x0008      AND      R0,R0,#0x8
   \       0x4C   0x9004             STR      R0,[SP, #+16]
   \       0x4E   0x9804             LDR      R0,[SP, #+16]
     87            
     88            GPIO_InitStruct.Pin = GPIO_PIN_11;
   \       0x50   0xF44F 0x6000      MOV      R0,#+2048
   \       0x54   0x9000             STR      R0,[SP, #+0]
     89            GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
   \       0x56   0x2000             MOVS     R0,#+0
   \       0x58   0x9001             STR      R0,[SP, #+4]
     90            GPIO_InitStruct.Pull = GPIO_PULLUP;
   \       0x5A   0x2001             MOVS     R0,#+1
   \       0x5C   0x9002             STR      R0,[SP, #+8]
     91            GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
   \       0x5E   0x9003             STR      R0,[SP, #+12]
     92            HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   \       0x60   0x4669             MOV      R1,SP
   \       0x62   0x.... 0x....      LDR.W    R0,??DataTable19_9  ;; 0x40010800
   \       0x66   0x.... 0x....      BL       HAL_GPIO_Init
     93           
     94              
     95            GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_5;
   \       0x6A   0x2028             MOVS     R0,#+40
   \       0x6C   0x9000             STR      R0,[SP, #+0]
     96            GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
   \       0x6E   0x2000             MOVS     R0,#+0
   \       0x70   0x9001             STR      R0,[SP, #+4]
     97            GPIO_InitStruct.Pull = GPIO_PULLUP;
   \       0x72   0x2001             MOVS     R0,#+1
   \       0x74   0x9002             STR      R0,[SP, #+8]
     98            GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
   \       0x76   0x9003             STR      R0,[SP, #+12]
     99            HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
   \       0x78   0x.... 0x....      LDR.W    R4,??DataTable19_10  ;; 0x40010c00
   \       0x7C   0x4669             MOV      R1,SP
   \       0x7E   0x4620             MOV      R0,R4
   \       0x80   0x.... 0x....      BL       HAL_GPIO_Init
    100            
    101            GPIO_InitStruct.Pin = GPIO_PIN_3;
   \       0x84   0x2008             MOVS     R0,#+8
   \       0x86   0x9000             STR      R0,[SP, #+0]
    102            GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
   \       0x88   0x2000             MOVS     R0,#+0
   \       0x8A   0x9001             STR      R0,[SP, #+4]
    103            GPIO_InitStruct.Pull = GPIO_PULLUP;
   \       0x8C   0x2001             MOVS     R0,#+1
   \       0x8E   0x9002             STR      R0,[SP, #+8]
    104            GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
   \       0x90   0x9003             STR      R0,[SP, #+12]
    105            HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
   \       0x92   0x.... 0x....      LDR.W    R5,??DataTable19_11  ;; 0x40011000
   \       0x96   0x4669             MOV      R1,SP
   \       0x98   0x4628             MOV      R0,R5
   \       0x9A   0x.... 0x....      BL       HAL_GPIO_Init
    106            
    107            
    108            GPIO_InitStruct.Pin = GPIO_PIN_4;
   \       0x9E   0x2010             MOVS     R0,#+16
   \       0xA0   0x9000             STR      R0,[SP, #+0]
    109            GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
   \       0xA2   0x2001             MOVS     R0,#+1
   \       0xA4   0x9001             STR      R0,[SP, #+4]
    110            GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
   \       0xA6   0x9003             STR      R0,[SP, #+12]
    111            HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
   \       0xA8   0x4669             MOV      R1,SP
   \       0xAA   0x4620             MOV      R0,R4
   \       0xAC   0x.... 0x....      BL       HAL_GPIO_Init
    112              
    113            GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2;
   \       0xB0   0x2006             MOVS     R0,#+6
   \       0xB2   0x9000             STR      R0,[SP, #+0]
    114            GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
   \       0xB4   0x2001             MOVS     R0,#+1
   \       0xB6   0x9001             STR      R0,[SP, #+4]
    115            GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
   \       0xB8   0x9003             STR      R0,[SP, #+12]
    116            HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
   \       0xBA   0x4669             MOV      R1,SP
   \       0xBC   0x4628             MOV      R0,R5
   \       0xBE   0x.... 0x....      BL       HAL_GPIO_Init
    117            
    118            GPIO_InitStruct.Pin = GPIO_PIN_2;
   \       0xC2   0x2004             MOVS     R0,#+4
   \       0xC4   0x9000             STR      R0,[SP, #+0]
    119            GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
   \       0xC6   0x2001             MOVS     R0,#+1
   \       0xC8   0x9001             STR      R0,[SP, #+4]
    120            GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
   \       0xCA   0x9003             STR      R0,[SP, #+12]
    121            HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
   \       0xCC   0x.... 0x....      LDR.W    R6,??DataTable19_12  ;; 0x40011400
   \       0xD0   0x4669             MOV      R1,SP
   \       0xD2   0x4630             MOV      R0,R6
   \       0xD4   0x.... 0x....      BL       HAL_GPIO_Init
    122            
    123            HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4 , GPIO_PIN_RESET);
   \       0xD8   0x2200             MOVS     R2,#+0
   \       0xDA   0x2110             MOVS     R1,#+16
   \       0xDC   0x4620             MOV      R0,R4
   \       0xDE   0x.... 0x....      BL       HAL_GPIO_WritePin
    124            HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1|GPIO_PIN_2, GPIO_PIN_RESET);
   \       0xE2   0x2200             MOVS     R2,#+0
   \       0xE4   0x2106             MOVS     R1,#+6
   \       0xE6   0x4628             MOV      R0,R5
   \       0xE8   0x.... 0x....      BL       HAL_GPIO_WritePin
    125            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_RESET);
   \       0xEC   0x2200             MOVS     R2,#+0
   \       0xEE   0x2104             MOVS     R1,#+4
   \       0xF0   0x4630             MOV      R0,R6
   \       0xF2   0x.... 0x....      BL       HAL_GPIO_WritePin
    126          }
   \       0xF6   0xB006             ADD      SP,SP,#+24
   \       0xF8   0xBD70             POP      {R4-R6,PC}       ;; return
    127          
    128          //go home

   \                                 In section .text, align 2, keep-with-next
    129          void GoHomeCheck(void)
    130          {
    131          	static int pin_time;
    132          	static int once=0;
    133          	if (card.sdprintflag == true||print_key_flag==2)
   \                     _Z11GoHomeCheckv: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable19_3
   \        0x4   0x7940             LDRB     R0,[R0, #+5]
   \        0x6   0x2801             CMP      R0,#+1
   \        0x8   0xD01C             BEQ.N    ??GoHomeCheck_0
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable19_13
   \        0xE   0x7808             LDRB     R0,[R1, #+0]
   \       0x10   0x2802             CMP      R0,#+2
   \       0x12   0xD017             BEQ.N    ??GoHomeCheck_0
    134          	{
    135          		return;
    136          	}
    137                  
    138          	if(!PRINT_HOME_PIN)
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable19_14  ;; 0x4222010c
   \       0x18   0x6800             LDR      R0,[R0, #+0]
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD103             BNE.N    ??GoHomeCheck_1
    139          	{
    140          		pin_time++;
   \       0x1E   0x6908             LDR      R0,[R1, #+16]
   \       0x20   0x1C40             ADDS     R0,R0,#+1
   \       0x22   0x6108             STR      R0,[R1, #+16]
   \       0x24   0xE002             B.N      ??GoHomeCheck_2
    141          	}
    142          	else
    143          	{
    144          		once = 0;
   \                     ??GoHomeCheck_1: (+1)
   \       0x26   0x2000             MOVS     R0,#+0
   \       0x28   0x6148             STR      R0,[R1, #+20]
    145          		pin_time = 0;
   \       0x2A   0x6108             STR      R0,[R1, #+16]
    146          	}
    147          	
    148          	if(pin_time>32)
   \                     ??GoHomeCheck_2: (+1)
   \       0x2C   0x6908             LDR      R0,[R1, #+16]
   \       0x2E   0x2821             CMP      R0,#+33
   \       0x30   0xDB08             BLT.N    ??GoHomeCheck_0
    149          	{
    150          		if(once==0)
   \       0x32   0x6948             LDR      R0,[R1, #+20]
   \       0x34   0x2800             CMP      R0,#+0
   \       0x36   0xD105             BNE.N    ??GoHomeCheck_0
    151          		{	
    152          			once=1;
   \       0x38   0x2001             MOVS     R0,#+1
   \       0x3A   0x6148             STR      R0,[R1, #+20]
    153          			enqueue_and_echo_commands_P(PSTR("G28 X0 Y0 Z0"));
   \       0x3C   0x.... 0x....      ADR.W    R0,?_0
   \       0x40   0x.... 0x....      B.W      _Z27enqueue_and_echo_commands_PPKc
    154          		}
    155          	}
    156          }
   \                     ??GoHomeCheck_0: (+1)
   \       0x44   0x4770             BX       LR               ;; return
    157          

   \                                 In section .text, align 2, keep-with-next
    158          void BlinkLed(void)
    159          {
   \                     _Z8BlinkLedv: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    160          	static uint32_t blink_time_previous=0;
    161          	static uint32_t blink_time_start=0;
    162          	
    163          	if(blink_time == 0) //OFF
   \        0x2   0x.... 0x....      LDR.W    R4,??DataTable19_13
   \        0x6   0x88E0             LDRH     R0,[R4, #+6]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD104             BNE.N    ??BlinkLed_0
    164          	{
    165          		PRINT_LED_PIN=1;//WRITE(PRINT_LED_PIN,1);
   \        0xC   0x2001             MOVS     R0,#+1
   \        0xE   0x.... 0x....      LDR.W    R1,??DataTable19_15  ;; 0x42228188
   \       0x12   0x6008             STR      R0,[R1, #+0]
    166          		return;
   \       0x14   0xBD10             POP      {R4,PC}
    167          	}
    168          	if(blink_time > 3000) //ON
   \                     ??BlinkLed_0: (+1)
   \       0x16   0x4601             MOV      R1,R0
   \       0x18   0xF640 0x32B9      MOVW     R2,#+3001
   \       0x1C   0x4291             CMP      R1,R2
   \       0x1E   0xDB04             BLT.N    ??BlinkLed_1
    169          	{
    170          		PRINT_LED_PIN=0;//WRITE(PRINT_LED_PIN,0);
   \       0x20   0x2000             MOVS     R0,#+0
   \       0x22   0x.... 0x....      LDR.W    R1,??DataTable19_15  ;; 0x42228188
   \       0x26   0x6008             STR      R0,[R1, #+0]
    171          		return;
   \       0x28   0xBD10             POP      {R4,PC}
    172          	}
    173          	
    174          	if(blink_time_previous!=blink_time)
   \                     ??BlinkLed_1: (+1)
   \       0x2A   0x69A1             LDR      R1,[R4, #+24]
   \       0x2C   0x4281             CMP      R1,R0
   \       0x2E   0xD003             BEQ.N    ??BlinkLed_2
    175          	{
    176          		blink_time_previous = blink_time;
   \       0x30   0x61A0             STR      R0,[R4, #+24]
    177          		blink_time_start = millis();
   \       0x32   0x.... 0x....      BL       HAL_GetTick
   \       0x36   0x61E0             STR      R0,[R4, #+28]
    178          	}
    179          	if(millis()<blink_time_start+blink_time)
   \                     ??BlinkLed_2: (+1)
   \       0x38   0x.... 0x....      BL       HAL_GetTick
   \       0x3C   0x69E2             LDR      R2,[R4, #+28]
   \       0x3E   0x88E1             LDRH     R1,[R4, #+6]
   \       0x40   0x188A             ADDS     R2,R1,R2
   \       0x42   0x4290             CMP      R0,R2
   \       0x44   0xD204             BCS.N    ??BlinkLed_3
    180          	{
    181                      PRINT_LED_PIN = 0;
   \       0x46   0x2000             MOVS     R0,#+0
   \       0x48   0x.... 0x....      LDR.W    R1,??DataTable19_15  ;; 0x42228188
   \       0x4C   0x6008             STR      R0,[R1, #+0]
   \       0x4E   0xBD10             POP      {R4,PC}
    182          		//WRITE(PRINT_LED_PIN,0);
    183          	}
    184          	else if(millis()<blink_time_start+2*blink_time)
   \                     ??BlinkLed_3: (+1)
   \       0x50   0x.... 0x....      BL       HAL_GetTick
   \       0x54   0x69E1             LDR      R1,[R4, #+28]
   \       0x56   0x88E2             LDRH     R2,[R4, #+6]
   \       0x58   0xEB01 0x0142      ADD      R1,R1,R2, LSL #+1
   \       0x5C   0x4288             CMP      R0,R1
   \       0x5E   0xD204             BCS.N    ??BlinkLed_4
    185          	{
    186                    PRINT_LED_PIN = 1;
   \       0x60   0x2001             MOVS     R0,#+1
   \       0x62   0x.... 0x....      LDR.W    R1,??DataTable19_15  ;; 0x42228188
   \       0x66   0x6008             STR      R0,[R1, #+0]
   \       0x68   0xBD10             POP      {R4,PC}
    187          		//WRITE(PRINT_LED_PIN,1);
    188          	}
    189          	else
    190          	{
    191          		blink_time_start = millis();
   \                     ??BlinkLed_4: (+1)
   \       0x6A   0x.... 0x....      BL       HAL_GetTick
   \       0x6E   0x61E0             STR      R0,[R4, #+28]
    192          	}	
    193          }
   \       0x70   0xBD10             POP      {R4,PC}          ;; return
    194          
    195          //Print key

   \                                 In section .text, align 4, keep-with-next
    196          void PrintOneKey(void)
    197          {
   \                     _Z11PrintOneKeyv: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
    198          	static uint8_t key_status=0;
    199          	static uint32_t key_time = 0;
    200          	static uint8_t pause_flag = 0;
    201                  
    202                  static uint8_t print_flag = 0;
    203          
    204          	if(key_status == 0)  
   \        0x2   0x.... 0x....      LDR.W    R4,??DataTable19_13
   \        0x6   0x78A0             LDRB     R0,[R4, #+2]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD11A             BNE.N    ??PrintOneKey_0
    205          	{
    206          		if(!PRINT_PIN)//!READ(PRINT_PIN))
   \        0xC   0x.... 0x....      LDR.W    R0,??DataTable19_16  ;; 0x4221012c
   \       0x10   0x6800             LDR      R0,[R0, #+0]
   \       0x12   0x2800             CMP      R0,#+0
   \       0x14   0xD104             BNE.N    ??PrintOneKey_1
    207          		{
    208          			key_time = millis();
   \       0x16   0x.... 0x....      BL       HAL_GetTick
   \       0x1A   0x6220             STR      R0,[R4, #+32]
    209          			key_status = 1;
   \       0x1C   0x2001             MOVS     R0,#+1
   \       0x1E   0x70A0             STRB     R0,[R4, #+2]
    210          		}
    211                           if(print_flag!=0 && card.sdprintflag == false)
   \                     ??PrintOneKey_1: (+1)
   \       0x20   0x78E0             LDRB     R0,[R4, #+3]
   \       0x22   0x2800             CMP      R0,#+0
   \       0x24   0xF000 0x80B9      BEQ.W    ??PrintOneKey_2
   \       0x28   0x.... 0x....      LDR.W    R0,??DataTable19_3
   \       0x2C   0x7940             LDRB     R0,[R0, #+5]
   \       0x2E   0x2800             CMP      R0,#+0
   \       0x30   0xF040 0x80B3      BNE.W    ??PrintOneKey_2
    212          		{
    213          			BLINK_LED(LED_ON);
   \       0x34   0xF44F 0x607A      MOV      R0,#+4000
   \       0x38   0x80E0             STRH     R0,[R4, #+6]
    214                                  print_key_flag = 0;
   \       0x3A   0x2000             MOVS     R0,#+0
   \       0x3C   0x7020             STRB     R0,[R4, #+0]
    215                                  print_flag = 0;
   \       0x3E   0x70E0             STRB     R0,[R4, #+3]
   \       0x40   0xBDF1             POP      {R0,R4-R7,PC}
    216          			
    217          		}
    218          	}
    219          	else if(key_status == 1) 
   \                     ??PrintOneKey_0: (+1)
   \       0x42   0x2801             CMP      R0,#+1
   \       0x44   0xD114             BNE.N    ??PrintOneKey_3
    220          	{
    221          		if(key_time+30<millis())
   \       0x46   0x.... 0x....      BL       HAL_GetTick
   \       0x4A   0x6A21             LDR      R1,[R4, #+32]
   \       0x4C   0x311E             ADDS     R1,R1,#+30
   \       0x4E   0x4281             CMP      R1,R0
   \       0x50   0xF080 0x80A3      BCS.W    ??PrintOneKey_2
    222          		{
    223          			if(!PRINT_PIN)//!READ(PRINT_PIN)) 
   \       0x54   0x.... 0x....      LDR.W    R0,??DataTable19_16  ;; 0x4221012c
   \       0x58   0x6800             LDR      R0,[R0, #+0]
   \       0x5A   0x2800             CMP      R0,#+0
   \       0x5C   0xD105             BNE.N    ??PrintOneKey_4
    224          			{
    225          				key_time = millis();
   \       0x5E   0x.... 0x....      BL       HAL_GetTick
   \       0x62   0x6220             STR      R0,[R4, #+32]
    226          				key_status = 2;
   \       0x64   0x2002             MOVS     R0,#+2
   \       0x66   0x70A0             STRB     R0,[R4, #+2]
   \       0x68   0xBDF1             POP      {R0,R4-R7,PC}
    227          
    228          			}
    229          			else
    230          			{
    231          				key_status = 0;
   \                     ??PrintOneKey_4: (+1)
   \       0x6A   0x2000             MOVS     R0,#+0
   \       0x6C   0x70A0             STRB     R0,[R4, #+2]
   \       0x6E   0xBDF1             POP      {R0,R4-R7,PC}
    232          			}
    233          		}	
    234          	}
    235          	else if(key_status == 2)  
   \                     ??PrintOneKey_3: (+1)
   \       0x70   0x2802             CMP      R0,#+2
   \       0x72   0xF040 0x808F      BNE.W    ??PrintOneKey_5
    236          	{
    237          		if(PRINT_PIN)//READ(PRINT_PIN))
   \       0x76   0x....             LDR.N    R0,??DataTable19_16  ;; 0x4221012c
   \       0x78   0x6800             LDR      R0,[R0, #+0]
   \       0x7A   0x2800             CMP      R0,#+0
   \       0x7C   0xF000 0x808D      BEQ.W    ??PrintOneKey_2
    238          		{
    239          			if(key_time + 1200 > millis()) //short press
   \       0x80   0x.... 0x....      BL       HAL_GetTick
   \       0x84   0x4601             MOV      R1,R0
   \       0x86   0x7820             LDRB     R0,[R4, #+0]
   \       0x88   0x6A22             LDR      R2,[R4, #+32]
   \       0x8A   0xF502 0x6296      ADD      R2,R2,#+1200
   \       0x8E   0x4291             CMP      R1,R2
   \       0x90   0xD250             BCS.N    ??PrintOneKey_6
    240          			{
    241          				if(print_key_flag == 0)  //SD print
   \       0x92   0x2800             CMP      R0,#+0
   \       0x94   0xD128             BNE.N    ??PrintOneKey_7
    242          				{
    243          					if(card.sdprinting == false) 
   \       0x96   0x....             LDR.N    R5,??DataTable19_3
   \       0x98   0x78A8             LDRB     R0,[R5, #+2]
   \       0x9A   0x2800             CMP      R0,#+0
   \       0x9C   0xD17A             BNE.N    ??PrintOneKey_5
    244          					{
    245                                                          print_flag = 1;
   \       0x9E   0x2001             MOVS     R0,#+1
   \       0xA0   0x70E0             STRB     R0,[R4, #+3]
    246          						card.initsd();
   \       0xA2   0x4628             MOV      R0,R5
   \       0xA4   0x.... 0x....      BL       _ZN10CardReader6initsdEv
    247          						if(card.cardOK==false)
   \       0xA8   0x78E8             LDRB     R0,[R5, #+3]
   \       0xAA   0x2800             CMP      R0,#+0
   \       0xAC   0xD104             BNE.N    ??PrintOneKey_8
    248          						{
    249          							BLINK_LED(LED_OFF); 
   \       0xAE   0x2000             MOVS     R0,#+0
   \       0xB0   0x80E0             STRH     R0,[R4, #+6]
    250          							key_status = 0;
   \       0xB2   0x70A0             STRB     R0,[R4, #+2]
    251          							key_time = 0;
   \       0xB4   0x6220             STR      R0,[R4, #+32]
    252          							return;
   \       0xB6   0xBDF1             POP      {R0,R4-R7,PC}
    253          						}
    254          						uint16_t filecnt = card.getnrfilenames();//card.getfilecount(card.path);
   \                     ??PrintOneKey_8: (+1)
   \       0xB8   0x4628             MOV      R0,R5
   \       0xBA   0x.... 0x....      BL       _ZN10CardReader14getnrfilenamesEv
    255          						if(filecnt==0) return;
   \       0xBE   0x0001             MOVS     R1,R0
   \       0xC0   0xD06B             BEQ.N    ??PrintOneKey_2
    256           						card.getfilename(filecnt); //card.getfilename(filecnt,card.path);
   \       0xC2   0x2200             MOVS     R2,#+0
   \       0xC4   0x4628             MOV      R0,R5
   \       0xC6   0x.... 0x....      BL       _ZN10CardReader11getfilenameEtPKc
    257          						card.openFile(card.filename,true);
   \       0xCA   0x2300             MOVS     R3,#+0
   \       0xCC   0x2201             MOVS     R2,#+1
   \       0xCE   0x1DA9             ADDS     R1,R5,#+6
   \       0xD0   0x4628             MOV      R0,R5
   \       0xD2   0x.... 0x....      BL       _ZN10CardReader8openFileEPcbb
    258          						card.startFileprint();
   \       0xD6   0x4628             MOV      R0,R5
   \       0xD8   0x.... 0x....      BL       _ZN10CardReader14startFileprintEv
    259          						
    260          						BLINK_LED(LED_BLINK_2); 
   \       0xDC   0xF44F 0x707A      MOV      R0,#+1000
   \       0xE0   0x80E0             STRH     R0,[R4, #+6]
    261          						print_key_flag = 1;
   \       0xE2   0x2001             MOVS     R0,#+1
   \       0xE4   0x7020             STRB     R0,[R4, #+0]
   \       0xE6   0xE055             B.N      ??PrintOneKey_5
    262          					}
    263          				}
    264          				else if(print_key_flag == 1)  //pause
   \                     ??PrintOneKey_7: (+1)
   \       0xE8   0x2801             CMP      R0,#+1
   \       0xEA   0xD109             BNE.N    ??PrintOneKey_9
    265          				{
    266          			
    267                                                  //MYSERIAL.print("pause");
    268          					BLINK_LED(LED_ON);	
   \       0xEC   0xF44F 0x607A      MOV      R0,#+4000
   \       0xF0   0x80E0             STRH     R0,[R4, #+6]
    269          					//card.pauseSDPrint();
    270                                                  nano_sdcard_pause();
   \       0xF2   0x.... 0x....      BL       _Z17nano_sdcard_pausev
    271          					print_pause = 1;
   \       0xF6   0x2001             MOVS     R0,#+1
   \       0xF8   0x7060             STRB     R0,[R4, #+1]
    272          					print_key_flag = 2;
   \       0xFA   0x2002             MOVS     R0,#+2
   \       0xFC   0x7020             STRB     R0,[R4, #+0]
   \       0xFE   0xE049             B.N      ??PrintOneKey_5
    273          				}
    274          				else if(print_key_flag == 2)  //back
   \                     ??PrintOneKey_9: (+1)
   \      0x100   0x2802             CMP      R0,#+2
   \      0x102   0xD114             BNE.N    ??PrintOneKey_10
    275          				{
    276                                                  //MYSERIAL.print("back");
    277          					if(temperature_protect_last > 60)
   \      0x104   0x68A0             LDR      R0,[R4, #+8]
   \      0x106   0x....             LDR.N    R1,??DataTable19_17  ;; 0x42700001
   \      0x108   0x.... 0x....      BL       __aeabi_cfrcmple
   \      0x10C   0xD805             BHI.N    ??PrintOneKey_11
    278          					{
    279          						thermalManager.target_temperature[0]= temperature_protect_last;
                 						                                    ^
Warning[Pa093]: implicit conversion from floating point to integer

  	static uint8_t pause_flag = 0;
  	               ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Src\nano.cpp",200  Warning[Pe177]: 
          variable "pause_flag" was declared but never referenced
   \      0x10E   0x.... 0x....      BL       __aeabi_f2iz
   \      0x112   0x....             LDR.N    R1,??DataTable19_18
   \      0x114   0x6008             STR      R0,[R1, #+0]
    280          						temperature_protect_last = 0;
   \      0x116   0x2000             MOVS     R0,#+0
   \      0x118   0x60A0             STR      R0,[R4, #+8]
    281          					}
    282          					BLINK_LED(LED_BLINK_0);
   \                     ??PrintOneKey_11: (+1)
   \      0x11A   0xF640 0x10C4      MOVW     R0,#+2500
   \      0x11E   0x80E0             STRH     R0,[R4, #+6]
    283          					//card.startFileprint();
    284                                                  nano_sdcard_resume();
   \      0x120   0x.... 0x....      BL       _Z18nano_sdcard_resumev
    285          					print_pause = 0;
   \      0x124   0x2000             MOVS     R0,#+0
   \      0x126   0x7060             STRB     R0,[R4, #+1]
    286          					print_key_flag = 1;
   \      0x128   0x2001             MOVS     R0,#+1
   \      0x12A   0x7020             STRB     R0,[R4, #+0]
   \      0x12C   0xE032             B.N      ??PrintOneKey_5
    287          				}
    288          				else
    289          				{
    290          					print_key_flag = 0;
   \                     ??PrintOneKey_10: (+1)
   \      0x12E   0x2000             MOVS     R0,#+0
   \      0x130   0x7020             STRB     R0,[R4, #+0]
   \      0x132   0xE02F             B.N      ??PrintOneKey_5
    291          				}		
    292          				
    293          			}
    294          			else 
    295          			{
    296          				if(print_key_flag==0) //long press Z up 10mm
   \                     ??PrintOneKey_6: (+1)
   \      0x134   0x2800             CMP      R0,#+0
   \      0x136   0xD10A             BNE.N    ??PrintOneKey_12
    297          				{
    298          					enqueue_and_echo_commands_P("G91");
   \      0x138   0x....             ADR.N    R0,??DataTable19  ;; "G91"
   \      0x13A   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
    299          					enqueue_and_echo_commands_P("G0 Z+10 F600");
   \      0x13E   0xBF00             Nop      
   \      0x140   0x....             ADR.N    R0,?_2
   \      0x142   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
    300          					enqueue_and_echo_commands_P("G90");
   \      0x146   0x....             ADR.N    R0,??DataTable19_1  ;; "G90"
   \      0x148   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
   \      0x14C   0xE00E             B.N      ??PrintOneKey_13
    301          				}
    302          				else 
    303          				{	if(wait_for_heatup)
   \                     ??PrintOneKey_12: (+1)
   \      0x14E   0x....             LDR.N    R1,??DataTable19_7
   \      0x150   0x7808             LDRB     R0,[R1, #+0]
   \      0x152   0x2800             CMP      R0,#+0
   \      0x154   0xD001             BEQ.N    ??PrintOneKey_14
    304                                                  {
    305                                                      wait_for_heatup=false;
   \      0x156   0x2000             MOVS     R0,#+0
   \      0x158   0x7008             STRB     R0,[R1, #+0]
    306                                                  }
    307          					//cancel_heatup = true; //disable heat					
    308          					card.sdprinting = false;
   \                     ??PrintOneKey_14: (+1)
   \      0x15A   0x....             LDR.N    R0,??DataTable19_3
   \      0x15C   0x2100             MOVS     R1,#+0
   \      0x15E   0x7081             STRB     R1,[R0, #+2]
    309                                                  card.sdprintflag = false;
   \      0x160   0x7141             STRB     R1,[R0, #+5]
    310          					//card.closefile();; // switch off all heaters.
    311                                                  nano_sdcard_stop();
   \      0x162   0x.... 0x....      BL       _Z16nano_sdcard_stopv
    312          					//quickstop_stepper();//quickStop();
    313                                                  print_flag = 0;
   \      0x166   0x2000             MOVS     R0,#+0
   \      0x168   0x70E0             STRB     R0,[R4, #+3]
    314          					BLINK_LED(LED_OFF);
   \      0x16A   0x80E0             STRH     R0,[R4, #+6]
    315          				}
    316          				//while(blocks_queued()); 
    317          				//disable_x();
    318          				//disable_y();
    319                                          stepper.synchronize();
   \                     ??PrintOneKey_13: (+1)
   \      0x16C   0x.... 0x....      BL       _ZN7Stepper11synchronizeEv
    320                                          disable_X();
   \      0x170   0x....             LDR.N    R5,??DataTable19_19
   \      0x172   0x....             LDR.N    R6,??DataTable19_20
   \      0x174   0x2201             MOVS     R2,#+1
   \      0x176   0x8BB1             LDRH     R1,[R6, #+28]
   \      0x178   0x6BA8             LDR      R0,[R5, #+56]
   \      0x17A   0x.... 0x....      BL       HAL_GPIO_WritePin
   \      0x17E   0x....             LDR.N    R7,??DataTable19_21
   \      0x180   0x2000             MOVS     R0,#+0
   \      0x182   0x7038             STRB     R0,[R7, #+0]
    321                                          disable_Y();
   \      0x184   0x2201             MOVS     R2,#+1
   \      0x186   0x8BB1             LDRH     R1,[R6, #+28]
   \      0x188   0x6BA8             LDR      R0,[R5, #+56]
   \      0x18A   0x.... 0x....      BL       HAL_GPIO_WritePin
   \      0x18E   0x2000             MOVS     R0,#+0
   \      0x190   0x7078             STRB     R0,[R7, #+1]
    322          				print_key_flag = 0;	
   \      0x192   0x7020             STRB     R0,[R4, #+0]
    323          			}
    324          			key_status = 0;
    325          			key_time = 0;
    326          		}	
    327          	}
    328          	else
    329          	{
    330          		key_status = 0;
   \                     ??PrintOneKey_5: (+1)
   \      0x194   0x2000             MOVS     R0,#+0
   \      0x196   0x70A0             STRB     R0,[R4, #+2]
    331          		key_time = 0;
   \      0x198   0x6220             STR      R0,[R4, #+32]
    332          	}
    333          }
   \                     ??PrintOneKey_2: (+1)
   \      0x19A   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    334          
    335          
    336          
    337          
    338          

   \                                 In section .text, align 4, keep-with-next
    339          void feed_filament(void)
    340          {
   \                     _Z13feed_filamentv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    341            enqueue_and_echo_commands_P("G91");
   \        0x2   0x....             ADR.N    R0,??DataTable19  ;; "G91"
   \        0x4   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
    342            enqueue_and_echo_commands_P("G0 E+100 F120");
   \        0x8   0x....             ADR.N    R0,?_4
   \        0xA   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
    343            enqueue_and_echo_commands_P("G90");
   \        0xE   0x....             ADR.N    R0,??DataTable19_1  ;; "G90"
   \       0x10   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
    344            enqueue_and_echo_commands_P("M109 S210");
   \       0x14   0x....             ADR.N    R0,?_5
   \       0x16   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
    345            enqueue_and_echo_commands_P("M104 S0");
   \       0x1A   0xBF00             Nop      
   \       0x1C   0x....             ADR.N    R0,?_6
   \       0x1E   0xE8BD 0x4002      POP      {R1,LR}
   \       0x22   0x.... 0x....      B.W      _Z27enqueue_and_echo_commands_PPKc
    346          }
    347          

   \                                 In section .text, align 4, keep-with-next
    348          void retract_filament(void)
    349          {
   \                     _Z16retract_filamentv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    350            enqueue_and_echo_commands_P("G91");
   \        0x2   0x....             ADR.N    R0,??DataTable19  ;; "G91"
   \        0x4   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
    351            enqueue_and_echo_commands_P("G0 E+25  F180");
   \        0x8   0x....             ADR.N    R0,?_7
   \        0xA   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
    352            enqueue_and_echo_commands_P("G0 E-120 F180");
   \        0xE   0xBF00             Nop      
   \       0x10   0x....             ADR.N    R0,?_8
   \       0x12   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
    353            enqueue_and_echo_commands_P("M109 S210");
   \       0x16   0xBF00             Nop      
   \       0x18   0x....             ADR.N    R0,?_5
   \       0x1A   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
    354            enqueue_and_echo_commands_P("M104 S0");
   \       0x1E   0xBF00             Nop      
   \       0x20   0x....             ADR.N    R0,?_6
   \       0x22   0xE8BD 0x4002      POP      {R1,LR}
   \       0x26   0x.... 0x....      B.W      _Z27enqueue_and_echo_commands_PPKc
    355          }
    356          
    357          
    358          

   \                                 In section .text, align 2, keep-with-next
    359          void LoadFilament(void)
    360          {
   \                     _Z12LoadFilamentv: (+1)
   \        0x0   0x....             LDR.N    R0,??DataTable19_3
   \        0x2   0x7940             LDRB     R0,[R0, #+5]
   \        0x4   0x2801             CMP      R0,#+1
   \        0x6   0xD100             BNE.N    ??LoadFilament_0
   \        0x8   0x4770             BX       LR
   \                     ??LoadFilament_0: (+1)
   \        0xA   0xB538             PUSH     {R3-R5,LR}
    361          	static uint32_t filament_time = 0;
    362          	static uint8_t filament_status=0;
    363          	static uint8_t filament_action=0;
                 	               ^
Warning[Pe177]: variable "filament_action" was declared but never referenced
    364          	
    365          	if(card.sdprintflag==true) 
    366          	{
    367          		return;
    368          	} 
    369          	
    370          	if(filament_status == 0) //
   \        0xC   0x....             LDR.N    R4,??DataTable19_13
   \        0xE   0x7920             LDRB     R0,[R4, #+4]
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xD10C             BNE.N    ??LoadFilament_1
    371          	{          
    372          		if(!RETRACT_PIN || !FEED_PIN )//(!READ(RETRACT_PIN))||(!READ(FEED_PIN)))
   \       0x14   0x....             LDR.N    R1,??DataTable19_22  ;; 0x4221810c
   \       0x16   0x6888             LDR      R0,[R1, #+8]
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD002             BEQ.N    ??LoadFilament_2
   \       0x1C   0x6808             LDR      R0,[R1, #+0]
   \       0x1E   0x2800             CMP      R0,#+0
   \       0x20   0xD16F             BNE.N    ??LoadFilament_3
    373          		{
    374          			filament_status++;
   \                     ??LoadFilament_2: (+1)
   \       0x22   0x2001             MOVS     R0,#+1
   \       0x24   0x7120             STRB     R0,[R4, #+4]
    375          			filament_time = millis();
   \       0x26   0x.... 0x....      BL       HAL_GetTick
   \       0x2A   0x6260             STR      R0,[R4, #+36]
   \       0x2C   0xBD31             POP      {R0,R4,R5,PC}
    376          		}
    377          	}
    378          	else if(filament_status == 1) 
   \                     ??LoadFilament_1: (+1)
   \       0x2E   0x2801             CMP      R0,#+1
   \       0x30   0xD119             BNE.N    ??LoadFilament_4
    379          	{
    380          		if(filament_time+20<millis())
   \       0x32   0x.... 0x....      BL       HAL_GetTick
   \       0x36   0x6A61             LDR      R1,[R4, #+36]
   \       0x38   0x3114             ADDS     R1,R1,#+20
   \       0x3A   0x4281             CMP      R1,R0
   \       0x3C   0xD261             BCS.N    ??LoadFilament_3
    381          		{
    382          			if(!RETRACT_PIN || !FEED_PIN)//((!READ(RETRACT_PIN))||(!READ(FEED_PIN)))
   \       0x3E   0x....             LDR.N    R1,??DataTable19_22  ;; 0x4221810c
   \       0x40   0x6888             LDR      R0,[R1, #+8]
   \       0x42   0x2800             CMP      R0,#+0
   \       0x44   0xD002             BEQ.N    ??LoadFilament_5
   \       0x46   0x6808             LDR      R0,[R1, #+0]
   \       0x48   0x2800             CMP      R0,#+0
   \       0x4A   0xD158             BNE.N    ??LoadFilament_6
    383          			{
    384          				//thermalManager.setTargetHotend0(195); 
    385                                          thermalManager.setTargetHotend(210, 0);
   \                     ??LoadFilament_5: (+1)
   \       0x4C   0x2100             MOVS     R1,#+0
   \       0x4E   0x....             LDR.N    R0,??DataTable19_23  ;; 0x43520000
   \       0x50   0x.... 0x....      BL       _ZN11Temperature15setTargetHotendEfh
    386          				BLINK_LED(LED_BLINK_7);
   \       0x54   0x2032             MOVS     R0,#+50
   \       0x56   0x80E0             STRH     R0,[R4, #+6]
    387          				protect_time = millis();
   \       0x58   0x.... 0x....      BL       HAL_GetTick
   \       0x5C   0x60E0             STR      R0,[R4, #+12]
    388          				filament_status++;
   \       0x5E   0x7920             LDRB     R0,[R4, #+4]
   \       0x60   0x1C40             ADDS     R0,R0,#+1
   \       0x62   0x7120             STRB     R0,[R4, #+4]
   \       0x64   0xBD31             POP      {R0,R4,R5,PC}
    389          			}
    390          			else
    391          			{
    392          				filament_status = 0;
    393          			}
    394          		}	
    395          	}
    396          	else if(filament_status == 2) 
   \                     ??LoadFilament_4: (+1)
   \       0x66   0x2802             CMP      R0,#+2
   \       0x68   0xD11A             BNE.N    ??LoadFilament_7
    397          	{
    398          		if(thermalManager.current_temperature[0] > 180)
   \       0x6A   0x....             LDR.N    R0,??DataTable19_24
   \       0x6C   0x6800             LDR      R0,[R0, #+0]
   \       0x6E   0x....             LDR.N    R1,??DataTable19_25  ;; 0x43340001
   \       0x70   0x.... 0x....      BL       __aeabi_cfrcmple
   \       0x74   0xD804             BHI.N    ??LoadFilament_8
    399          		{
    400          			filament_status++;		
   \       0x76   0x2003             MOVS     R0,#+3
   \       0x78   0x7120             STRB     R0,[R4, #+4]
    401          			BLINK_LED(LED_BLINK_5);
   \       0x7A   0xF44F 0x7096      MOV      R0,#+300
   \       0x7E   0x80E0             STRH     R0,[R4, #+6]
    402          		}	
    403          		if(RETRACT_PIN && FEED_PIN)//(READ(RETRACT_PIN))&&(READ(FEED_PIN)))
   \                     ??LoadFilament_8: (+1)
   \       0x80   0x....             LDR.N    R1,??DataTable19_22  ;; 0x4221810c
   \       0x82   0x6888             LDR      R0,[R1, #+8]
   \       0x84   0x2800             CMP      R0,#+0
   \       0x86   0xD03C             BEQ.N    ??LoadFilament_3
   \       0x88   0x6808             LDR      R0,[R1, #+0]
   \       0x8A   0x2800             CMP      R0,#+0
   \       0x8C   0xD039             BEQ.N    ??LoadFilament_3
    404          		{
    405          //			cleaning_buffer_counter=2;
    406          			BLINK_LED(LED_ON);
   \       0x8E   0xF44F 0x607A      MOV      R0,#+4000
   \       0x92   0x80E0             STRH     R0,[R4, #+6]
    407          			filament_status = 0;
   \       0x94   0x2000             MOVS     R0,#+0
   \       0x96   0x7120             STRB     R0,[R4, #+4]
    408                                  thermalManager.disable_all_heaters();
   \       0x98   0xE8BD 0x4031      POP      {R0,R4,R5,LR}
   \       0x9C   0x.... 0x....      B.W      _ZN11Temperature19disable_all_heatersEv
    409          		}
    410          	}
    411          	else if(filament_status == 3) 
   \                     ??LoadFilament_7: (+1)
   \       0xA0   0x2803             CMP      R0,#+3
   \       0xA2   0xD12C             BNE.N    ??LoadFilament_6
    412          	{
    413          		static uint8_t flag = 0;
    414          		if(!RETRACT_PIN)//!READ(RETRACT_PIN)) 
   \       0xA4   0x....             LDR.N    R5,??DataTable19_22  ;; 0x4221810c
   \       0xA6   0x68A8             LDR      R0,[R5, #+8]
   \       0xA8   0x2800             CMP      R0,#+0
   \       0xAA   0xD109             BNE.N    ??LoadFilament_9
    415          		{
    416          			if(flag ==0)
   \       0xAC   0x7960             LDRB     R0,[R4, #+5]
   \       0xAE   0x2800             CMP      R0,#+0
   \       0xB0   0xD106             BNE.N    ??LoadFilament_9
    417          			{
    418          				retract_filament();
   \       0xB2   0x.... 0x....      BL       _Z16retract_filamentv
    419          				BLINK_LED(LED_BLINK_5);
   \       0xB6   0xF44F 0x7096      MOV      R0,#+300
   \       0xBA   0x80E0             STRH     R0,[R4, #+6]
    420          				flag = 1;
   \       0xBC   0x2001             MOVS     R0,#+1
   \       0xBE   0x7160             STRB     R0,[R4, #+5]
    421          			}
    422          		}
    423          		if(!FEED_PIN)//!READ(FEED_PIN))  
   \                     ??LoadFilament_9: (+1)
   \       0xC0   0x6828             LDR      R0,[R5, #+0]
   \       0xC2   0x2800             CMP      R0,#+0
   \       0xC4   0xD109             BNE.N    ??LoadFilament_10
    424          		{
    425          			if(flag ==0)
   \       0xC6   0x7960             LDRB     R0,[R4, #+5]
   \       0xC8   0x2800             CMP      R0,#+0
   \       0xCA   0xD106             BNE.N    ??LoadFilament_10
    426          			{
    427          				feed_filament();
   \       0xCC   0x.... 0x....      BL       _Z13feed_filamentv
    428          				BLINK_LED(LED_BLINK_5);
   \       0xD0   0xF44F 0x7096      MOV      R0,#+300
   \       0xD4   0x80E0             STRH     R0,[R4, #+6]
    429          				flag = 1;
   \       0xD6   0x2001             MOVS     R0,#+1
   \       0xD8   0x7160             STRB     R0,[R4, #+5]
    430          			}
    431          		}
    432          		if(RETRACT_PIN && FEED_PIN)//((READ(RETRACT_PIN))&&(READ(FEED_PIN))) 
   \                     ??LoadFilament_10: (+1)
   \       0xDA   0x68A8             LDR      R0,[R5, #+8]
   \       0xDC   0x2800             CMP      R0,#+0
   \       0xDE   0xD010             BEQ.N    ??LoadFilament_3
   \       0xE0   0x6828             LDR      R0,[R5, #+0]
   \       0xE2   0x2800             CMP      R0,#+0
   \       0xE4   0xD00D             BEQ.N    ??LoadFilament_3
    433          		{
    434          			flag = 0;
   \       0xE6   0x2000             MOVS     R0,#+0
   \       0xE8   0x7160             STRB     R0,[R4, #+5]
    435          			filament_status = 0;
   \       0xEA   0x7120             STRB     R0,[R4, #+4]
    436                                  quickstop_stepper();
   \       0xEC   0x.... 0x....      BL       _Z17quickstop_stepperv
    437          //			cleaning_buffer_counter=2;
    438          			BLINK_LED(LED_ON);
   \       0xF0   0xF44F 0x607A      MOV      R0,#+4000
   \       0xF4   0x80E0             STRH     R0,[R4, #+6]
    439                                  thermalManager.disable_all_heaters();
   \       0xF6   0xE8BD 0x4031      POP      {R0,R4,R5,LR}
   \       0xFA   0x.... 0x....      B.W      _ZN11Temperature19disable_all_heatersEv
    440          		}
    441          	}
    442          	else
    443          	{
    444          		filament_status = 0;
   \                     ??LoadFilament_6: (+1)
   \       0xFE   0x2000             MOVS     R0,#+0
   \      0x100   0x7120             STRB     R0,[R4, #+4]
    445          	}	
    446          }
   \                     ??LoadFilament_3: (+1)
   \      0x102   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .bss, align 4
   \                     print_key_flag:
   \        0x0                      DS8 1
   \                     print_pause:
   \        0x1                      DS8 1
   \        0x2                      DS8 1
   \        0x3                      DS8 1
   \        0x4                      DS8 1
   \        0x5                      DS8 1
   \                     blink_time:
   \        0x6                      DS8 2
   \                     temperature_protect_last:
   \        0x8                      DS8 4
   \                     protect_time:
   \        0xC                      DS8 4
   \       0x10                      DS8 4
   \       0x14                      DS8 4
   \       0x18                      DS8 4
   \       0x1C                      DS8 4
   \       0x20                      DS8 4
   \       0x24                      DS8 4

   \                                 In section .bss, align 4
   \                     z_height_stop:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     sys_time:
   \        0x0                      DS8 4

   \                                 In section .bss, align 1
   \                     print_cancel_raise:
   \        0x0                      DS8 1

   \                                 In section .bss, align 1
   \                     cancel_heatup:
   \        0x0                      DS8 1
    447          
    448          

   \                                 In section .text, align 2, keep-with-next
    449          void heat_protect(void)
    450          {
   \                     _Z12heat_protectv: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    451          	if(thermalManager.current_temperature[0] < 60) 
   \        0x2   0x....             LDR.N    R0,??DataTable19_24
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x....             LDR.N    R1,??DataTable19_26  ;; 0x42700000
   \        0x8   0x.... 0x....      BL       __aeabi_cfcmple
   \        0xC   0xD320             BCC.N    ??heat_protect_0
    452          	{
    453          		
    454          		return;	
    455          	}
    456          	if((card.sdprintflag==false)) 
   \        0xE   0x....             LDR.N    R4,??DataTable19_13
   \       0x10   0x....             LDR.N    R0,??DataTable19_3
   \       0x12   0x7940             LDRB     R0,[R0, #+5]
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD113             BNE.N    ??heat_protect_1
    457          	{
    458          		if(protect_time+60001 < millis())
   \       0x18   0x.... 0x....      BL       HAL_GetTick
   \       0x1C   0x68E1             LDR      R1,[R4, #+12]
   \       0x1E   0xF501 0x416A      ADD      R1,R1,#+59904
   \       0x22   0x3161             ADDS     R1,R1,#+97
   \       0x24   0x4281             CMP      R1,R0
   \       0x26   0xD213             BCS.N    ??heat_protect_0
    459          		{
    460          			protect_time = millis();
   \       0x28   0x.... 0x....      BL       HAL_GetTick
   \       0x2C   0x60E0             STR      R0,[R4, #+12]
    461          			temperature_protect_last = thermalManager.target_temperature[0]; 
   \       0x2E   0x....             LDR.N    R0,??DataTable19_18
   \       0x30   0x6800             LDR      R0,[R0, #+0]
   \       0x32   0x.... 0x....      BL       __aeabi_i2f
   \       0x36   0x60A0             STR      R0,[R4, #+8]
    462                                  thermalManager.disable_all_heaters();
   \       0x38   0xE8BD 0x4010      POP      {R4,LR}
   \       0x3C   0x.... 0x....      B.W      _ZN11Temperature19disable_all_heatersEv
    463          //			disable_all_heaters();
    464          //			MYSERIAL.print("extruder heating off!");
    465          		}	
    466          	}
    467          	else
    468          	{
    469          		if(protect_time != millis())
   \                     ??heat_protect_1: (+1)
   \       0x40   0x.... 0x....      BL       HAL_GetTick
   \       0x44   0x68E1             LDR      R1,[R4, #+12]
   \       0x46   0x4281             CMP      R1,R0
   \       0x48   0xD002             BEQ.N    ??heat_protect_0
    470          		{
    471          			protect_time = millis();		
   \       0x4A   0x.... 0x....      BL       HAL_GetTick
   \       0x4E   0x60E0             STR      R0,[R4, #+12]
    472          		}
    473          	}		
    474          }
   \                     ??heat_protect_0: (+1)
   \       0x50   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19:
   \        0x0   0x47 0x39          DC8      "G91"
   \              0x31 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_1:
   \        0x0   0x47 0x39          DC8      "G90"
   \              0x30 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_2:
   \        0x0   0x....'....        DC32     mksReprint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_3:
   \        0x0   0x....'....        DC32     card

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_4:
   \        0x0   0x....'....        DC32     print_job_timer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_5:
   \        0x0   0x....'....        DC32     fanSpeeds

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_6:
   \        0x0   0x4001'2C34        DC32     0x40012c34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_7:
   \        0x0   0x....'....        DC32     wait_for_heatup

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_8:
   \        0x0   0x4002'1018        DC32     0x40021018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_9:
   \        0x0   0x4001'0800        DC32     0x40010800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_10:
   \        0x0   0x4001'0C00        DC32     0x40010c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_11:
   \        0x0   0x4001'1000        DC32     0x40011000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_12:
   \        0x0   0x4001'1400        DC32     0x40011400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_13:
   \        0x0   0x....'....        DC32     print_key_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_14:
   \        0x0   0x4222'010C        DC32     0x4222010c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_15:
   \        0x0   0x4222'8188        DC32     0x42228188

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_16:
   \        0x0   0x4221'012C        DC32     0x4221012c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_17:
   \        0x0   0x4270'0001        DC32     0x42700001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_18:
   \        0x0   0x....'....        DC32     _ZN11Temperature18target_temperatureE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_19:
   \        0x0   0x....'....        DC32     gArrayGpioPort

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_20:
   \        0x0   0x....'....        DC32     gArrayGpioPin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_21:
   \        0x0   0x....'....        DC32     axis_known_position

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_22:
   \        0x0   0x4221'810C        DC32     0x4221810c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_23:
   \        0x0   0x4352'0000        DC32     0x43520000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_24:
   \        0x0   0x....'....        DC32     _ZN11Temperature19current_temperatureE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_25:
   \        0x0   0x4334'0001        DC32     0x43340001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_26:
   \        0x0   0x4270'0000        DC32     0x42700000

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \        0x0   0x47 0x32          DC8 "G28 X0 Y0 Z0"
   \              0x38 0x20    
   \              0x58 0x30    
   \              0x20 0x59    
   \              0x30 0x20    
   \              0x5A 0x30    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \        0x0   0x47 0x30          DC8 "G0 Z+10 F600"
   \              0x20 0x5A    
   \              0x2B 0x31    
   \              0x30 0x20    
   \              0x46 0x36    
   \              0x30 0x30    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \        0x0   0x47 0x30          DC8 "G0 E+100 F120"
   \              0x20 0x45    
   \              0x2B 0x31    
   \              0x30 0x30    
   \              0x20 0x46    
   \              0x31 0x32    
   \              0x30 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_1:
   \        0x0   0x47 0x39          DC8 "G91"
   \              0x31 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_3:
   \        0x0   0x47 0x39          DC8 "G90"
   \              0x30 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \        0x0   0x4D 0x31          DC8 "M109 S210"
   \              0x30 0x39    
   \              0x20 0x53    
   \              0x32 0x31    
   \              0x30 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \        0x0   0x4D 0x31          DC8 "M104 S0"
   \              0x30 0x34    
   \              0x20 0x53    
   \              0x30 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \        0x0   0x47 0x30          DC8 "G0 E+25  F180"
   \              0x20 0x45    
   \              0x2B 0x32    
   \              0x35 0x20    
   \              0x20 0x46    
   \              0x31 0x38    
   \              0x30 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \        0x0   0x47 0x30          DC8 "G0 E-120 F180"
   \              0x20 0x45    
   \              0x2D 0x31    
   \              0x32 0x30    
   \              0x20 0x46    
   \              0x31 0x38    
   \              0x30 0x00    
   \        0xE   0x00 0x00          DC8 0, 0
    475          
    476          
    477          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   BlinkLed()
         8   -> HAL_GetTick
       0   CardReader::pauseSDPrint()
       0   GoHomeCheck()
         0   -> enqueue_and_echo_commands_P(char const *)
      16   LoadFilament()
        16   -> HAL_GetTick
         0   -> Temperature::disable_all_heaters()
        16   -> Temperature::setTargetHotend(float, uint8_t)
        16   -> feed_filament()
        16   -> quickstop_stepper()
        16   -> retract_filament()
        16 __aeabi_cfrcmple
      40   NanoInit()
        40   -> HAL_GPIO_Init
        40   -> HAL_GPIO_WritePin
      24   PrintOneKey()
        24   -> CardReader::getfilename(uint16_t, char const *)
        24   -> CardReader::getnrfilenames()
        24   -> CardReader::initsd()
        24   -> CardReader::openFile(char *, bool, bool)
        24   -> CardReader::startFileprint()
        24   -> HAL_GPIO_WritePin
        24   -> HAL_GetTick
        24   -> Stepper::synchronize()
        24   -> __aeabi_f2iz
        24   -> enqueue_and_echo_commands_P(char const *)
        24   -> nano_sdcard_pause()
        24   -> nano_sdcard_resume()
        24   -> nano_sdcard_stop()
        24 __aeabi_cfrcmple
       8   Temperature::setTargetHotend(float, uint8_t)
         0   -> Temperature::start_watching_heater(uint8_t)
         8   -> __aeabi_f2iz
       8   feed_filament()
         0   -> enqueue_and_echo_commands_P(char const *)
         8   -> enqueue_and_echo_commands_P(char const *)
       8   heat_protect()
         8   -> HAL_GetTick
         0   -> Temperature::disable_all_heaters()
         8   -> __aeabi_i2f
         8 __aeabi_cfcmple
       8   nano_sdcard_pause()
         8   -> CardReader::pauseSDPrint()
         8   -> Stopwatch::pause()
       8   nano_sdcard_resume()
         8   -> CardReader::startFileprint()
         0   -> Stopwatch::start()
         8   -> mks_resumePrint
       8   nano_sdcard_stop()
         8   -> CardReader::stopSDPrint()
         8   -> Stopwatch::stop()
         8   -> Temperature::disable_all_heaters()
         8   -> clear_command_queue()
         8   -> epr_write_data
         8   -> quickstop_stepper()
       8   retract_filament()
         0   -> enqueue_and_echo_commands_P(char const *)
         8   -> enqueue_and_echo_commands_P(char const *)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable19
       4  ??DataTable19_1
       4  ??DataTable19_10
       4  ??DataTable19_11
       4  ??DataTable19_12
       4  ??DataTable19_13
       4  ??DataTable19_14
       4  ??DataTable19_15
       4  ??DataTable19_16
       4  ??DataTable19_17
       4  ??DataTable19_18
       4  ??DataTable19_19
       4  ??DataTable19_2
       4  ??DataTable19_20
       4  ??DataTable19_21
       4  ??DataTable19_22
       4  ??DataTable19_23
       4  ??DataTable19_24
       4  ??DataTable19_25
       4  ??DataTable19_26
       4  ??DataTable19_3
       4  ??DataTable19_4
       4  ??DataTable19_5
       4  ??DataTable19_6
       4  ??DataTable19_7
       4  ??DataTable19_8
       4  ??DataTable19_9
      16  ?_0
       4  ?_1
      16  ?_2
       4  ?_3
      16  ?_4
      12  ?_5
       8  ?_6
      16  ?_7
      16  ?_8
     114  BlinkLed()
       6  CardReader::pauseSDPrint()
      70  GoHomeCheck()
     260  LoadFilament()
     250  NanoInit()
     412  PrintOneKey()
      24  Temperature::setTargetHotend(float, uint8_t)
       1  cancel_heatup
      38  feed_filament()
      82  heat_protect()
      38  nano_sdcard_pause()
      44  nano_sdcard_resume()
      98  nano_sdcard_stop()
       1  print_cancel_raise
      40  print_key_flag
          print_pause
          key_status
          print_flag
          filament_status
          flag
          blink_time
          temperature_protect_last
          protect_time
          pin_time
          once
          blink_time_previous
          blink_time_start
          key_time
          filament_time
      42  retract_filament()
       4  sys_time
       4  z_height_stop

 
    50 bytes in section .bss
     8 bytes in section .rodata
 1 686 bytes in section .text
 
 1 656 bytes of CODE  memory (+ 30 bytes shared)
     8 bytes of CONST memory
    50 bytes of DATA  memory

Errors: none
Warnings: 15
