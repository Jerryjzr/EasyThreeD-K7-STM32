###############################################################################
#
# IAR ANSI C/C++ Compiler V8.30.1.114/W32 for ARM         07/Apr/2021  11:05:10
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\serial.cpp
#    Command line =  
#        -f C:\Users\PLT\AppData\Local\Temp\EW9A33.tmp
#        (C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\serial.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D MKS_ROBIN -D MARLIN -D __arm__ -D
#        USE_MKS_WIFI --preprocess=s
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List -lC
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List -lA
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List
#        --diag_suppress Pa050 -o
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\Obj
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.1\arm\inc\c\DLib_Config_Full.h" -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Inc\ -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Src\ -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/Inc\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/CMSIS/Include\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/STM32MKS-3dPrinter\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/Common\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/l6474\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/MotorControl\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/u8glib_arm_v1.17/src\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/arduino\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/arduino/avr\
#        -I C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Inc/Logo\ -Om --c++
#        --no_exceptions --no_rtti -I "D:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.1\arm\CMSIS\Core\Include\" -I "D:\Program
#        Files (x86)\IAR Systems\Embedded Workbench
#        8.1\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List\serial.lst
#    Object file  =  
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\Obj\serial.o
#
###############################################################################

C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\serial.cpp
      1          /**
      2           * Marlin 3D Printer Firmware
      3           * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
      4           *
      5           * Based on Sprinter and grbl.
      6           * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
      7           *
      8           * This program is free software: you can redistribute it and/or modify
      9           * it under the terms of the GNU General Public License as published by
     10           * the Free Software Foundation, either version 3 of the License, or
     11           * (at your option) any later version.
     12           *
     13           * This program is distributed in the hope that it will be useful,
     14           * but WITHOUT ANY WARRANTY; without even the implied warranty of
     15           * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     16           * GNU General Public License for more details.
     17           *
     18           * You should have received a copy of the GNU General Public License
     19           * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     20           *
     21           */
     22          
     23          #include "serial.h"

    #define SDSS   18
            ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\pins_MKS_ROBIN_LITE.h",161  Warning[Pa181]: 
          incompatible redefinition of macro "SDSS" (declared at line 62)

  #define UNUSED(x) ((void)(x))
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pa181]: 
          incompatible redefinition of macro "UNUSED" (declared at line 88 of
          "C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marl
          in\macros.h")

  #define PRINT_LED_PIN         PDout(2)
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Drivers\BSP\STM32MKS-3dPrinter\mks_fastio.h",14  Warning[Pa181]: 
          incompatible redefinition of macro "PRINT_LED_PIN" (declared at line
          146 of "C:\Users\PLT\Desktop\mksRobinLite_nano\Inc\main.h")

   \                                 In section .text, align 2
   \   __interwork __softfp void MarlinSerial::write(uint8_t)
   \                     _ZN12MarlinSerial5writeEh: (+1)
   \        0x0   0xB502             PUSH     {R1,LR}
   \        0x2   0x2201             MOVS     R2,#+1
   \        0x4   0x4669             MOV      R1,SP
   \        0x6   0x.... 0x....      BL       BSP_UartIfQueueTxData
   \        0xA   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void MarlinSerial::write(char const *)
   \                     _ZN12MarlinSerial5writeEPKc: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
   \        0x6   0x4628             MOV      R0,R5
   \        0x8   0x.... 0x....      BL       strlen
   \        0xC   0x4602             MOV      R2,R0
   \        0xE   0xB2D2             UXTB     R2,R2
   \       0x10   0x4629             MOV      R1,R5
   \       0x12   0x4620             MOV      R0,R4
   \       0x14   0xE8BD 0x4038      POP      {R3-R5,LR}
   \       0x18   0x.... 0x....      B.W      BSP_UartIfQueueTxData

   \                                 In section .text, align 4
   \   __interwork __softfp void MarlinSerial::print(char const *)
   \                     _ZN12MarlinSerial5printEPKc: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
   \        0x6   0x4628             MOV      R0,R5
   \        0x8   0x.... 0x....      BL       strlen
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD013             BEQ.N    ??print_1
   \       0x10   0x480A             LDR.N    R0,??print_0
   \       0x12   0x7800             LDRB     R0,[R0, #+0]
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD105             BNE.N    ??print_2
   \       0x18   0x4629             MOV      R1,R5
   \       0x1A   0x4620             MOV      R0,R4
   \       0x1C   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \       0x20   0x.... 0x....      B.W      _ZN12MarlinSerial5writeEPKc
   \                     ??print_2: (+1)
   \       0x24   0x4628             MOV      R0,R5
   \       0x26   0x.... 0x....      BL       strlen
   \       0x2A   0x4602             MOV      R2,R0
   \       0x2C   0x4629             MOV      R1,R5
   \       0x2E   0x2002             MOVS     R0,#+2
   \       0x30   0xE8BD 0x4038      POP      {R3-R5,LR}
   \       0x34   0x.... 0x....      B.W      package_to_wifi
   \                     ??print_1: (+1)
   \       0x38   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   \       0x3A   0xBF00             Nop      
   \                     ??print_0:
   \       0x3C   0x....'....        DC32     from_wifi_flag

   \                                 In section .text, align 4
   \   __interwork __softfp void serialprintPGM(char const *)
   \                     _Z14serialprintPGMPKc: (+1)
   \        0x0   0x4601             MOV      R1,R0
   \        0x2   0x4805             LDR.N    R0,??serialprintPGM_0
   \        0x4   0x7800             LDRB     R0,[R0, #+0]
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD102             BNE.N    ??serialprintPGM_1
   \        0xA   0x4804             LDR.N    R0,??serialprintPGM_0+0x4
   \        0xC   0x.... 0x....      B.W      _ZN12MarlinSerial5writeEPKc
   \                     ??serialprintPGM_1: (+1)
   \       0x10   0x4803             LDR.N    R0,??serialprintPGM_0+0x8
   \       0x12   0x.... 0x....      B.W      _ZN12MarlinSerial5printEPKc
   \       0x16   0xBF00             Nop      
   \                     ??serialprintPGM_0:
   \       0x18   0x....'....        DC32     from_wifi_flag
   \       0x1C   0x....'....        DC32     customizedSerial
   \       0x20   0x....'....        DC32     serial2
     24          

   \                                 In section .rodata, align 4, keep-with-next
     25          const char errormagic[] PROGMEM = "Error:";
   \                     errormagic:
   \        0x0   0x45 0x72          DC8 "Error:"
   \              0x72 0x6F    
   \              0x72 0x3A    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
     26          const char echomagic[] PROGMEM = "echo:";
   \                     echomagic:
   \        0x0   0x65 0x63          DC8 "echo:"
   \              0x68 0x6F    
   \              0x3A 0x00    
   \        0x6   0x00 0x00          DC8 0, 0
     27          

   \                                 In section .text, align 2, keep-with-next
     28          void serial_echopair_P(const char* s_P, const char *v)   { serialprintPGM(s_P); SERIAL_ECHO(v); }
   \                     _Z17serial_echopair_PPKcS0_: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \        0x8   0x....             LDR.N    R0,??DataTable9
   \        0xA   0x7800             LDRB     R0,[R0, #+0]
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0x4621             MOV      R1,R4
   \       0x10   0xD104             BNE.N    ??serial_echopair_P_0
   \       0x12   0x....             LDR.N    R0,??DataTable9_1
   \       0x14   0xE8BD 0x4010      POP      {R4,LR}
   \       0x18   0x.... 0x....      B.W      _ZN12MarlinSerial5printEPKc
   \                     ??serial_echopair_P_0: (+1)
   \       0x1C   0x....             LDR.N    R0,??DataTable9_2
   \       0x1E   0xE8BD 0x4010      POP      {R4,LR}
   \       0x22   0x.... 0x....      B.W      _ZN12MarlinSerial5printEPKc

   \                                 In section .text, align 2, keep-with-next
     29          void serial_echopair_P(const char* s_P, char v)          { serialprintPGM(s_P); SERIAL_CHAR(v); }
   \                     _Z17serial_echopair_PPKcc: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \        0x8   0x....             LDR.N    R0,??DataTable9
   \        0xA   0x7800             LDRB     R0,[R0, #+0]
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD106             BNE.N    ??serial_echopair_P_1
   \       0x10   0x4621             MOV      R1,R4
   \       0x12   0xB2C9             UXTB     R1,R1
   \       0x14   0x....             LDR.N    R0,??DataTable9_1
   \       0x16   0xE8BD 0x4010      POP      {R4,LR}
   \       0x1A   0x.... 0x....      B.W      _ZN12MarlinSerial5writeEh
   \                     ??serial_echopair_P_1: (+1)
   \       0x1E   0x2200             MOVS     R2,#+0
   \       0x20   0x4621             MOV      R1,R4
   \       0x22   0x....             LDR.N    R0,??DataTable9_2
   \       0x24   0xE8BD 0x4010      POP      {R4,LR}
   \       0x28   0x.... 0x....      B.W      _ZN12MarlinSerial5printEci

   \                                 In section .text, align 2, keep-with-next
     30          void serial_echopair_P(const char* s_P, int v)           { serialprintPGM(s_P); SERIAL_ECHO(v); }
   \                     _Z17serial_echopair_PPKci: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \        0x8   0x....             LDR.N    R0,??DataTable9
   \        0xA   0x7800             LDRB     R0,[R0, #+0]
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD106             BNE.N    ??serial_echopair_P_2
   \       0x10   0x220A             MOVS     R2,#+10
   \       0x12   0x4621             MOV      R1,R4
   \       0x14   0x....             LDR.N    R0,??DataTable9_1
   \       0x16   0xE8BD 0x4010      POP      {R4,LR}
   \       0x1A   0x.... 0x....      B.W      _ZN12MarlinSerial5printEii
   \                     ??serial_echopair_P_2: (+1)
   \       0x1E   0x220A             MOVS     R2,#+10
   \       0x20   0x4621             MOV      R1,R4
   \       0x22   0x....             LDR.N    R0,??DataTable9_2
   \       0x24   0xE8BD 0x4010      POP      {R4,LR}
   \       0x28   0x.... 0x....      B.W      _ZN12MarlinSerial5printEii

   \                                 In section .text, align 2, keep-with-next
     31          void serial_echopair_P(const char* s_P, long v)          { serialprintPGM(s_P); SERIAL_ECHO(v); }
   \                     _Z17serial_echopair_PPKcl: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \        0x8   0x....             LDR.N    R0,??DataTable9
   \        0xA   0x7800             LDRB     R0,[R0, #+0]
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD106             BNE.N    ??serial_echopair_P_3
   \       0x10   0x220A             MOVS     R2,#+10
   \       0x12   0x4621             MOV      R1,R4
   \       0x14   0x....             LDR.N    R0,??DataTable9_1
   \       0x16   0xE8BD 0x4010      POP      {R4,LR}
   \       0x1A   0x.... 0x....      B.W      _ZN12MarlinSerial5printEli
   \                     ??serial_echopair_P_3: (+1)
   \       0x1E   0x220A             MOVS     R2,#+10
   \       0x20   0x4621             MOV      R1,R4
   \       0x22   0x....             LDR.N    R0,??DataTable9_2
   \       0x24   0xE8BD 0x4010      POP      {R4,LR}
   \       0x28   0x.... 0x....      B.W      _ZN12MarlinSerial5printEli

   \                                 In section .text, align 2, keep-with-next
     32          void serial_echopair_P(const char* s_P, float v)         { serialprintPGM(s_P); SERIAL_ECHO(v); }
   \                     _Z17serial_echopair_PPKcf: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \        0x8   0x4620             MOV      R0,R4
   \        0xA   0x.... 0x....      BL       __aeabi_f2d
   \        0xE   0x....             LDR.N    R2,??DataTable9
   \       0x10   0x7812             LDRB     R2,[R2, #+0]
   \       0x12   0x2A00             CMP      R2,#+0
   \       0x14   0xD107             BNE.N    ??serial_echopair_P_4
   \       0x16   0x2202             MOVS     R2,#+2
   \       0x18   0x9200             STR      R2,[SP, #+0]
   \       0x1A   0x4602             MOV      R2,R0
   \       0x1C   0x460B             MOV      R3,R1
   \       0x1E   0x....             LDR.N    R0,??DataTable9_1
   \       0x20   0x.... 0x....      BL       _ZN12MarlinSerial5printEdi
   \       0x24   0xBD13             POP      {R0,R1,R4,PC}
   \                     ??serial_echopair_P_4: (+1)
   \       0x26   0x2202             MOVS     R2,#+2
   \       0x28   0x9200             STR      R2,[SP, #+0]
   \       0x2A   0x4602             MOV      R2,R0
   \       0x2C   0x460B             MOV      R3,R1
   \       0x2E   0x....             LDR.N    R0,??DataTable9_2
   \       0x30   0x.... 0x....      BL       _ZN12MarlinSerial5printEdi
   \       0x34   0xBD13             POP      {R0,R1,R4,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
     33          void serial_echopair_P(const char* s_P, double v)        { serialprintPGM(s_P); SERIAL_ECHO(v); }
   \                     _Z17serial_echopair_PPKcd: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4614             MOV      R4,R2
   \        0x4   0x461D             MOV      R5,R3
   \        0x6   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \        0xA   0x....             LDR.N    R0,??DataTable9
   \        0xC   0x7800             LDRB     R0,[R0, #+0]
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD107             BNE.N    ??serial_echopair_P_5
   \       0x12   0x2002             MOVS     R0,#+2
   \       0x14   0x9000             STR      R0,[SP, #+0]
   \       0x16   0x4622             MOV      R2,R4
   \       0x18   0x462B             MOV      R3,R5
   \       0x1A   0x....             LDR.N    R0,??DataTable9_1
   \       0x1C   0x.... 0x....      BL       _ZN12MarlinSerial5printEdi
   \       0x20   0xBD31             POP      {R0,R4,R5,PC}
   \                     ??serial_echopair_P_5: (+1)
   \       0x22   0x2002             MOVS     R0,#+2
   \       0x24   0x9000             STR      R0,[SP, #+0]
   \       0x26   0x4622             MOV      R2,R4
   \       0x28   0x462B             MOV      R3,R5
   \       0x2A   0x....             LDR.N    R0,??DataTable9_2
   \       0x2C   0x.... 0x....      BL       _ZN12MarlinSerial5printEdi
   \       0x30   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
     34          void serial_echopair_P(const char* s_P, unsigned long v) { serialprintPGM(s_P); SERIAL_ECHO(v); }
   \                     _Z17serial_echopair_PPKcm: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \        0x8   0x....             LDR.N    R0,??DataTable9
   \        0xA   0x7800             LDRB     R0,[R0, #+0]
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD106             BNE.N    ??serial_echopair_P_6
   \       0x10   0x220A             MOVS     R2,#+10
   \       0x12   0x4621             MOV      R1,R4
   \       0x14   0x....             LDR.N    R0,??DataTable9_1
   \       0x16   0xE8BD 0x4010      POP      {R4,LR}
   \       0x1A   0x.... 0x....      B.W      _ZN12MarlinSerial5printEmi
   \                     ??serial_echopair_P_6: (+1)
   \       0x1E   0x220A             MOVS     R2,#+10
   \       0x20   0x4621             MOV      R1,R4
   \       0x22   0x....             LDR.N    R0,??DataTable9_2
   \       0x24   0xE8BD 0x4010      POP      {R4,LR}
   \       0x28   0x.... 0x....      B.W      _ZN12MarlinSerial5printEmi
     35          

   \                                 In section .text, align 2, keep-with-next
     36          void serial_spaces(uint8_t count) { while (count--) MYSERIAL.write(' '); }
   \                     _Z13serial_spacesh: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0xE003             B.N      ??serial_spaces_0
   \                     ??serial_spaces_1: (+1)
   \        0x6   0x2120             MOVS     R1,#+32
   \        0x8   0x....             LDR.N    R0,??DataTable9_1
   \        0xA   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \                     ??serial_spaces_0: (+1)
   \        0xE   0x4620             MOV      R0,R4
   \       0x10   0x1E44             SUBS     R4,R0,#+1
   \       0x12   0xB2C0             UXTB     R0,R0
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD1F6             BNE.N    ??serial_spaces_1
   \       0x18   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \        0x0   0x....'....        DC32     from_wifi_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \        0x0   0x....'....        DC32     customizedSerial

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \        0x0   0x....'....        DC32     serial2

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   MarlinSerial::print(char const *)
         0   -> MarlinSerial::write(char const *)
         0   -> package_to_wifi
        16   -> strlen
      16   MarlinSerial::write(char const *)
         0   -> BSP_UartIfQueueTxData
        16   -> strlen
       8   MarlinSerial::write(uint8_t)
         8   -> BSP_UartIfQueueTxData
       8   serial_echopair_P(char const *, char const *)
         0   -> MarlinSerial::print(char const *)
         8   -> serialprintPGM(char const *)
       8   serial_echopair_P(char const *, char)
         0   -> MarlinSerial::print(char, int)
         0   -> MarlinSerial::write(uint8_t)
         8   -> serialprintPGM(char const *)
      16   serial_echopair_P(char const *, double)
        16   -> MarlinSerial::print(double, int)
        16   -> serialprintPGM(char const *)
      16   serial_echopair_P(char const *, float)
        16   -> MarlinSerial::print(double, int)
        16   -> __aeabi_f2d
        16   -> serialprintPGM(char const *)
       8   serial_echopair_P(char const *, int)
         0   -> MarlinSerial::print(int, int)
         8   -> serialprintPGM(char const *)
       8   serial_echopair_P(char const *, long)
         0   -> MarlinSerial::print(long, int)
         8   -> serialprintPGM(char const *)
       8   serial_echopair_P(char const *, unsigned long)
         0   -> MarlinSerial::print(unsigned long, int)
         8   -> serialprintPGM(char const *)
       8   serial_spaces(uint8_t)
         8   -> MarlinSerial::write(uint8_t)
       0   serialprintPGM(char const *)
         0   -> MarlinSerial::print(char const *)
         0   -> MarlinSerial::write(char const *)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_2
      64  MarlinSerial::print(char const *)
      28  MarlinSerial::write(char const *)
      12  MarlinSerial::write(uint8_t)
       8  echomagic
       8  errormagic
      38  serial_echopair_P(char const *, char const *)
      44  serial_echopair_P(char const *, char)
      50  serial_echopair_P(char const *, double)
      54  serial_echopair_P(char const *, float)
      44  serial_echopair_P(char const *, int)
      44  serial_echopair_P(char const *, long)
      44  serial_echopair_P(char const *, unsigned long)
      26  serial_spaces(uint8_t)
      36  serialprintPGM(char const *)

 
  16 bytes in section .rodata
 496 bytes in section .text
 
 356 bytes of CODE  memory (+ 140 bytes shared)
  16 bytes of CONST memory

Errors: none
Warnings: 3
