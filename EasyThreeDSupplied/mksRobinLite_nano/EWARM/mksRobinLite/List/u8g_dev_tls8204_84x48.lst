###############################################################################
#
# IAR ANSI C/C++ Compiler V8.22.1.15669/W32 for ARM       28/Dec/2020  21:37:08
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\nano\Middlewares\Third_Party\u8glib_arm_v1.17\src\u8g_dev_tls8204_84x48.c
#    Command line =  
#        -f C:\Users\ADMINI~1\AppData\Local\Temp\EW4A92.tmp
#        (F:\nano\Middlewares\Third_Party\u8glib_arm_v1.17\src\u8g_dev_tls8204_84x48.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D MKS_ROBIN -D MARLIN -D __arm__ -D
#        USE_MKS_WIFI --preprocess=s F:\nano\EWARM\mksRobinLite\List -lC
#        F:\nano\EWARM\mksRobinLite\List -lA F:\nano\EWARM\mksRobinLite\List
#        --diag_suppress Pa050 -o F:\nano\EWARM\mksRobinLite\Obj --no_unroll
#        --no_inline --no_tbaa --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --char_is_signed --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Full.h" -I F:\nano\EWARM/../Inc\ -I
#        F:\nano\EWARM/../Src\ -I
#        F:\nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\ -I
#        F:\nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\ -I
#        F:\nano\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/Inc\ -I
#        F:\nano\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\ -I
#        F:\nano\EWARM/../Drivers/CMSIS/Include\ -I
#        F:\nano\EWARM/../Drivers/BSP/STM32MKS-3dPrinter\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/Common\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/l6474\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/at24cxx\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/w25qxx\ -I
#        F:\nano\EWARM/../Drivers/BSP/MotorControl\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/FatFs/src\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/Marlin\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/u8glib_arm_v1.17/src\ -I
#        F:\nano\EWARM/../Middlewares/arduino\ -I
#        F:\nano\EWARM/../Middlewares/arduino/avr\ -I
#        F:\nano\EWARM/../Inc/Logo\ -Om --use_c++_inline -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.0\arm\CMSIS\Core\Include\" -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  F:\nano\EWARM\mksRobinLite\List\u8g_dev_tls8204_84x48.lst
#    Object file  =  F:\nano\EWARM\mksRobinLite\Obj\u8g_dev_tls8204_84x48.o
#
###############################################################################

F:\nano\Middlewares\Third_Party\u8glib_arm_v1.17\src\u8g_dev_tls8204_84x48.c
      1          /*
      2          
      3            u8g_dev_tls8204_84x48.c
      4            
      5            Display: Nokia 84x48
      6            
      7            Status: Tested with TLS8204V12 Display by Olimex MOD-LCD3310
      8            
      9            Contributed: http://code.google.com/p/u8glib/issues/detail?id=126
     10          
     11            Universal 8bit Graphics Library
     12            
     13            Copyright (c) 2011, olikraus@gmail.com
     14            All rights reserved.
     15          
     16            Redistribution and use in source and binary forms, with or without modification, 
     17            are permitted provided that the following conditions are met:
     18          
     19            * Redistributions of source code must retain the above copyright notice, this list 
     20              of conditions and the following disclaimer.
     21              
     22            * Redistributions in binary form must reproduce the above copyright notice, this 
     23              list of conditions and the following disclaimer in the documentation and/or other 
     24              materials provided with the distribution.
     25          
     26            THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
     27            CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
     28            INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
     29            MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
     30            DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
     31            CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
     32            SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
     33            NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
     34            LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
     35            CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
     36            STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
     37            ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
     38            ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
     39            
     40            
     41          */
     42          
     43          #include "u8g.h"
     44          
     45          #define WIDTH 84
     46          #define HEIGHT 48
     47          #define PAGE_HEIGHT 8
     48          
     49          

   \                                 In section .text, align 4, keep-with-next
     50          static const uint8_t u8g_dev_tls8204_init_seq[] PROGMEM = {
   \                     u8g_dev_tls8204_init_seq:
   \   00000000   0xFF 0xD0          DC8 255, 208, 255, 224, 255, 193, 255, 209, 33, 6, 5, 64, 19, 192, 32
   \              0xFF 0xE0    
   \              0xFF 0xC1    
   \              0xFF 0xD1    
   \              0x21 0x06    
   \              0x05 0x40    
   \              0x13 0xC0    
   \              0x20         
   \   0000000F   0x0C 0xFF          DC8 12, 255, 100, 32, 13, 255, 100, 255, 100, 32, 12, 255, 100, 255
   \              0x64 0x20    
   \              0x0D 0xFF    
   \              0x64 0xFF    
   \              0x64 0x20    
   \              0x0C 0xFF    
   \              0x64 0xFF    
   \   0000001D   0xD0 0xFF          DC8 208, 255, 254
   \              0xFE         
     51            U8G_ESC_CS(0),             /* disable chip */
     52            U8G_ESC_ADR(0),           /* instruction mode */
     53            U8G_ESC_RST(1),           /* do reset low pulse with (1*16)+2 milliseconds */
     54            U8G_ESC_CS(1),             /* enable chip */
     55            0x021,		/* activate chip (PD=0), horizontal increment (V=0), enter extended command set (H=1) */
     56            0x006,		/* temp. control: b10 = 2 */
     57            0x04 | !!((66-1)&(1u<<6)),
     58            0x40 | ((66-2) & ((1u<<6)-1)),
     59            0x013,		/* bias system 1:48 */
     60            0x0c0,		/* medium Vop */
     61            0x020,		/* activate chip (PD=0), horizontal increment (V=0), enter normal command set (H=0) */
     62            0x00c,		/* display on, normal operation */
     63            U8G_ESC_DLY(100),       /* delay 100 ms */
     64            0x020,		                /* activate chip (PD=0), horizontal increment (V=0), enter normal command set (H=0) */
     65            0x00d,		                /* display on, invert */
     66            U8G_ESC_DLY(100),       /* delay 100 ms */
     67            U8G_ESC_DLY(100),       /* delay 100 ms */
     68            0x020,		                /* activate chip (PD=0), horizontal increment (V=0), enter normal command set (H=0) */
     69            0x00c,		                /* display on, normal */
     70            U8G_ESC_DLY(100),       /* delay 100 ms */
     71            U8G_ESC_CS(0),             /* disable chip */
     72            U8G_ESC_END                /* end of sequence */
     73          };
     74          
     75          

   \                                 In section .text, align 4, keep-with-next
     76          uint8_t u8g_dev_tls8204_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg)
     77          {
   \                     u8g_dev_tls8204_fn: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
   \   00000008   0x4616             MOV      R6,R2
   \   0000000A   0x461F             MOV      R7,R3
     78            switch(msg)
   \   0000000C   0x4630             MOV      R0,R6
   \   0000000E   0x280A             CMP      R0,#+10
   \   00000010   0xD004             BEQ.N    ??u8g_dev_tls8204_fn_0
   \   00000012   0x280F             CMP      R0,#+15
   \   00000014   0xD046             BEQ.N    ??u8g_dev_tls8204_fn_1
   \   00000016   0x2815             CMP      R0,#+21
   \   00000018   0xD013             BEQ.N    ??u8g_dev_tls8204_fn_2
   \   0000001A   0xE008             B.N      ??u8g_dev_tls8204_fn_3
     79            {
     80              case U8G_DEV_MSG_INIT:
     81                u8g_InitCom(u8g, dev, U8G_SPI_CLK_CYCLE_400NS);
   \                     ??u8g_dev_tls8204_fn_0: (+1)
   \   0000001C   0x2203             MOVS     R2,#+3
   \   0000001E   0x4620             MOV      R0,R4
   \   00000020   0x.... 0x....      BL       u8g_InitCom
     82                u8g_WriteEscSeqP(u8g, dev, u8g_dev_tls8204_init_seq);
   \   00000024   0x....             ADR.N    R2,u8g_dev_tls8204_init_seq
   \   00000026   0x4629             MOV      R1,R5
   \   00000028   0x4620             MOV      R0,R4
   \   0000002A   0x.... 0x....      BL       u8g_WriteEscSeqP
     83                break;
     84              case U8G_DEV_MSG_STOP:
     85                break;
     86              case U8G_DEV_MSG_PAGE_NEXT:
     87                {
     88                  u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
     89                  u8g_SetAddress(u8g, dev, 0);           /* command mode */
     90                  u8g_SetChipSelect(u8g, dev, 1);
     91                  u8g_WriteByte(u8g, dev, 0x020 );		/* activate chip (PD=0), horizontal increment (V=0), enter normal command set (H=0) */
     92                  u8g_WriteByte(u8g, dev, 0x080 );                        /* set X address */
     93                  u8g_WriteByte(u8g, dev, 0x040 | pb->p.page); /* set Y address */
     94                  u8g_SetAddress(u8g, dev, 1);           /* data mode */
     95                  if ( u8g_pb_WriteBuffer(pb, u8g, dev) == 0 )
     96                    return 0;
     97                  u8g_SetChipSelect(u8g, dev, 0);
     98                }
     99                break;
    100              case U8G_DEV_MSG_CONTRAST:
    101                /* the contrast adjustment does not work, needs to be analysed */
    102                u8g_SetAddress(u8g, dev, 0);          /* instruction mode */
    103                u8g_SetChipSelect(u8g, dev, 1);
    104                u8g_WriteByte(u8g, dev, 0x021);        /* command mode, extended function set */
    105                u8g_WriteByte(u8g, dev, 0x080 | ( (*(uint8_t *)arg) >> 1 ) );
    106                u8g_WriteByte(u8g, dev, 0x020);        /* command mode, extended function set */
    107                u8g_SetChipSelect(u8g, dev, 0);
    108                return 1;
    109            }
    110            return u8g_dev_pb8v1_base_fn(u8g, dev, msg, arg);
   \                     ??u8g_dev_tls8204_fn_3: (+1)
   \   0000002E   0x463B             MOV      R3,R7
   \   00000030   0x4632             MOV      R2,R6
   \   00000032   0x4629             MOV      R1,R5
   \   00000034   0x4620             MOV      R0,R4
   \   00000036   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   0000003A   0x.... 0x....      B.W      u8g_dev_pb8v1_base_fn
   \                     ??u8g_dev_tls8204_fn_4: (+1)
   \   0000003E   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
   \                     ??u8g_dev_tls8204_fn_2: (+1)
   \   00000042   0xF8D5 0x8004      LDR      R8,[R5, #+4]
   \   00000046   0x2200             MOVS     R2,#+0
   \   00000048   0x4620             MOV      R0,R4
   \   0000004A   0x.... 0x....      BL       u8g_SetAddress
   \   0000004E   0x2201             MOVS     R2,#+1
   \   00000050   0x4629             MOV      R1,R5
   \   00000052   0x4620             MOV      R0,R4
   \   00000054   0x.... 0x....      BL       u8g_SetChipSelect
   \   00000058   0x2220             MOVS     R2,#+32
   \   0000005A   0x4629             MOV      R1,R5
   \   0000005C   0x4620             MOV      R0,R4
   \   0000005E   0x.... 0x....      BL       u8g_WriteByte
   \   00000062   0x2280             MOVS     R2,#+128
   \   00000064   0x4629             MOV      R1,R5
   \   00000066   0x4620             MOV      R0,R4
   \   00000068   0x.... 0x....      BL       u8g_WriteByte
   \   0000006C   0xF898 0x2004      LDRB     R2,[R8, #+4]
   \   00000070   0xF042 0x0240      ORR      R2,R2,#0x40
   \   00000074   0x4629             MOV      R1,R5
   \   00000076   0x4620             MOV      R0,R4
   \   00000078   0x.... 0x....      BL       u8g_WriteByte
   \   0000007C   0x2201             MOVS     R2,#+1
   \   0000007E   0x4629             MOV      R1,R5
   \   00000080   0x4620             MOV      R0,R4
   \   00000082   0x.... 0x....      BL       u8g_SetAddress
   \   00000086   0x462A             MOV      R2,R5
   \   00000088   0x4621             MOV      R1,R4
   \   0000008A   0x4640             MOV      R0,R8
   \   0000008C   0x.... 0x....      BL       u8g_pb_WriteBuffer
   \   00000090   0x2800             CMP      R0,#+0
   \   00000092   0xD101             BNE.N    ??u8g_dev_tls8204_fn_5
   \   00000094   0x2000             MOVS     R0,#+0
   \   00000096   0xE7D2             B.N      ??u8g_dev_tls8204_fn_4
   \                     ??u8g_dev_tls8204_fn_5: (+1)
   \   00000098   0x2200             MOVS     R2,#+0
   \   0000009A   0x4629             MOV      R1,R5
   \   0000009C   0x4620             MOV      R0,R4
   \   0000009E   0x.... 0x....      BL       u8g_SetChipSelect
   \   000000A2   0xE7C4             B.N      ??u8g_dev_tls8204_fn_3
   \                     ??u8g_dev_tls8204_fn_1: (+1)
   \   000000A4   0x2200             MOVS     R2,#+0
   \   000000A6   0x4620             MOV      R0,R4
   \   000000A8   0x.... 0x....      BL       u8g_SetAddress
   \   000000AC   0x2201             MOVS     R2,#+1
   \   000000AE   0x4629             MOV      R1,R5
   \   000000B0   0x4620             MOV      R0,R4
   \   000000B2   0x.... 0x....      BL       u8g_SetChipSelect
   \   000000B6   0x2221             MOVS     R2,#+33
   \   000000B8   0x4629             MOV      R1,R5
   \   000000BA   0x4620             MOV      R0,R4
   \   000000BC   0x.... 0x....      BL       u8g_WriteByte
   \   000000C0   0x783A             LDRB     R2,[R7, #+0]
   \   000000C2   0x0852             LSRS     R2,R2,#+1
   \   000000C4   0xF042 0x0280      ORR      R2,R2,#0x80
   \   000000C8   0x4629             MOV      R1,R5
   \   000000CA   0x4620             MOV      R0,R4
   \   000000CC   0x.... 0x....      BL       u8g_WriteByte
   \   000000D0   0x2220             MOVS     R2,#+32
   \   000000D2   0x4629             MOV      R1,R5
   \   000000D4   0x4620             MOV      R0,R4
   \   000000D6   0x.... 0x....      BL       u8g_WriteByte
   \   000000DA   0x2200             MOVS     R2,#+0
   \   000000DC   0x4629             MOV      R1,R5
   \   000000DE   0x4620             MOV      R0,R4
   \   000000E0   0x.... 0x....      BL       u8g_SetChipSelect
   \   000000E4   0x2001             MOVS     R0,#+1
   \   000000E6   0xE7AA             B.N      ??u8g_dev_tls8204_fn_4
    111          }
    112          
    113          

   \                                 In section .bss, align 4
    114          U8G_PB_DEV(u8g_dev_tls8204_84x48_sw_spi , WIDTH, HEIGHT, PAGE_HEIGHT, u8g_dev_tls8204_fn, U8G_COM_SW_SPI);
   \                     u8g_dev_tls8204_84x48_sw_spi_buf:
   \   00000000                      DS8 84

   \                                 In section .data, align 4
   \   __absolute u8g_pb_t u8g_dev_tls8204_84x48_sw_spi_pb
   \                     u8g_dev_tls8204_84x48_sw_spi_pb:
   \   00000000   0x08 0x30          DC8 8, 48, 0, 0, 0, 84, 0, 0
   \              0x00 0x00    
   \              0x00 0x54    
   \              0x00 0x00    
   \   00000008   0x........         DC32 u8g_dev_tls8204_84x48_sw_spi_buf

   \                                 In section .data, align 4
   \   __absolute u8g_dev_t u8g_dev_tls8204_84x48_sw_spi
   \                     u8g_dev_tls8204_84x48_sw_spi:
   \   00000000   0x........         DC32 u8g_dev_tls8204_fn, u8g_dev_tls8204_84x48_sw_spi_pb
   \              0x........   
   \   00000008   0x........         DC32 u8g_com_null_fn
    115          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   u8g_dev_tls8204_fn
        24   -> u8g_InitCom
        24   -> u8g_SetAddress
        24   -> u8g_SetChipSelect
        24   -> u8g_WriteByte
        24   -> u8g_WriteEscSeqP
         0   -> u8g_dev_pb8v1_base_fn
        24   -> u8g_pb_WriteBuffer


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  u8g_dev_tls8204_84x48_sw_spi
      84  u8g_dev_tls8204_84x48_sw_spi_buf
      12  u8g_dev_tls8204_84x48_sw_spi_pb
     232  u8g_dev_tls8204_fn
      32  u8g_dev_tls8204_init_seq

 
  84 bytes in section .bss
  24 bytes in section .data
 264 bytes in section .text
 
 264 bytes of CODE memory
 108 bytes of DATA memory

Errors: none
Warnings: none
