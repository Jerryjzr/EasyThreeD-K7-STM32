###############################################################################
#
# IAR ANSI C/C++ Compiler V8.22.1.15669/W32 for ARM       28/Dec/2020  22:13:41
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\nano\Src\dma.c
#    Command line =  
#        -f C:\Users\ADMINI~1\AppData\Local\Temp\EWC0F5.tmp (F:\nano\Src\dma.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D MKS_ROBIN -D MARLIN -D __arm__ -D
#        USE_MKS_WIFI --preprocess=s F:\nano\EWARM\mksRobinLite\List -lC
#        F:\nano\EWARM\mksRobinLite\List -lA F:\nano\EWARM\mksRobinLite\List
#        --diag_suppress Pa050 -o F:\nano\EWARM\mksRobinLite\Obj --no_unroll
#        --no_inline --no_tbaa --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --char_is_signed --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Full.h" -I F:\nano\EWARM/../Inc\ -I
#        F:\nano\EWARM/../Src\ -I
#        F:\nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\ -I
#        F:\nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\ -I
#        F:\nano\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/Inc\ -I
#        F:\nano\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\ -I
#        F:\nano\EWARM/../Drivers/CMSIS/Include\ -I
#        F:\nano\EWARM/../Drivers/BSP/STM32MKS-3dPrinter\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/Common\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/l6474\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/at24cxx\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/w25qxx\ -I
#        F:\nano\EWARM/../Drivers/BSP/MotorControl\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/FatFs/src\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/Marlin\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/u8glib_arm_v1.17/src\ -I
#        F:\nano\EWARM/../Middlewares/arduino\ -I
#        F:\nano\EWARM/../Middlewares/arduino/avr\ -I
#        F:\nano\EWARM/../Inc/Logo\ -Om --use_c++_inline -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.0\arm\CMSIS\Core\Include\" -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  F:\nano\EWARM\mksRobinLite\List\dma.lst
#    Object file  =  F:\nano\EWARM\mksRobinLite\Obj\dma.o
#
###############################################################################

F:\nano\Src\dma.c
      1          /**
      2            ******************************************************************************
      3            * File Name          : dma.c
      4            * Description        : This file provides code for the configuration
      5            *                      of all the requested memory to memory DMA transfers.
      6            ******************************************************************************
      7            *
      8            * COPYRIGHT(c) 2017 STMicroelectronics
      9            *
     10            * Redistribution and use in source and binary forms, with or without modification,
     11            * are permitted provided that the following conditions are met:
     12            *   1. Redistributions of source code must retain the above copyright notice,
     13            *      this list of conditions and the following disclaimer.
     14            *   2. Redistributions in binary form must reproduce the above copyright notice,
     15            *      this list of conditions and the following disclaimer in the documentation
     16            *      and/or other materials provided with the distribution.
     17            *   3. Neither the name of STMicroelectronics nor the names of its contributors
     18            *      may be used to endorse or promote products derived from this software
     19            *      without specific prior written permission.
     20            *
     21            * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
     22            * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     23            * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     24            * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
     25            * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
     26            * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
     27            * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
     28            * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
     29            * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
     30            * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     31            *
     32            ******************************************************************************
     33            */
     34          /* Includes ------------------------------------------------------------------*/
     35          #include "dma.h"
     36          
     37          /* USER CODE BEGIN 0 */
     38          
     39          /* USER CODE END 0 */
     40          
     41          /*----------------------------------------------------------------------------*/
     42          /* Configure DMA                                                              */
     43          /*----------------------------------------------------------------------------*/
     44          
     45          /* USER CODE BEGIN 1 */
     46          
     47          /* USER CODE END 1 */
     48          
     49          /** 
     50            * Enable DMA controller clock
     51            */

   \                                 In section .text, align 4, keep-with-next
     52          void MX_DMA_Init(void) 
     53          {
   \                     MX_DMA_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     54            /* DMA controller clock enable */
     55            __HAL_RCC_DMA1_CLK_ENABLE();
   \   00000002   0x4812             LDR.N    R0,??MX_DMA_Init_0  ;; 0x40021014
   \   00000004   0x6801             LDR      R1,[R0, #+0]
   \   00000006   0xF041 0x0101      ORR      R1,R1,#0x1
   \   0000000A   0x6001             STR      R1,[R0, #+0]
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xF000 0x0001      AND      R0,R0,#0x1
   \   00000012   0x9000             STR      R0,[SP, #+0]
   \   00000014   0x9800             LDR      R0,[SP, #+0]
     56          
     57            /* DMA interrupt init */
     58            /* DMA1_Channel1_IRQn interrupt configuration */
     59            HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 4, 0);
   \   00000016   0x2200             MOVS     R2,#+0
   \   00000018   0x2104             MOVS     R1,#+4
   \   0000001A   0x200B             MOVS     R0,#+11
   \   0000001C   0x.... 0x....      BL       HAL_NVIC_SetPriority
     60            HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
   \   00000020   0x200B             MOVS     R0,#+11
   \   00000022   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
     61          #if 1  //SPI_DMA
     62            /* DMA1_Channel4_IRQn interrupt configuration */
     63            HAL_NVIC_SetPriority(DMA1_Channel4_IRQn, 4, 0);
   \   00000026   0x2200             MOVS     R2,#+0
   \   00000028   0x2104             MOVS     R1,#+4
   \   0000002A   0x200E             MOVS     R0,#+14
   \   0000002C   0x.... 0x....      BL       HAL_NVIC_SetPriority
     64            HAL_NVIC_EnableIRQ(DMA1_Channel4_IRQn);
   \   00000030   0x200E             MOVS     R0,#+14
   \   00000032   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
     65            /* DMA1_Channel5_IRQn interrupt configuration */
     66            HAL_NVIC_SetPriority(DMA1_Channel5_IRQn, 4, 0);
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0x2104             MOVS     R1,#+4
   \   0000003A   0x200F             MOVS     R0,#+15
   \   0000003C   0x.... 0x....      BL       HAL_NVIC_SetPriority
     67            HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);
   \   00000040   0x200F             MOVS     R0,#+15
   \   00000042   0xE8BD 0x4002      POP      {R1,LR}
   \   00000046   0x.... 0x....      B.W      HAL_NVIC_EnableIRQ
   \   0000004A   0xBF00             Nop      
   \                     ??MX_DMA_Init_0:
   \   0000004C   0x40021014         DC32     0x40021014
     68          #endif
     69          }
     70          
     71          /* USER CODE BEGIN 2 */
     72          
     73          /* USER CODE END 2 */
     74          
     75          /**
     76            * @}
     77            */
     78          
     79          /**
     80            * @}
     81            */
     82          
     83          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   MX_DMA_Init
         0   -> HAL_NVIC_EnableIRQ
         8   -> HAL_NVIC_EnableIRQ
         8   -> HAL_NVIC_SetPriority


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      80  MX_DMA_Init

 
 80 bytes in section .text
 
 80 bytes of CODE memory

Errors: none
Warnings: none
