###############################################################################
#
# IAR ANSI C/C++ Compiler V8.30.1.114/W32 for ARM         07/Apr/2021  11:05:08
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\SdFatUtil.cpp
#    Command line =  
#        -f C:\Users\PLT\AppData\Local\Temp\EW94FF.tmp
#        (C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\SdFatUtil.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D MKS_ROBIN -D MARLIN -D __arm__ -D
#        USE_MKS_WIFI --preprocess=s
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List -lC
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List -lA
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List
#        --diag_suppress Pa050 -o
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\Obj
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.1\arm\inc\c\DLib_Config_Full.h" -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Inc\ -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Src\ -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/Inc\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/CMSIS/Include\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/STM32MKS-3dPrinter\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/Common\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/l6474\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/MotorControl\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/u8glib_arm_v1.17/src\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/arduino\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/arduino/avr\
#        -I C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Inc/Logo\ -Om --c++
#        --no_exceptions --no_rtti -I "D:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.1\arm\CMSIS\Core\Include\" -I "D:\Program
#        Files (x86)\IAR Systems\Embedded Workbench
#        8.1\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List\SdFatUtil.lst
#    Object file  =  
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\Obj\SdFatUtil.o
#
###############################################################################

C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\SdFatUtil.cpp
      1          /**
      2           * Marlin 3D Printer Firmware
      3           * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
      4           *
      5           * Based on Sprinter and grbl.
      6           * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
      7           *
      8           * This program is free software: you can redistribute it and/or modify
      9           * it under the terms of the GNU General Public License as published by
     10           * the Free Software Foundation, either version 3 of the License, or
     11           * (at your option) any later version.
     12           *
     13           * This program is distributed in the hope that it will be useful,
     14           * but WITHOUT ANY WARRANTY; without even the implied warranty of
     15           * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     16           * GNU General Public License for more details.
     17           *
     18           * You should have received a copy of the GNU General Public License
     19           * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     20           *
     21           */
     22          
     23          /**
     24           * Arduino SdFat Library
     25           * Copyright (C) 2008 by William Greiman
     26           *
     27           * This file is part of the Arduino Sd2Card Library
     28           */
     29          #include "Marlin.h"

    #define SDSS   18
            ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\pins_MKS_ROBIN_LITE.h",161  Warning[Pa181]: 
          incompatible redefinition of macro "SDSS" (declared at line 62)

  #define UNUSED(x) ((void)(x))
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pa181]: 
          incompatible redefinition of macro "UNUSED" (declared at line 88 of
          "C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marl
          in\macros.h")

   \                                 In section .text, align 2
   \   __interwork __softfp void MarlinSerial::write(uint8_t)
   \                     _ZN12MarlinSerial5writeEh: (+1)
   \        0x0   0xB502             PUSH     {R1,LR}
   \        0x2   0x2201             MOVS     R2,#+1
   \        0x4   0x4669             MOV      R1,SP
   \        0x6   0x.... 0x....      BL       BSP_UartIfQueueTxData
   \        0xA   0xBD01             POP      {R0,PC}          ;; return

  #define PRINT_LED_PIN         PDout(2)
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Drivers\BSP\STM32MKS-3dPrinter\mks_fastio.h",14  Warning[Pa181]: 
          incompatible redefinition of macro "PRINT_LED_PIN" (declared at line
          146 of "C:\Users\PLT\Desktop\mksRobinLite_nano\Inc\main.h")
     30          
     31          #if ENABLED(SDSUPPORT)
     32          #include "SdFatUtil.h"
     33          
     34          //------------------------------------------------------------------------------
     35          /** Amount of free RAM
     36           * \return The number of free bytes.
     37           */
     38          #ifdef __arm__
     39          extern "C" char* sbrk(int incr);

   \                                 In section .text, align 2, keep-with-next
     40          int SdFatUtil::FreeRam() {
   \                     _ZN9SdFatUtil7FreeRamEv: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
     41            char top;
     42            return &top - reinterpret_cast<char*>(sbrk(0));
   \        0x2   0x466C             MOV      R4,SP
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       sbrk
   \        0xA   0x1A24             SUBS     R4,R4,R0
   \        0xC   0x4620             MOV      R0,R4
   \        0xE   0xBD16             POP      {R1,R2,R4,PC}    ;; return
     43          }
     44          #else  // __arm__
     45          extern char* __brkval;
     46          extern char __bss_end;
     47          /** Amount of free RAM
     48           * \return The number of free bytes.
     49           */
     50          int SdFatUtil::FreeRam() {
     51            char top;
     52            return __brkval ? &top - __brkval : &top - &__bss_end;
     53          }
     54          #endif  // __arm
     55          
     56          //------------------------------------------------------------------------------
     57          /** %Print a string in flash memory.
     58           *
     59           * \param[in] pr Print object for output.
     60           * \param[in] str Pointer to string stored in flash memory.
     61           */

   \                                 In section .text, align 2, keep-with-next
     62          void SdFatUtil::print_P(PGM_P str) {
   \                     _ZN9SdFatUtil7print_PEPKc: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0xE003             B.N      ??print_P_0
     63            for (uint8_t c; (c = pgm_read_byte(str)); str++) MYSERIAL.write(c);
   \                     ??print_P_1: (+1)
   \        0x6   0x....             LDR.N    R0,??DataTable2
   \        0x8   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \        0xC   0x1C64             ADDS     R4,R4,#+1
   \                     ??print_P_0: (+1)
   \        0xE   0x7821             LDRB     R1,[R4, #+0]
   \       0x10   0x0008             MOVS     R0,R1
   \       0x12   0xD1F8             BNE.N    ??print_P_1
     64          }
   \       0x14   0xBD10             POP      {R4,PC}          ;; return
     65          //------------------------------------------------------------------------------
     66          /** %Print a string in flash memory followed by a CR/LF.
     67           *
     68           * \param[in] pr Print object for output.
     69           * \param[in] str Pointer to string stored in flash memory.
     70           */

   \                                 In section .text, align 2, keep-with-next
     71          void SdFatUtil::println_P(PGM_P str) {
   \                     _ZN9SdFatUtil9println_PEPKc: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     72            print_P(str);
   \        0x2   0x.... 0x....      BL       _ZN9SdFatUtil7print_PEPKc
     73            MYSERIAL.println();
   \        0x6   0x....             LDR.N    R0,??DataTable2
   \        0x8   0xE8BD 0x4002      POP      {R1,LR}
   \        0xC   0x.... 0x....      B.W      _ZN12MarlinSerial7printlnEv
     74          }
     75          //------------------------------------------------------------------------------
     76          /** %Print a string in flash memory to Serial.
     77           *
     78           * \param[in] str Pointer to string stored in flash memory.
     79           */

   \                                 In section .text, align 2, keep-with-next
     80          void SdFatUtil::SerialPrint_P(PGM_P str) {
     81            print_P(str);
   \                     _ZN9SdFatUtil13SerialPrint_PEPKc: (+1)
   \        0x0   0x....             B.N      _ZN9SdFatUtil7print_PEPKc
     82          }
     83          //------------------------------------------------------------------------------
     84          /** %Print a string in flash memory to Serial followed by a CR/LF.
     85           *
     86           * \param[in] str Pointer to string stored in flash memory.
     87           */

   \                                 In section .text, align 2, keep-with-next
     88          void SdFatUtil::SerialPrintln_P(PGM_P str) {
     89            println_P(str);
   \                     _ZN9SdFatUtil15SerialPrintln_PEPKc: (+1)
   \        0x0   0x....             B.N      _ZN9SdFatUtil9println_PEPKc
     90          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \        0x0   0x....'....        DC32     customizedSerial
     91          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   MarlinSerial::write(uint8_t)
         8   -> BSP_UartIfQueueTxData
      16   SdFatUtil::FreeRam()
        16   -> sbrk
       0   SdFatUtil::SerialPrint_P(char const *)
         0   -> SdFatUtil::print_P(char const *)
       0   SdFatUtil::SerialPrintln_P(char const *)
         0   -> SdFatUtil::println_P(char const *)
       8   SdFatUtil::print_P(char const *)
         8   -> MarlinSerial::write(uint8_t)
       8   SdFatUtil::println_P(char const *)
         0   -> MarlinSerial::println()
         8   -> SdFatUtil::print_P(char const *)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
      12  MarlinSerial::write(uint8_t)
      16  SdFatUtil::FreeRam()
       2  SdFatUtil::SerialPrint_P(char const *)
       2  SdFatUtil::SerialPrintln_P(char const *)
      22  SdFatUtil::print_P(char const *)
      16  SdFatUtil::println_P(char const *)

 
 74 bytes in section .text
 
 62 bytes of CODE memory (+ 12 bytes shared)

Errors: none
Warnings: 3
