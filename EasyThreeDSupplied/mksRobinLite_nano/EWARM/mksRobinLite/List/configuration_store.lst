###############################################################################
#
# IAR ANSI C/C++ Compiler V8.30.1.114/W32 for ARM         07/May/2021  14:21:27
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\configuration_store.cpp
#    Command line =  
#        -f C:\Users\PLT\AppData\Local\Temp\EWD7FF.tmp
#        (C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\configuration_store.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D MKS_ROBIN -D MARLIN -D __arm__ -D
#        USE_MKS_WIFI --preprocess=s
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List -lC
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List -lA
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List
#        --diag_suppress Pa050 -o
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\Obj
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.1\arm\inc\c\DLib_Config_Full.h" -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Inc\ -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Src\ -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/Inc\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/CMSIS/Include\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/STM32MKS-3dPrinter\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/Common\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/l6474\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/MotorControl\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/u8glib_arm_v1.17/src\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/arduino\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/arduino/avr\
#        -I C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Inc/Logo\ -Om --c++
#        --no_exceptions --no_rtti -I "D:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.1\arm\CMSIS\Core\Include\" -I "D:\Program
#        Files (x86)\IAR Systems\Embedded Workbench
#        8.1\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List\configuration_store.lst
#    Object file  =  
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\Obj\configuration_store.o
#
###############################################################################

C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\configuration_store.cpp
      1          /**
      2           * Marlin 3D Printer Firmware
      3           * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
      4           *
      5           * Based on Sprinter and grbl.
      6           * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
      7           *
      8           * This program is free software: you can redistribute it and/or modify
      9           * it under the terms of the GNU General Public License as published by
     10           * the Free Software Foundation, either version 3 of the License, or
     11           * (at your option) any later version.
     12           *
     13           * This program is distributed in the hope that it will be useful,
     14           * but WITHOUT ANY WARRANTY; without even the implied warranty of
     15           * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     16           * GNU General Public License for more details.
     17           *
     18           * You should have received a copy of the GNU General Public License
     19           * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     20           *
     21           */
     22          
     23          /**
     24           * configuration_store.cpp
     25           *
     26           * Settings and EEPROM storage
     27           *
     28           * IMPORTANT:  Whenever there are changes made to the variables stored in EEPROM
     29           * in the functions below, also increment the version number. This makes sure that
     30           * the default values are used whenever there is a change to the data, to prevent
     31           * wrong data being written to the variables.
     32           *
     33           * ALSO: Variables in the Store and Retrieve sections must be in the same order.
     34           *       If a feature is disabled, some data must still be written that, when read,
     35           *       either sets a Sane Default, or results in No Change to the existing value.
     36           *
     37           */
     38          
     39          #define EEPROM_VERSION "V37"
     40          
     41          // Change EEPROM version if these are changed:
     42          //#define EEPROM_OFFSET 100
     43          #define EEPROM_OFFSET 0
     44          
     45          #define MAX_EXTRUDERS 1 /*--mks--*/
     46          
     47          /**
     48           * V37 EEPROM Layout:
     49           *
     50           *  100  Version                                    (char x4)
     51           *  104  EEPROM Checksum                            (uint16_t)
     52           *
     53           *  106            E_STEPPERS                       (uint8_t)
     54           *  107  M92 XYZE  planner.axis_steps_per_mm        (float x4 ... x8)
     55           *  123  M203 XYZE planner.max_feedrate_mm_s        (float x4 ... x8)
     56           *  139  M201 XYZE planner.max_acceleration_mm_per_s2 (uint32_t x4 ... x8)
     57           *  155  M204 P    planner.acceleration             (float)
     58           *  159  M204 R    planner.retract_acceleration     (float)
     59           *  163  M204 T    planner.travel_acceleration      (float)
     60           *  167  M205 S    planner.min_feedrate_mm_s        (float)
     61           *  171  M205 T    planner.min_travel_feedrate_mm_s (float)
     62           *  175  M205 B    planner.min_segment_time         (ulong)
     63           *  179  M205 X    planner.max_jerk[X_AXIS]         (float)
     64           *  183  M205 Y    planner.max_jerk[Y_AXIS]         (float)
     65           *  187  M205 Z    planner.max_jerk[Z_AXIS]         (float)
     66           *  191  M205 E    planner.max_jerk[E_AXIS]         (float)
     67           *  195  M206 XYZ  home_offset                      (float x3)
     68           *  207  M218 XYZ  hotend_offset                    (float x3 per additional hotend)
     69           *
     70           * Global Leveling:
     71           *  219            z_fade_height                    (float)
     72           *
     73           * MESH_BED_LEVELING:                               43 bytes
     74           *  223  M420 S    from mbl.status                  (bool)
     75           *  224            mbl.z_offset                     (float)
     76           *  228            GRID_MAX_POINTS_X                (uint8_t)
     77           *  229            GRID_MAX_POINTS_Y                (uint8_t)
     78           *  230 G29 S3 XYZ z_values[][]                     (float x9, up to float x81) +288
     79           *
     80           * HAS_BED_PROBE:                                   4 bytes
     81           *  266  M851      zprobe_zoffset                   (float)
     82           *
     83           * ABL_PLANAR:                                      36 bytes
     84           *  270            planner.bed_level_matrix         (matrix_3x3 = float x9)
     85           *
     86           * AUTO_BED_LEVELING_BILINEAR:                      47 bytes
     87           *  306            GRID_MAX_POINTS_X                (uint8_t)
     88           *  307            GRID_MAX_POINTS_Y                (uint8_t)
     89           *  308            bilinear_grid_spacing            (int x2)
     90           *  312  G29 L F   bilinear_start                   (int x2)
     91           *  316            z_values[][]                     (float x9, up to float x256) +988
     92           *
     93           * AUTO_BED_LEVELING_UBL:                           6 bytes
     94           *  324  G29 A     ubl.state.active                 (bool)
     95           *  325  G29 Z     ubl.state.z_offset               (float)
     96           *  329  G29 S     ubl.state.eeprom_storage_slot    (int8_t)
     97           *
     98           * DELTA:                                           48 bytes
     99           *  348  M666 XYZ  endstop_adj                      (float x3)
    100           *  360  M665 R    delta_radius                     (float)
    101           *  364  M665 L    delta_diagonal_rod               (float)
    102           *  368  M665 S    delta_segments_per_second        (float)
    103           *  372  M665 B    delta_calibration_radius         (float)
    104           *  376  M665 X    delta_tower_angle_trim[A]        (float)
    105           *  380  M665 Y    delta_tower_angle_trim[B]        (float)
    106           *  ---  M665 Z    delta_tower_angle_trim[C]        (float) is always 0.0
    107           *
    108           * Z_DUAL_ENDSTOPS:                                 48 bytes
    109           *  348  M666 Z    z_endstop_adj                    (float)
    110           *  ---            dummy data                       (float x11)
    111           *
    112           * ULTIPANEL:                                       6 bytes
    113           *  396  M145 S0 H lcd_preheat_hotend_temp          (int x2)
    114           *  400  M145 S0 B lcd_preheat_bed_temp             (int x2)
    115           *  404  M145 S0 F lcd_preheat_fan_speed            (int x2)
    116           *
    117           * PIDTEMP:                                         66 bytes
    118           *  408  M301 E0 PIDC  Kp[0], Ki[0], Kd[0], Kc[0]   (float x4)
    119           *  424  M301 E1 PIDC  Kp[1], Ki[1], Kd[1], Kc[1]   (float x4)
    120           *  440  M301 E2 PIDC  Kp[2], Ki[2], Kd[2], Kc[2]   (float x4)
    121           *  456  M301 E3 PIDC  Kp[3], Ki[3], Kd[3], Kc[3]   (float x4)
    122           *  472  M301 E4 PIDC  Kp[3], Ki[3], Kd[3], Kc[3]   (float x4)
    123           *  488  M301 L        lpq_len                      (int)
    124           *
    125           * PIDTEMPBED:                                      12 bytes
    126           *  490  M304 PID  thermalManager.bedKp, .bedKi, .bedKd (float x3)
    127           *
    128           * DOGLCD:                                          2 bytes
    129           *  502  M250 C    lcd_contrast                     (int)
    130           *
    131           * FWRETRACT:                                       29 bytes
    132           *  504  M209 S    autoretract_enabled              (bool)
    133           *  505  M207 S    retract_length                   (float)
    134           *  509  M207 W    retract_length_swap              (float)
    135           *  513  M207 F    retract_feedrate_mm_s            (float)
    136           *  517  M207 Z    retract_zlift                    (float)
    137           *  521  M208 S    retract_recover_length           (float)
    138           *  525  M208 W    retract_recover_length_swap      (float)
    139           *  529  M208 F    retract_recover_feedrate_mm_s    (float)
    140           *
    141           * Volumetric Extrusion:                            21 bytes
    142           *  533  M200 D    volumetric_enabled               (bool)
    143           *  534  M200 T D  filament_size                    (float x5) (T0..3)
    144           *
    145           * HAVE_TMC2130:                                    20 bytes
    146           *  554  M906 X    stepperX current                 (uint16_t)
    147           *  556  M906 Y    stepperY current                 (uint16_t)
    148           *  558  M906 Z    stepperZ current                 (uint16_t)
    149           *  560  M906 X2   stepperX2 current                (uint16_t)
    150           *  562  M906 Y2   stepperY2 current                (uint16_t)
    151           *  564  M906 Z2   stepperZ2 current                (uint16_t)
    152           *  566  M906 E0   stepperE0 current                (uint16_t)
    153           *  568  M906 E1   stepperE1 current                (uint16_t)
    154           *  570  M906 E2   stepperE2 current                (uint16_t)
    155           *  572  M906 E3   stepperE3 current                (uint16_t)
    156           *  576  M906 E4   stepperE4 current                (uint16_t)
    157           *
    158           * LIN_ADVANCE:                                     8 bytes
    159           *  580  M900 K    extruder_advance_k               (float)
    160           *  584  M900 WHD  advance_ed_ratio                 (float)
    161           *
    162           *  588                                Minimum end-point
    163           * 1909 (588 + 36 + 9 + 288 + 988)     Maximum end-point
    164           */
    165          #include "configuration_store.h"

    #define SDSS   18
            ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\pins_MKS_ROBIN_LITE.h",161  Warning[Pa181]: 
          incompatible redefinition of macro "SDSS" (declared at line 62)

  #define UNUSED(x) ((void)(x))
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pa181]: 
          incompatible redefinition of macro "UNUSED" (declared at line 88 of
          "C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marl
          in\macros.h")
    166          

   \                                 In section .bss, align 1
    167          MarlinSettings settings;
   \                     settings:
   \        0x0                      DS8 1
    168          
    169          #include "Marlin.h"

   \                                 In section .text, align 2
   \   __interwork __softfp void MarlinSerial::write(uint8_t)
   \                     _ZN12MarlinSerial5writeEh: (+1)
   \        0x0   0xB502             PUSH     {R1,LR}
   \        0x2   0x2201             MOVS     R2,#+1
   \        0x4   0x4669             MOV      R1,SP
   \        0x6   0x.... 0x....      BL       BSP_UartIfQueueTxData
   \        0xA   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void MarlinSerial::write(char const *)
   \                     _ZN12MarlinSerial5writeEPKc: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
   \        0x6   0x4628             MOV      R0,R5
   \        0x8   0x.... 0x....      BL       strlen
   \        0xC   0x4602             MOV      R2,R0
   \        0xE   0xB2D2             UXTB     R2,R2
   \       0x10   0x4629             MOV      R1,R5
   \       0x12   0x4620             MOV      R0,R4
   \       0x14   0xE8BD 0x4038      POP      {R3-R5,LR}
   \       0x18   0x.... 0x....      B.W      BSP_UartIfQueueTxData

   \                                 In section .text, align 4
   \   __interwork __softfp void MarlinSerial::print(char const *)
   \                     _ZN12MarlinSerial5printEPKc: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
   \        0x6   0x4628             MOV      R0,R5
   \        0x8   0x.... 0x....      BL       strlen
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD013             BEQ.N    ??print_1
   \       0x10   0x480A             LDR.N    R0,??print_0
   \       0x12   0x7800             LDRB     R0,[R0, #+0]
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD105             BNE.N    ??print_2
   \       0x18   0x4629             MOV      R1,R5
   \       0x1A   0x4620             MOV      R0,R4
   \       0x1C   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \       0x20   0x.... 0x....      B.W      _ZN12MarlinSerial5writeEPKc
   \                     ??print_2: (+1)
   \       0x24   0x4628             MOV      R0,R5
   \       0x26   0x.... 0x....      BL       strlen
   \       0x2A   0x4602             MOV      R2,R0
   \       0x2C   0x4629             MOV      R1,R5
   \       0x2E   0x2002             MOVS     R0,#+2
   \       0x30   0xE8BD 0x4038      POP      {R3-R5,LR}
   \       0x34   0x.... 0x....      B.W      package_to_wifi
   \                     ??print_1: (+1)
   \       0x38   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   \       0x3A   0xBF00             Nop      
   \                     ??print_0:
   \       0x3C   0x....'....        DC32     from_wifi_flag

   \                                 In section .text, align 2
   \   __interwork __softfp void serial_echopair_P(char const *, uint8_t)
   \                     _Z17serial_echopair_PPKch: (+1)
   \        0x0   0x.... 0x....      B.W      _Z17serial_echopair_PPKci

   \                                 In section .text, align 4
   \   __interwork __softfp void serialprintPGM(char const *)
   \                     _Z14serialprintPGMPKc: (+1)
   \        0x0   0x4601             MOV      R1,R0
   \        0x2   0x4805             LDR.N    R0,??serialprintPGM_0
   \        0x4   0x7800             LDRB     R0,[R0, #+0]
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD102             BNE.N    ??serialprintPGM_1
   \        0xA   0x4804             LDR.N    R0,??serialprintPGM_0+0x4
   \        0xC   0x.... 0x....      B.W      _ZN12MarlinSerial5writeEPKc
   \                     ??serialprintPGM_1: (+1)
   \       0x10   0x4803             LDR.N    R0,??serialprintPGM_0+0x8
   \       0x12   0x.... 0x....      B.W      _ZN12MarlinSerial5printEPKc
   \       0x16   0xBF00             Nop      
   \                     ??serialprintPGM_0:
   \       0x18   0x....'....        DC32     from_wifi_flag
   \       0x1C   0x....'....        DC32     customizedSerial
   \       0x20   0x....'....        DC32     serial2

  #define PRINT_LED_PIN         PDout(2)
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Drivers\BSP\STM32MKS-3dPrinter\mks_fastio.h",14  Warning[Pa181]: 
          incompatible redefinition of macro "PRINT_LED_PIN" (declared at line
          146 of "C:\Users\PLT\Desktop\mksRobinLite_nano\Inc\main.h")
    170          #include "language.h"
    171          #include "endstops.h"

   \                                 In section .text, align 4
   \   __interwork __softfp void Endstops::enable_globally(bool)
   \                     _ZN8Endstops15enable_globallyEb: (+1)
   \        0x0   0x4902             LDR.N    R1,??enable_globally_0
   \        0x2   0x7008             STRB     R0,[R1, #+0]
   \        0x4   0x4902             LDR.N    R1,??enable_globally_0+0x4
   \        0x6   0x7008             STRB     R0,[R1, #+0]
   \        0x8   0x4770             BX       LR               ;; return
   \        0xA   0xBF00             Nop      
   \                     ??enable_globally_0:
   \        0xC   0x....'....        DC32     _ZN8Endstops7enabledE
   \       0x10   0x....'....        DC32     _ZN8Endstops16enabled_globallyE
    172          #include "planner.h"
    173          #include "temperature.h"

        target_temperature[HOTEND_INDEX] = celsius;
                                         ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\temperature.h",401  Warning[Pa093]: 
          implicit conversion from floating point to integer

        target_temperature_bed = celsius;
                               ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\temperature.h",408  Warning[Pa093]: 
          implicit conversion from floating point to integer
    174          #include "ultralcd.h"
    175          #include "cardreader.h"

  #define PSTR(str) (str)
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\arduino\avr\pgmspace.h",8  Warning[Pa181]: 
          incompatible redefinition of macro "PSTR" (declared at line 59 of
          "C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marl
          in\Marlin.h")

  #define strcpy_P(dest, src) strcpy((dest), (src))
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\arduino\avr\pgmspace.h",23  Warning[Pa181]: 
          incompatible redefinition of macro "strcpy_P" (declared at line 93 of
          "C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marl
          in\Marlin_export.h")

  #define strstr_P(a, b) strstr((a), (b))
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\arduino\avr\pgmspace.h",26  Warning[Pa181]: 
          incompatible redefinition of macro "strstr_P" (declared at line 94 of
          "C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marl
          in\Marlin_export.h")

  #define sprintf_P(s, f, ...) sprintf((s), (f), __VA_ARGS__)
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\arduino\avr\pgmspace.h",28  Warning[Pa181]: 
          incompatible redefinition of macro "sprintf_P" (declared at line 95
          of
          "C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marl
          in\Marlin_export.h")

  #define pgm_read_word_near(addr) pgm_read_word(addr)
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\arduino\avr\pgmspace.h",36  Warning[Pa181]: 
          incompatible redefinition of macro "pgm_read_word_near" (declared at
          line 65 of
          "C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marl
          in\Marlin_export.h")

  class SdFile : public SdBaseFile, public Print {
        ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\SdFile.h",45  Warning[Pe611]: 
          overloaded virtual function "Print::write" is only partially
          overridden in class "SdFile"

    FORCE_INLINE bool renameFile(const char * newPath){ file.rename(curDir, newPath);}
                                                                                     ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\cardreader.h",99  Warning[Pe940]: 
          missing return statement at end of non-void function
          "CardReader::renameFile"
    176          //#if ENABLED(MESH_BED_LEVELING)	/*--mks cfg-- MESH_BED_LEVELING */
    177          #if 1
    178            #include "mesh_bed_leveling.h"

   \                                 In section .text, align 4
   \   __interwork __softfp bool mesh_bed_leveling::has_mesh()
   \                     _ZN17mesh_bed_leveling8has_meshEv: (+1)
   \        0x0   0x4802             LDR.N    R0,??has_mesh_0
   \        0x2   0x7800             LDRB     R0,[R0, #+0]
   \        0x4   0xF000 0x0001      AND      R0,R0,#0x1
   \        0x8   0x4770             BX       LR               ;; return
   \        0xA   0xBF00             Nop      
   \                     ??has_mesh_0:
   \        0xC   0x....'....        DC32     _ZN17mesh_bed_leveling6statusE

        int8_t cx = (x - (MESH_MIN_X)) * (1.0 / (MESH_X_DIST));
                    ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\mesh_bed_leveling.h",85  Warning[Pa093]: 
          implicit conversion from floating point to integer

        int8_t cy = (y - (MESH_MIN_Y)) * (1.0 / (MESH_Y_DIST));
                    ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\mesh_bed_leveling.h",90  Warning[Pa093]: 
          implicit conversion from floating point to integer

        int8_t px = (x - (MESH_MIN_X) + 0.5 * (MESH_X_DIST)) * (1.0 / (MESH_X_DIST));
                    ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\mesh_bed_leveling.h",95  Warning[Pa093]: 
          implicit conversion from floating point to integer

        int8_t py = (y - (MESH_MIN_Y) + 0.5 * (MESH_Y_DIST)) * (1.0 / (MESH_Y_DIST));
                    ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\mesh_bed_leveling.h",100  Warning[Pa093]: 
          implicit conversion from floating point to integer
    179          #endif
    180          
    181          #if ENABLED(HAVE_TMC2130)
    182            #include "stepper_indirection.h"
    183          #endif
    184          
    185          //#if ENABLED(AUTO_BED_LEVELING_UBL)
    186          #if 1
    187            #include "ubl.h"

    #define MESH_X_DIST (float(UBL_MESH_MAX_X - (UBL_MESH_MIN_X)) / float(GRID_MAX_POINTS_X - 1))
            ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\ubl.h",93  Warning[Pa181]: 
          incompatible redefinition of macro "MESH_X_DIST" (declared at line 44
          of
          "C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marl
          in\mesh_bed_leveling.h")

    #define MESH_Y_DIST (float(UBL_MESH_MAX_Y - (UBL_MESH_MIN_Y)) / float(GRID_MAX_POINTS_Y - 1))
            ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\ubl.h",94  Warning[Pa181]: 
          incompatible redefinition of macro "MESH_Y_DIST" (declared at line 45
          of
          "C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marl
          in\mesh_bed_leveling.h")

          const int8_t cx = (x - (UBL_MESH_MIN_X)) * (1.0 / (MESH_X_DIST));
                            ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\ubl.h",180  Warning[Pa093]: 
          implicit conversion from floating point to integer

          const int8_t cy = (y - (UBL_MESH_MIN_Y)) * (1.0 / (MESH_Y_DIST));
                            ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\ubl.h",187  Warning[Pa093]: 
          implicit conversion from floating point to integer

          const int8_t px = (x - (UBL_MESH_MIN_X) + (MESH_X_DIST) * 0.5) * (1.0 / (MESH_X_DIST));
                            ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\ubl.h",195  Warning[Pa093]: 
          implicit conversion from floating point to integer

          const int8_t py = (y - (UBL_MESH_MIN_Y) + (MESH_Y_DIST) * 0.5) * (1.0 / (MESH_Y_DIST));
                            ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\ubl.h",200  Warning[Pa093]: 
          implicit conversion from floating point to integer
    188          #endif
    189          
    190          //#if ENABLED(AUTO_BED_LEVELING_BILINEAR)
    191          #if 1  /*--mks cfg-- AUTO_BED_LEVELING_BILINEAR */
    192          
    193            extern void refresh_bed_level();
    194          #endif
    195          
    196          /**
    197           * Post-process after Retrieve or Reset
    198           */

   \                                 In section .text, align 2, keep-with-next
    199          void MarlinSettings::postprocess() {
   \                     _ZN14MarlinSettings11postprocessEv: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    200            // steps per s2 needs to be updated to agree with units per s2
    201            planner.reset_acceleration_rates();
   \        0x2   0x.... 0x....      BL       _ZN7Planner24reset_acceleration_ratesEv
    202          
    203            // Make sure delta kinematics are updated before refreshing the
    204            // planner position so the stepper counts will be set correctly.
    205          //  #if ENABLED(DELTA)	//mks_delta
    206            if(MACHINETPYE == DELTA)
   \        0x6   0x.... 0x....      LDR.W    R4,??DataTable93
   \        0xA   0xF9B4 0x0024      LDRSH    R0,[R4, #+36]
   \        0xE   0x2802             CMP      R0,#+2
   \       0x10   0xD107             BNE.N    ??postprocess_0
    207              recalc_delta_settings(delta_radius, delta_diagonal_rod);
   \       0x12   0x.... 0x....      LDR.W    R0,??DataTable93_1
   \       0x16   0x6801             LDR      R1,[R0, #+0]
   \       0x18   0x.... 0x....      LDR.W    R0,??DataTable93_2
   \       0x1C   0x6800             LDR      R0,[R0, #+0]
   \       0x1E   0x.... 0x....      BL       _Z21recalc_delta_settingsff
    208            //#endif
    209          
    210            // Refresh steps_to_mm with the reciprocal of axis_steps_per_mm
    211            // and init stepper.count[], planner.position[] with current_position
    212            planner.refresh_positioning();
   \                     ??postprocess_0: (+1)
   \       0x22   0x.... 0x....      BL       _ZN7Planner19refresh_positioningEv
    213          
    214          //  #if ENABLED(PIDTEMP)	/*--mks cfg--*/
    215          	if(PIDTEMP){
   \       0x26   0x7820             LDRB     R0,[R4, #+0]
   \       0x28   0x2800             CMP      R0,#+0
   \       0x2A   0xD001             BEQ.N    ??postprocess_1
    216              thermalManager.updatePID();
   \       0x2C   0x.... 0x....      BL       _ZN11Temperature9updatePIDEv
    217            }//#endif
    218          
    219            calculate_volumetric_multipliers();
   \                     ??postprocess_1: (+1)
   \       0x30   0x.... 0x....      BL       _Z32calculate_volumetric_multipliersv
    220          
    221            #if HAS_HOME_OFFSET || ENABLED(DUAL_X_CARRIAGE)
    222              // Software endstops depend on home_offset
    223              LOOP_XYZ(i) update_software_endstops((AxisEnum)i);
   \       0x34   0x2500             MOVS     R5,#+0
   \       0x36   0xE004             B.N      ??postprocess_2
   \                     ??postprocess_3: (+1)
   \       0x38   0x4628             MOV      R0,R5
   \       0x3A   0xB240             SXTB     R0,R0
   \       0x3C   0x.... 0x....      BL       _Z24update_software_endstops8AxisEnum
   \       0x40   0x1C6D             ADDS     R5,R5,#+1
   \                     ??postprocess_2: (+1)
   \       0x42   0x4628             MOV      R0,R5
   \       0x44   0xB2C0             UXTB     R0,R0
   \       0x46   0x2803             CMP      R0,#+3
   \       0x48   0xDBF6             BLT.N    ??postprocess_3
    224            #endif
    225          
    226            //#if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
    227            if((MACHINETPYE != DELTA) && (BED_LEVELING_METHOD&HAS_FADE))	//mks_delta
   \       0x4A   0xF9B4 0x0024      LDRSH    R0,[R4, #+36]
   \       0x4E   0x2802             CMP      R0,#+2
   \       0x50   0xD007             BEQ.N    ??postprocess_4
   \       0x52   0x7B20             LDRB     R0,[R4, #+12]
   \       0x54   0x06C0             LSLS     R0,R0,#+27
   \       0x56   0xD504             BPL.N    ??postprocess_4
    228              set_z_fade_height(planner.z_fade_height);
   \       0x58   0x.... 0x....      LDR.W    R0,??DataTable93_3
   \       0x5C   0x6800             LDR      R0,[R0, #+0]
   \       0x5E   0x.... 0x....      BL       _Z17set_z_fade_heightf
    229            //#endif
    230          
    231            #if HAS_BED_PROBE
    232              refresh_zprobe_zoffset();
   \                     ??postprocess_4: (+1)
   \       0x62   0x2000             MOVS     R0,#+0
   \       0x64   0x.... 0x....      BL       _Z22refresh_zprobe_zoffsetb
    233            #endif
    234          
    235          //  #if ENABLED(AUTO_BED_LEVELING_BILINEAR)
    236          #if 1 /*--mks cfg-- AUTO_BED_LEVELING_BILINEAR */
    237              refresh_bed_level();
   \       0x68   0xE8BD 0x4031      POP      {R0,R4,R5,LR}
   \       0x6C   0x.... 0x....      B.W      _Z17refresh_bed_levelv
    238              //set_bed_leveling_enabled(leveling_is_on);
    239            #endif
    240          }
    241          
    242          #if ENABLED(EEPROM_SETTINGS)
    243          

   \                                 In section .text, align 4, keep-with-next
    244            const char version[4] = EEPROM_VERSION;
   \                     version:
   \        0x0   0x56 0x33          DC8 "V37"
   \              0x37 0x00    
    245          

   \                                 In section .bss, align 2
    246            uint16_t MarlinSettings::eeprom_checksum;
    247          
    248            bool MarlinSettings::eeprom_write_error,
   \                     _ZN14MarlinSettings18eeprom_write_errorE:
   \        0x0                      DS8 1
    249                 MarlinSettings::eeprom_read_error;
   \                     _ZN14MarlinSettings17eeprom_read_errorE:
   \        0x1                      DS8 1
   \                     _ZN14MarlinSettings15eeprom_checksumE:
   \        0x2                      DS8 2
    250          

   \                                 In section .text, align 2, keep-with-next
    251            void MarlinSettings::write_data(int &pos, const uint8_t* value, uint16_t size) {
   \                     _ZN14MarlinSettings10write_dataERiPKht: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x4605             MOV      R5,R0
   \        0x4   0x460E             MOV      R6,R1
   \        0x6   0x4617             MOV      R7,R2
    252              if (eeprom_write_error) return;
   \        0x8   0x.... 0x....      LDR.W    R4,??DataTable93_4
   \        0xC   0x7820             LDRB     R0,[R4, #+0]
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD009             BEQ.N    ??write_data_0
   \       0x12   0xBDF1             POP      {R0,R4-R7,PC}
    253              while (size--) {
    254                //uint8_t * const p = (uint8_t * const)pos;       /*--mks--*/
    255                const uint8_t v = *value;
    256                uint8_t eppr_r;
    257                // EEPROM has only ~100,000 write cycles,
    258                // so only write bytes that have changed!
    259              //  if (v != eeprom_read_byte(p)) {
    260              //    eeprom_write_byte(p, v);
    261          	  
    262                AT24CXX_Read((uint16_t)pos,&eppr_r,1);
    263                
    264                if (v != eppr_r) {		/*--mks--*/
    265                  AT24CXX_Write((uint16_t)pos, (uint8_t *)&v,1);
    266          	
    267                  AT24CXX_Read((uint16_t)pos,&eppr_r,1);
    268                  if (eppr_r != v) {
    269                    SERIAL_ECHO_START;
    270                    SERIAL_ECHOLNPGM(MSG_ERR_EEPROM_WRITE);
    271                    eeprom_write_error = true;
    272                    return;
    273                  }
    274                }
    275                eeprom_checksum += v;
   \                     ??write_data_1: (+1)
   \       0x14   0x8860             LDRH     R0,[R4, #+2]
   \       0x16   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \       0x1A   0x1808             ADDS     R0,R1,R0
   \       0x1C   0x8060             STRH     R0,[R4, #+2]
    276                pos++;
   \       0x1E   0x6828             LDR      R0,[R5, #+0]
   \       0x20   0x1C40             ADDS     R0,R0,#+1
   \       0x22   0x6028             STR      R0,[R5, #+0]
    277                value++;
   \       0x24   0x1C76             ADDS     R6,R6,#+1
   \                     ??write_data_0: (+1)
   \       0x26   0x4638             MOV      R0,R7
   \       0x28   0x1E47             SUBS     R7,R0,#+1
   \       0x2A   0xB280             UXTH     R0,R0
   \       0x2C   0x2800             CMP      R0,#+0
   \       0x2E   0xD02C             BEQ.N    ??write_data_2
   \       0x30   0x7830             LDRB     R0,[R6, #+0]
   \       0x32   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \       0x36   0x2201             MOVS     R2,#+1
   \       0x38   0xF10D 0x0101      ADD      R1,SP,#+1
   \       0x3C   0x6828             LDR      R0,[R5, #+0]
   \       0x3E   0xB280             UXTH     R0,R0
   \       0x40   0x.... 0x....      BL       AT24CXX_Read
   \       0x44   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x48   0xF89D 0x1001      LDRB     R1,[SP, #+1]
   \       0x4C   0x4288             CMP      R0,R1
   \       0x4E   0xD0E1             BEQ.N    ??write_data_1
   \       0x50   0x2201             MOVS     R2,#+1
   \       0x52   0x4669             MOV      R1,SP
   \       0x54   0x6828             LDR      R0,[R5, #+0]
   \       0x56   0xB280             UXTH     R0,R0
   \       0x58   0x.... 0x....      BL       AT24CXX_Write
   \       0x5C   0x2201             MOVS     R2,#+1
   \       0x5E   0xF10D 0x0101      ADD      R1,SP,#+1
   \       0x62   0x6828             LDR      R0,[R5, #+0]
   \       0x64   0xB280             UXTH     R0,R0
   \       0x66   0x.... 0x....      BL       AT24CXX_Read
   \       0x6A   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \       0x6E   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \       0x72   0x4288             CMP      R0,R1
   \       0x74   0xD0CE             BEQ.N    ??write_data_1
   \       0x76   0x.... 0x....      LDR.W    R0,??DataTable93_5
   \       0x7A   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \       0x7E   0x.... 0x....      ADR.W    R0,?_81
   \       0x82   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \       0x86   0x2001             MOVS     R0,#+1
   \       0x88   0x7020             STRB     R0,[R4, #+0]
    278              };
    279            }
   \                     ??write_data_2: (+1)
   \       0x8A   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
    280            void MarlinSettings::read_data(int &pos, uint8_t* value, uint16_t size) {
   \                     _ZN14MarlinSettings9read_dataERiPht: (+1)
   \        0x0   0xB57C             PUSH     {R2-R6,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
   \        0x6   0x4616             MOV      R6,R2
    281              do {
    282                //uint8_t c = eeprom_read_byte((unsigned char*)pos);	/*--mks--*/
    283                uint8_t c;
    284                AT24CXX_Read((uint16_t)pos,&c,1);
   \                     ??read_data_0: (+1)
   \        0x8   0x2201             MOVS     R2,#+1
   \        0xA   0x4669             MOV      R1,SP
   \        0xC   0x6820             LDR      R0,[R4, #+0]
   \        0xE   0xB280             UXTH     R0,R0
   \       0x10   0x.... 0x....      BL       AT24CXX_Read
    285                
    286                if (!eeprom_read_error) *value = c;
   \       0x14   0x.... 0x....      LDR.W    R1,??DataTable93_4
   \       0x18   0x7848             LDRB     R0,[R1, #+1]
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD102             BNE.N    ??read_data_1
   \       0x1E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x22   0x7028             STRB     R0,[R5, #+0]
    287                eeprom_checksum += c;
   \                     ??read_data_1: (+1)
   \       0x24   0x8848             LDRH     R0,[R1, #+2]
   \       0x26   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \       0x2A   0x1810             ADDS     R0,R2,R0
   \       0x2C   0x8048             STRH     R0,[R1, #+2]
    288                pos++;
   \       0x2E   0x6820             LDR      R0,[R4, #+0]
   \       0x30   0x1C40             ADDS     R0,R0,#+1
   \       0x32   0x6020             STR      R0,[R4, #+0]
    289                value++;
   \       0x34   0x1C6D             ADDS     R5,R5,#+1
    290              } while (--size);
   \       0x36   0x1E76             SUBS     R6,R6,#+1
   \       0x38   0x4630             MOV      R0,R6
   \       0x3A   0xB280             UXTH     R0,R0
   \       0x3C   0x2800             CMP      R0,#+0
   \       0x3E   0xD1E3             BNE.N    ??read_data_0
    291            }
   \       0x40   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    292          
    293            #define DUMMY_PID_VALUE 3000.0f
    294            #define EEPROM_START() int eeprom_index = EEPROM_OFFSET
    295            #define EEPROM_SKIP(VAR) eeprom_index += sizeof(VAR)
    296            #define EEPROM_WRITE(VAR) write_data(eeprom_index, (uint8_t*)&VAR, sizeof(VAR))
    297            #define EEPROM_READ(VAR) read_data(eeprom_index, (uint8_t*)&VAR, sizeof(VAR))
    298            #define EEPROM_ASSERT(TST,ERR) if (!(TST)) do{ SERIAL_ERROR_START; SERIAL_ERRORLNPGM(ERR); eeprom_read_error = true; }while(0)
    299          
    300            /**
    301             * M500 - Store Configuration
    302             */

   \                                 In section .text, align 2, keep-with-next
    303            bool MarlinSettings::save() {
   \                     _ZN14MarlinSettings4saveEv: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0xB088             SUB      SP,SP,#+32
    304              float dummy = 0.0f;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9002             STR      R0,[SP, #+8]
    305              char ver[4] = "000";
   \        0xA   0xA804             ADD      R0,SP,#+16
   \        0xC   0x.... 0x....      ADR.W    R1,?_1
   \       0x10   0x680A             LDR      R2,[R1, #+0]
   \       0x12   0x6002             STR      R2,[R0, #+0]
    306          
    307              EEPROM_START();
   \       0x14   0x2000             MOVS     R0,#+0
   \       0x16   0x9001             STR      R0,[SP, #+4]
    308          
    309              eeprom_write_error = false;
   \       0x18   0x.... 0x....      LDR.W    R4,??DataTable93_4
   \       0x1C   0x7020             STRB     R0,[R4, #+0]
    310          
    311              EEPROM_WRITE(ver);     // invalidate data first
   \       0x1E   0x2204             MOVS     R2,#+4
   \       0x20   0xA904             ADD      R1,SP,#+16
   \       0x22   0xA801             ADD      R0,SP,#+4
   \       0x24   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    312              EEPROM_SKIP(eeprom_checksum); // Skip the checksum slot
   \       0x28   0x9801             LDR      R0,[SP, #+4]
   \       0x2A   0x1C80             ADDS     R0,R0,#+2
   \       0x2C   0x9001             STR      R0,[SP, #+4]
    313          
    314              eeprom_checksum = 0; // clear before first "real data"
   \       0x2E   0x2000             MOVS     R0,#+0
   \       0x30   0x8060             STRH     R0,[R4, #+2]
    315          
    316              const uint8_t esteppers = COUNT(planner.axis_steps_per_mm) - XYZ;
   \       0x32   0x2001             MOVS     R0,#+1
   \       0x34   0xF88D 0x0000      STRB     R0,[SP, #+0]
    317              EEPROM_WRITE(esteppers);
   \       0x38   0x4602             MOV      R2,R0
   \       0x3A   0x4669             MOV      R1,SP
   \       0x3C   0xA801             ADD      R0,SP,#+4
   \       0x3E   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    318          
    319              EEPROM_WRITE(planner.axis_steps_per_mm);
   \       0x42   0x2210             MOVS     R2,#+16
   \       0x44   0x.... 0x....      LDR.W    R1,??DataTable93_6
   \       0x48   0xA801             ADD      R0,SP,#+4
   \       0x4A   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    320              EEPROM_WRITE(planner.max_feedrate_mm_s);
   \       0x4E   0x2210             MOVS     R2,#+16
   \       0x50   0x.... 0x....      LDR.W    R1,??DataTable93_7
   \       0x54   0xA801             ADD      R0,SP,#+4
   \       0x56   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    321              EEPROM_WRITE(planner.max_acceleration_mm_per_s2);
   \       0x5A   0x2210             MOVS     R2,#+16
   \       0x5C   0x.... 0x....      LDR.W    R1,??DataTable93_8
   \       0x60   0xA801             ADD      R0,SP,#+4
   \       0x62   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    322          
    323              EEPROM_WRITE(planner.acceleration);
   \       0x66   0x2204             MOVS     R2,#+4
   \       0x68   0x.... 0x....      LDR.W    R1,??DataTable93_9
   \       0x6C   0xA801             ADD      R0,SP,#+4
   \       0x6E   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    324              EEPROM_WRITE(planner.retract_acceleration);
   \       0x72   0x2204             MOVS     R2,#+4
   \       0x74   0x.... 0x....      LDR.W    R1,??DataTable93_10
   \       0x78   0xA801             ADD      R0,SP,#+4
   \       0x7A   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    325              EEPROM_WRITE(planner.travel_acceleration);
   \       0x7E   0x2204             MOVS     R2,#+4
   \       0x80   0x.... 0x....      LDR.W    R1,??DataTable93_11
   \       0x84   0xA801             ADD      R0,SP,#+4
   \       0x86   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    326              EEPROM_WRITE(planner.min_feedrate_mm_s);
   \       0x8A   0x2204             MOVS     R2,#+4
   \       0x8C   0x.... 0x....      LDR.W    R1,??DataTable93_12
   \       0x90   0xA801             ADD      R0,SP,#+4
   \       0x92   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    327              EEPROM_WRITE(planner.min_travel_feedrate_mm_s);
   \       0x96   0x2204             MOVS     R2,#+4
   \       0x98   0x.... 0x....      LDR.W    R1,??DataTable93_13
   \       0x9C   0xA801             ADD      R0,SP,#+4
   \       0x9E   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    328              EEPROM_WRITE(planner.min_segment_time);
   \       0xA2   0x2204             MOVS     R2,#+4
   \       0xA4   0x.... 0x....      LDR.W    R1,??DataTable93_14
   \       0xA8   0xA801             ADD      R0,SP,#+4
   \       0xAA   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    329              EEPROM_WRITE(planner.max_jerk);
   \       0xAE   0x2210             MOVS     R2,#+16
   \       0xB0   0x.... 0x....      LDR.W    R1,??DataTable93_15
   \       0xB4   0xA801             ADD      R0,SP,#+4
   \       0xB6   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    330              #if !HAS_HOME_OFFSET
    331                const float home_offset[XYZ] = { 0 };
    332              #endif
    333              //#if ENABLED(DELTA)
    334          	if(MACHINETPYE == DELTA) {
   \       0xBA   0x.... 0x....      LDR.W    R8,??DataTable93_16
   \       0xBE   0xF108 0x0534      ADD      R5,R8,#+52
   \       0xC2   0x.... 0x....      LDR.W    R6,??DataTable93_17
   \       0xC6   0xF9B5 0x0024      LDRSH    R0,[R5, #+36]
   \       0xCA   0x2802             CMP      R0,#+2
   \       0xCC   0xD116             BNE.N    ??save_0
    335                dummy = 0.0;
   \       0xCE   0x2000             MOVS     R0,#+0
   \       0xD0   0x9002             STR      R0,[SP, #+8]
    336                EEPROM_WRITE(dummy);
   \       0xD2   0x2204             MOVS     R2,#+4
   \       0xD4   0xA902             ADD      R1,SP,#+8
   \       0xD6   0xA801             ADD      R0,SP,#+4
   \       0xD8   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    337                EEPROM_WRITE(dummy);
   \       0xDC   0x2204             MOVS     R2,#+4
   \       0xDE   0xA902             ADD      R1,SP,#+8
   \       0xE0   0xA801             ADD      R0,SP,#+4
   \       0xE2   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    338                dummy = DELTA_HEIGHT + home_offset[Z_AXIS];
   \       0xE6   0x69E8             LDR      R0,[R5, #+28]
   \       0xE8   0x68B1             LDR      R1,[R6, #+8]
   \       0xEA   0x.... 0x....      BL       __aeabi_fadd
   \       0xEE   0x9002             STR      R0,[SP, #+8]
    339                EEPROM_WRITE(dummy); }
   \       0xF0   0x2204             MOVS     R2,#+4
   \       0xF2   0xA902             ADD      R1,SP,#+8
   \       0xF4   0xA801             ADD      R0,SP,#+4
   \       0xF6   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \       0xFA   0xE004             B.N      ??save_1
    340              //#else
    341              else
    342                EEPROM_WRITE(home_offset);
   \                     ??save_0: (+1)
   \       0xFC   0x220C             MOVS     R2,#+12
   \       0xFE   0x4631             MOV      R1,R6
   \      0x100   0xA801             ADD      R0,SP,#+4
   \      0x102   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    343              //#endif
    344          
    345              #if HOTENDS > 1
    346                // Skip hotend 0 which must be 0
    347                for (uint8_t e = 1; e < HOTENDS; e++)
    348                  LOOP_XYZ(i) EEPROM_WRITE(hotend_offset[i][e]);
    349              #endif
    350          
    351              //
    352              // Global Leveling
    353              //
    354          /*
    355              #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
    356                const float zfh = planner.z_fade_height;
    357              #else
    358                const float zfh = 10.0;
    359              #endif	*/
    360          	
    361          	
    362          //#if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
    363          	  float zfh;
    364          	  if((MACHINETPYE != DELTA) && (BED_LEVELING_METHOD&HAS_FADE))	  //mks_delta
   \                     ??save_1: (+1)
   \      0x106   0xF9B5 0x0024      LDRSH    R0,[R5, #+36]
   \      0x10A   0x2802             CMP      R0,#+2
   \      0x10C   0xD007             BEQ.N    ??save_2
   \      0x10E   0x7B28             LDRB     R0,[R5, #+12]
   \      0x110   0x06C0             LSLS     R0,R0,#+27
   \      0x112   0xD504             BPL.N    ??save_2
    365          	     zfh = planner.z_fade_height;
   \      0x114   0x.... 0x....      LDR.W    R0,??DataTable93_3
   \      0x118   0x6800             LDR      R0,[R0, #+0]
   \      0x11A   0x9003             STR      R0,[SP, #+12]
   \      0x11C   0xE002             B.N      ??save_3
    366          	  else
    367          	  	zfh = 10.0;
   \                     ??save_2: (+1)
   \      0x11E   0x.... 0x....      LDR.W    R0,??DataTable93_18  ;; 0x41200000
   \      0x122   0x9003             STR      R0,[SP, #+12]
    368          //#else
    369          //      const float zfh = 10.0;
    370          //#endif	*/
    371          	
    372              EEPROM_WRITE(zfh);
   \                     ??save_3: (+1)
   \      0x124   0x2204             MOVS     R2,#+4
   \      0x126   0xA903             ADD      R1,SP,#+12
   \      0x128   0xA801             ADD      R0,SP,#+4
   \      0x12A   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    373          
    374              //
    375              // Mesh Bed Leveling
    376              //
    377          	/*--mks cfg-- MESH_BED_LEVELING */
    378              //#if ENABLED(MESH_BED_LEVELING)		
    379          	if(BED_LEVELING_METHOD == MESH_BED_LEVELING)
   \      0x12E   0x7B28             LDRB     R0,[R5, #+12]
   \      0x130   0x2820             CMP      R0,#+32
   \      0x132   0xD12E             BNE.N    ??save_4
    380          		{
    381                // Compile time test that sizeof(mbl.z_values) is as expected
    382                static_assert(
    383                  //sizeof(mbl.z_values) == (GRID_MAX_POINTS_X) * (GRID_MAX_POINTS_Y) * sizeof(mbl.z_values[0][0]),
    384                   sizeof(mbl.z_values) == (GRID_MAX_POINTS_X_MAX) * (GRID_MAX_POINTS_Y_MAX) * sizeof(mbl.z_values[0][0]),
    385                  "MBL Z array is the wrong size."
    386                );
    387                const bool leveling_is_on = TEST(mbl.status, MBL_STATUS_HAS_MESH_BIT);
   \      0x134   0x.... 0x....      LDR.W    R0,??DataTable93_19
   \      0x138   0x7800             LDRB     R0,[R0, #+0]
   \      0x13A   0xF000 0x0001      AND      R0,R0,#0x1
   \      0x13E   0xF88D 0x0003      STRB     R0,[SP, #+3]
    388                const uint8_t mesh_num_x = GRID_MAX_POINTS_X, mesh_num_y = GRID_MAX_POINTS_Y;
   \      0x142   0xF108 0x0060      ADD      R0,R8,#+96
   \      0x146   0x7801             LDRB     R1,[R0, #+0]
   \      0x148   0xF88D 0x1002      STRB     R1,[SP, #+2]
   \      0x14C   0x7840             LDRB     R0,[R0, #+1]
   \      0x14E   0xF88D 0x0001      STRB     R0,[SP, #+1]
    389                EEPROM_WRITE(leveling_is_on);
   \      0x152   0x2201             MOVS     R2,#+1
   \      0x154   0xF10D 0x0103      ADD      R1,SP,#+3
   \      0x158   0xA801             ADD      R0,SP,#+4
   \      0x15A   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    390                EEPROM_WRITE(mbl.z_offset);
   \      0x15E   0x2204             MOVS     R2,#+4
   \      0x160   0x.... 0x....      LDR.W    R1,??DataTable93_20
   \      0x164   0xA801             ADD      R0,SP,#+4
   \      0x166   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    391                EEPROM_WRITE(mesh_num_x);
   \      0x16A   0x2201             MOVS     R2,#+1
   \      0x16C   0xF10D 0x0102      ADD      R1,SP,#+2
   \      0x170   0xA801             ADD      R0,SP,#+4
   \      0x172   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    392                EEPROM_WRITE(mesh_num_y);
   \      0x176   0x2201             MOVS     R2,#+1
   \      0x178   0xF10D 0x0101      ADD      R1,SP,#+1
   \      0x17C   0xA801             ADD      R0,SP,#+4
   \      0x17E   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    393                EEPROM_WRITE(mbl.z_values);
   \      0x182   0xF44F 0x6280      MOV      R2,#+1024
   \      0x186   0x.... 0x....      LDR.W    R1,??DataTable94
   \      0x18A   0xA801             ADD      R0,SP,#+4
   \      0x18C   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \      0x190   0xE02B             B.N      ??save_5
    394              }else{//#else // For disabled MBL write a default mesh
    395                const bool leveling_is_on = false;
   \                     ??save_4: (+1)
   \      0x192   0x2000             MOVS     R0,#+0
   \      0x194   0xF88D 0x0003      STRB     R0,[SP, #+3]
    396                dummy = 0.0f;
   \      0x198   0x9002             STR      R0,[SP, #+8]
    397                const uint8_t mesh_num_x = 3, mesh_num_y = 3;
   \      0x19A   0x2003             MOVS     R0,#+3
   \      0x19C   0xF88D 0x0002      STRB     R0,[SP, #+2]
   \      0x1A0   0xF88D 0x0001      STRB     R0,[SP, #+1]
    398                EEPROM_WRITE(leveling_is_on);
   \      0x1A4   0x2201             MOVS     R2,#+1
   \      0x1A6   0xF10D 0x0103      ADD      R1,SP,#+3
   \      0x1AA   0xA801             ADD      R0,SP,#+4
   \      0x1AC   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    399                EEPROM_WRITE(dummy); // z_offset
   \      0x1B0   0x2204             MOVS     R2,#+4
   \      0x1B2   0xA902             ADD      R1,SP,#+8
   \      0x1B4   0xA801             ADD      R0,SP,#+4
   \      0x1B6   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    400                EEPROM_WRITE(mesh_num_x);
   \      0x1BA   0x2201             MOVS     R2,#+1
   \      0x1BC   0xF10D 0x0102      ADD      R1,SP,#+2
   \      0x1C0   0xA801             ADD      R0,SP,#+4
   \      0x1C2   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    401                EEPROM_WRITE(mesh_num_y);
   \      0x1C6   0x2201             MOVS     R2,#+1
   \      0x1C8   0xF10D 0x0101      ADD      R1,SP,#+1
   \      0x1CC   0xA801             ADD      R0,SP,#+4
   \      0x1CE   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    402                for (uint8_t q = mesh_num_x * mesh_num_y; q--;) EEPROM_WRITE(dummy);
   \      0x1D2   0x2609             MOVS     R6,#+9
   \      0x1D4   0xE004             B.N      ??save_6
   \                     ??save_7: (+1)
   \      0x1D6   0x2204             MOVS     R2,#+4
   \      0x1D8   0xA902             ADD      R1,SP,#+8
   \      0x1DA   0xA801             ADD      R0,SP,#+4
   \      0x1DC   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \                     ??save_6: (+1)
   \      0x1E0   0x4630             MOV      R0,R6
   \      0x1E2   0x1E46             SUBS     R6,R0,#+1
   \      0x1E4   0xB2C0             UXTB     R0,R0
   \      0x1E6   0x2800             CMP      R0,#+0
   \      0x1E8   0xD1F5             BNE.N    ??save_7
    403              }//#endif // MESH_BED_LEVELING
    404          
    405          
    406              #if !HAS_BED_PROBE
    407                const float zprobe_zoffset = 0;
    408              #endif
    409              EEPROM_WRITE(zprobe_zoffset);
   \                     ??save_5: (+1)
   \      0x1EA   0x2204             MOVS     R2,#+4
   \      0x1EC   0x.... 0x....      LDR.W    R1,??DataTable94_1
   \      0x1F0   0xA801             ADD      R0,SP,#+4
   \      0x1F2   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    410          
    411              //
    412              // Planar Bed Leveling matrix
    413              //
    414          
    415              //#if ABL_PLANAR
    416          	if(BED_LEVELING_METHOD&ABL_PLANAR)
   \      0x1F6   0x7B28             LDRB     R0,[R5, #+12]
   \      0x1F8   0xF010 0x0F06      TST      R0,#0x6
   \      0x1FC   0xD006             BEQ.N    ??save_8
    417                EEPROM_WRITE(planner.bed_level_matrix);
   \      0x1FE   0x2224             MOVS     R2,#+36
   \      0x200   0x.... 0x....      LDR.W    R1,??DataTable94_2
   \      0x204   0xA801             ADD      R0,SP,#+4
   \      0x206   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \      0x20A   0xE00D             B.N      ??save_9
    418              //#else
    419          	else
    420                  {
    421                dummy = 0.0;
   \                     ??save_8: (+1)
   \      0x20C   0x2000             MOVS     R0,#+0
   \      0x20E   0x9002             STR      R0,[SP, #+8]
    422                for (uint8_t q = 9; q--;) EEPROM_WRITE(dummy);
   \      0x210   0x2609             MOVS     R6,#+9
   \      0x212   0xE004             B.N      ??save_10
   \                     ??save_11: (+1)
   \      0x214   0x2204             MOVS     R2,#+4
   \      0x216   0xA902             ADD      R1,SP,#+8
   \      0x218   0xA801             ADD      R0,SP,#+4
   \      0x21A   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \                     ??save_10: (+1)
   \      0x21E   0x4630             MOV      R0,R6
   \      0x220   0x1E46             SUBS     R6,R0,#+1
   \      0x222   0xB2C0             UXTB     R0,R0
   \      0x224   0x2800             CMP      R0,#+0
   \      0x226   0xD1F5             BNE.N    ??save_11
    423                  }
    424             // #endif
    425          
    426              //
    427              // Bilinear Auto Bed Leveling
    428              //
    429          	/*--mks cfg--begin AUTO_BED_LEVELING_BILINEAR */
    430          /*
    431              #if ENABLED(AUTO_BED_LEVELING_BILINEAR)
    432                // Compile time test that sizeof(z_values) is as expected
    433                static_assert(
    434                  sizeof(z_values) == (GRID_MAX_POINTS_X) * (GRID_MAX_POINTS_Y) * sizeof(z_values[0][0]),
    435                  "Bilinear Z array is the wrong size."
    436                );
    437                const uint8_t grid_max_x = GRID_MAX_POINTS_X, grid_max_y = GRID_MAX_POINTS_Y;
    438                EEPROM_WRITE(grid_max_x);            // 1 byte
    439                EEPROM_WRITE(grid_max_y);            // 1 byte
    440                EEPROM_WRITE(bilinear_grid_spacing); // 2 ints
    441                EEPROM_WRITE(bilinear_start);        // 2 ints
    442                EEPROM_WRITE(z_values);              // 9-256 floats
    443              #else
    444                // For disabled Bilinear Grid write an empty 3x3 grid
    445                const uint8_t grid_max_x = 3, grid_max_y = 3;
    446                const int bilinear_start[2] = { 0 }, bilinear_grid_spacing[2] = { 0 };	 //int to int16_t
    447                dummy = 0.0f;
    448                EEPROM_WRITE(grid_max_x);
    449                EEPROM_WRITE(grid_max_y);
    450                EEPROM_WRITE(bilinear_grid_spacing);
    451                EEPROM_WRITE(bilinear_start);
    452                for (uint16_t q = grid_max_x * grid_max_y; q--;) EEPROM_WRITE(dummy);
    453              #endif // AUTO_BED_LEVELING_BILINEAR
    454          */
    455          	 uint8_t grid_max_x, grid_max_y;
    456          
    457          	if(BED_LEVELING_METHOD == AUTO_BED_LEVELING_BILINEAR)
   \                     ??save_9: (+1)
   \      0x228   0x.... 0x....      LDR.W    R6,??DataTable94_3
   \      0x22C   0x.... 0x....      LDR.W    R7,??DataTable94_4
   \      0x230   0x7B28             LDRB     R0,[R5, #+12]
   \      0x232   0x2808             CMP      R0,#+8
   \      0x234   0xD125             BNE.N    ??save_12
    458          		{
    459          		static_assert(
    460          		  //sizeof(z_values) == (GRID_MAX_POINTS_X) * (GRID_MAX_POINTS_Y) * sizeof(z_values[0][0]),
    461                              sizeof(z_values) == (GRID_MAX_POINTS_X_MAX) * (GRID_MAX_POINTS_Y_MAX) * sizeof(z_values[0][0]),
    462          		  "Bilinear Z array is the wrong size."
    463          		);
    464          		 grid_max_x = GRID_MAX_POINTS_X;
   \      0x236   0xF108 0x0060      ADD      R0,R8,#+96
   \      0x23A   0x7801             LDRB     R1,[R0, #+0]
   \      0x23C   0xF88D 0x1002      STRB     R1,[SP, #+2]
    465          		 grid_max_y = GRID_MAX_POINTS_Y;
   \      0x240   0x7840             LDRB     R0,[R0, #+1]
   \      0x242   0xF88D 0x0001      STRB     R0,[SP, #+1]
    466          		EEPROM_WRITE(grid_max_x);			 // 1 byte
   \      0x246   0x2201             MOVS     R2,#+1
   \      0x248   0xF10D 0x0102      ADD      R1,SP,#+2
   \      0x24C   0xA801             ADD      R0,SP,#+4
   \      0x24E   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    467          		EEPROM_WRITE(grid_max_y);			 // 1 byte
   \      0x252   0x2201             MOVS     R2,#+1
   \      0x254   0xF10D 0x0101      ADD      R1,SP,#+1
   \      0x258   0xA801             ADD      R0,SP,#+4
   \      0x25A   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    468          		EEPROM_WRITE(bilinear_grid_spacing); // 2 ints
   \      0x25E   0x2208             MOVS     R2,#+8
   \      0x260   0x4639             MOV      R1,R7
   \      0x262   0xA801             ADD      R0,SP,#+4
   \      0x264   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    469          		EEPROM_WRITE(bilinear_start);		 // 2 ints
   \      0x268   0x2208             MOVS     R2,#+8
   \      0x26A   0x4631             MOV      R1,R6
   \      0x26C   0xA801             ADD      R0,SP,#+4
   \      0x26E   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    470          		EEPROM_WRITE(z_values); 			 // 9-256 floats
   \      0x272   0xF44F 0x6280      MOV      R2,#+1024
   \      0x276   0x.... 0x....      LDR.W    R1,??DataTable94_5
   \      0x27A   0xA801             ADD      R0,SP,#+4
   \      0x27C   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \      0x280   0xE02E             B.N      ??save_13
    471          		}
    472          		else
    473          			{
    474          			grid_max_x = 3, grid_max_y = 3;
   \                     ??save_12: (+1)
   \      0x282   0x2003             MOVS     R0,#+3
   \      0x284   0xF88D 0x0002      STRB     R0,[SP, #+2]
   \      0x288   0xF88D 0x0001      STRB     R0,[SP, #+1]
    475          			//const int bilinear_start[2] = { 0 }, bilinear_grid_spacing[2] = { 0 };	  /*---mks---*/ //int to int16_t
    476          			bilinear_start[0] = bilinear_start[1] = 0;
   \      0x28C   0x2000             MOVS     R0,#+0
   \      0x28E   0x6070             STR      R0,[R6, #+4]
   \      0x290   0x6030             STR      R0,[R6, #+0]
    477          			bilinear_start[0] = bilinear_start[1] =0;
    478          			dummy = 0.0f;
   \      0x292   0x9002             STR      R0,[SP, #+8]
    479          			EEPROM_WRITE(grid_max_x);
   \      0x294   0x2201             MOVS     R2,#+1
   \      0x296   0xF10D 0x0102      ADD      R1,SP,#+2
   \      0x29A   0xA801             ADD      R0,SP,#+4
   \      0x29C   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    480          			EEPROM_WRITE(grid_max_y);
   \      0x2A0   0x2201             MOVS     R2,#+1
   \      0x2A2   0xF10D 0x0101      ADD      R1,SP,#+1
   \      0x2A6   0xA801             ADD      R0,SP,#+4
   \      0x2A8   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    481          			EEPROM_WRITE(bilinear_start);
   \      0x2AC   0x2208             MOVS     R2,#+8
   \      0x2AE   0x4631             MOV      R1,R6
   \      0x2B0   0xA801             ADD      R0,SP,#+4
   \      0x2B2   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    482          			EEPROM_WRITE(bilinear_grid_spacing);
   \      0x2B6   0x2208             MOVS     R2,#+8
   \      0x2B8   0x4639             MOV      R1,R7
   \      0x2BA   0xA801             ADD      R0,SP,#+4
   \      0x2BC   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    483          			for (uint16_t q = grid_max_x * grid_max_y; q--;) EEPROM_WRITE(dummy);
   \      0x2C0   0xF89D 0x6002      LDRB     R6,[SP, #+2]
   \      0x2C4   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \      0x2C8   0x4346             MULS     R6,R0,R6
   \      0x2CA   0xE004             B.N      ??save_14
   \                     ??save_15: (+1)
   \      0x2CC   0x2204             MOVS     R2,#+4
   \      0x2CE   0xA902             ADD      R1,SP,#+8
   \      0x2D0   0xA801             ADD      R0,SP,#+4
   \      0x2D2   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \                     ??save_14: (+1)
   \      0x2D6   0x4630             MOV      R0,R6
   \      0x2D8   0x1E46             SUBS     R6,R0,#+1
   \      0x2DA   0xB280             UXTH     R0,R0
   \      0x2DC   0x2800             CMP      R0,#+0
   \      0x2DE   0xD1F5             BNE.N    ??save_15
    484          			}
    485          	/*--mks cfg--end AUTO_BED_LEVELING_BILINEAR */
    486          
    487          
    488              //#if ENABLED(AUTO_BED_LEVELING_UBL)
    489          	if(BED_LEVELING_METHOD == AUTO_BED_LEVELING_UBL)	{
   \                     ??save_13: (+1)
   \      0x2E0   0x7B28             LDRB     R0,[R5, #+12]
   \      0x2E2   0x2810             CMP      R0,#+16
   \      0x2E4   0xD112             BNE.N    ??save_16
    490                EEPROM_WRITE(ubl.state.active);
   \      0x2E6   0x.... 0x....      LDR.W    R6,??DataTable94_6
   \      0x2EA   0x2201             MOVS     R2,#+1
   \      0x2EC   0x4631             MOV      R1,R6
   \      0x2EE   0xA801             ADD      R0,SP,#+4
   \      0x2F0   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    491                EEPROM_WRITE(ubl.state.z_offset);
   \      0x2F4   0x2204             MOVS     R2,#+4
   \      0x2F6   0x1D31             ADDS     R1,R6,#+4
   \      0x2F8   0xA801             ADD      R0,SP,#+4
   \      0x2FA   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    492                EEPROM_WRITE(ubl.state.eeprom_storage_slot);	}
   \      0x2FE   0x2201             MOVS     R2,#+1
   \      0x300   0xF106 0x0108      ADD      R1,R6,#+8
   \      0x304   0xA801             ADD      R0,SP,#+4
   \      0x306   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \      0x30A   0xE017             B.N      ??save_17
    493              //#else
    494          	else {
    495                const bool ubl_active = 0;
   \                     ??save_16: (+1)
   \      0x30C   0x2000             MOVS     R0,#+0
   \      0x30E   0xF88D 0x0014      STRB     R0,[SP, #+20]
    496                dummy = 0.0f;
   \      0x312   0x9002             STR      R0,[SP, #+8]
    497                const int8_t eeprom_slot = -1;
   \      0x314   0xF04F 0x30FF      MOV      R0,#-1
   \      0x318   0xF88D 0x0003      STRB     R0,[SP, #+3]
    498                EEPROM_WRITE(ubl_active);
   \      0x31C   0x2201             MOVS     R2,#+1
   \      0x31E   0xA905             ADD      R1,SP,#+20
   \      0x320   0xA801             ADD      R0,SP,#+4
   \      0x322   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    499                EEPROM_WRITE(dummy);
   \      0x326   0x2204             MOVS     R2,#+4
   \      0x328   0xA902             ADD      R1,SP,#+8
   \      0x32A   0xA801             ADD      R0,SP,#+4
   \      0x32C   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    500                EEPROM_WRITE(eeprom_slot);	}
   \      0x330   0x2201             MOVS     R2,#+1
   \      0x332   0xF10D 0x0103      ADD      R1,SP,#+3
   \      0x336   0xA801             ADD      R0,SP,#+4
   \      0x338   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    501              //#endif //AUTO_BED_LEVELING_UBL
    502          
    503              // 9 floats for DELTA / Z_DUAL_ENDSTOPS
    504              //#if ENABLED(DELTA)
    505          	if(MACHINETPYE == DELTA)  {
   \                     ??save_17: (+1)
   \      0x33C   0xF9B5 0x0024      LDRSH    R0,[R5, #+36]
   \      0x340   0x2802             CMP      R0,#+2
   \      0x342   0xD130             BNE.N    ??save_18
    506                EEPROM_WRITE(endstop_adj);               // 3 floats
   \      0x344   0x220C             MOVS     R2,#+12
   \      0x346   0x.... 0x....      LDR.W    R1,??DataTable94_7
   \      0x34A   0xA801             ADD      R0,SP,#+4
   \      0x34C   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    507                EEPROM_WRITE(delta_radius);              // 1 float
   \      0x350   0x2204             MOVS     R2,#+4
   \      0x352   0x....             LDR.N    R1,??DataTable93_2
   \      0x354   0xA801             ADD      R0,SP,#+4
   \      0x356   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    508                EEPROM_WRITE(delta_diagonal_rod);        // 1 float
   \      0x35A   0x2204             MOVS     R2,#+4
   \      0x35C   0x....             LDR.N    R1,??DataTable93_1
   \      0x35E   0xA801             ADD      R0,SP,#+4
   \      0x360   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    509                EEPROM_WRITE(delta_segments_per_second); // 1 float
   \      0x364   0x2204             MOVS     R2,#+4
   \      0x366   0x.... 0x....      LDR.W    R1,??DataTable94_8
   \      0x36A   0xA801             ADD      R0,SP,#+4
   \      0x36C   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    510                EEPROM_WRITE(delta_calibration_radius);  // 1 float
   \      0x370   0x2204             MOVS     R2,#+4
   \      0x372   0x.... 0x....      LDR.W    R1,??DataTable94_9
   \      0x376   0xA801             ADD      R0,SP,#+4
   \      0x378   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    511                EEPROM_WRITE(delta_tower_angle_trim);    // 2 floats
   \      0x37C   0x2208             MOVS     R2,#+8
   \      0x37E   0x.... 0x....      LDR.W    R1,??DataTable94_10
   \      0x382   0xA801             ADD      R0,SP,#+4
   \      0x384   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    512                dummy = 0.0f;
   \      0x388   0x2000             MOVS     R0,#+0
   \      0x38A   0x9002             STR      R0,[SP, #+8]
    513                for (uint8_t q = 3; q--;) EEPROM_WRITE(dummy); }
   \      0x38C   0x2603             MOVS     R6,#+3
   \                     ??save_19: (+1)
   \      0x38E   0x4630             MOV      R0,R6
   \      0x390   0x1E46             SUBS     R6,R0,#+1
   \      0x392   0xB2C0             UXTB     R0,R0
   \      0x394   0x2800             CMP      R0,#+0
   \      0x396   0xF000 0x80E8      BEQ.W    ??save_20
   \      0x39A   0x2204             MOVS     R2,#+4
   \      0x39C   0xA902             ADD      R1,SP,#+8
   \      0x39E   0xA801             ADD      R0,SP,#+4
   \      0x3A0   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \      0x3A4   0xE7F3             B.N      ??save_19
    514          	/*
    515          	#elif ENABLED(Z_DUAL_ENDSTOPS)
    516                EEPROM_WRITE(z_endstop_adj);             // 1 float
    517                dummy = 0.0f;
    518                for (uint8_t q = 11; q--;) EEPROM_WRITE(dummy);
    519          	  */
    520              //#else
    521              else {
    522                dummy = 0.0f;
   \                     ??save_18: (+1)
   \      0x3A6   0x2000             MOVS     R0,#+0
   \      0x3A8   0x9002             STR      R0,[SP, #+8]
    523                for (uint8_t q = 12; q--;) EEPROM_WRITE(dummy);	}
   \      0x3AA   0x260C             MOVS     R6,#+12
   \                     ??save_21: (+1)
   \      0x3AC   0x4630             MOV      R0,R6
   \      0x3AE   0x1E46             SUBS     R6,R0,#+1
   \      0x3B0   0xB2C0             UXTB     R0,R0
   \      0x3B2   0x2800             CMP      R0,#+0
   \      0x3B4   0xF000 0x80D9      BEQ.W    ??save_20
   \      0x3B8   0x2204             MOVS     R2,#+4
   \      0x3BA   0xA902             ADD      R1,SP,#+8
   \      0x3BC   0xA801             ADD      R0,SP,#+4
   \      0x3BE   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \      0x3C2   0xE7F3             B.N      ??save_21
    524              //#endif
    525          
    526              #if DISABLED(ULTIPANEL)
    527                const int lcd_preheat_hotend_temp[2] = { PREHEAT_1_TEMP_HOTEND, PREHEAT_2_TEMP_HOTEND },
    528                          lcd_preheat_bed_temp[2] = { PREHEAT_1_TEMP_BED, PREHEAT_2_TEMP_BED },
    529                          lcd_preheat_fan_speed[2] = { PREHEAT_1_FAN_SPEED, PREHEAT_2_FAN_SPEED };
    530              #endif // !ULTIPANEL
    531          
    532              EEPROM_WRITE(lcd_preheat_hotend_temp);
    533              EEPROM_WRITE(lcd_preheat_bed_temp);
    534              EEPROM_WRITE(lcd_preheat_fan_speed);
    535          
    536              for (uint8_t e = 0; e < MAX_EXTRUDERS; e++) {
    537          #if 0 /*--mks cfg begin--*/
    538            #if ENABLED(PIDTEMP)
    539                  if (e < HOTENDS) {
    540                    EEPROM_WRITE(PID_PARAM(Kp, e));
    541                    EEPROM_WRITE(PID_PARAM(Ki, e));
    542                    EEPROM_WRITE(PID_PARAM(Kd, e));
    543          	  #if ENABLED(PID_EXTRUSION_SCALING)
    544                      EEPROM_WRITE(PID_PARAM(Kc, e));
    545          	  #else
    546                      dummy = 1.0f; // 1.0 = default kc
    547                      EEPROM_WRITE(dummy);
    548          	  #endif
    549                  }
    550                  else
    551            #endif // !PIDTEMP
    552                  {
    553                    dummy = DUMMY_PID_VALUE; // When read, will not change the existing value
    554                    EEPROM_WRITE(dummy); // Kp
    555                    dummy = 0.0f;
    556                    for (uint8_t q = 3; q--;) EEPROM_WRITE(dummy); // Ki, Kd, Kc
    557                  }
    558          #endif
    559          	if(PIDTEMP){
    560          		  if (e < HOTENDS) {
    561          			EEPROM_WRITE(PID_PARAM(Kp, e));
    562          			EEPROM_WRITE(PID_PARAM(Ki, e));
    563          			EEPROM_WRITE(PID_PARAM(Kd, e));
    564          #if ENABLED(PID_EXTRUSION_SCALING)
    565          			  EEPROM_WRITE(PID_PARAM(Kc, e));
    566          #else
    567          			  dummy = 1.0f; // 1.0 = default kc
    568          			  EEPROM_WRITE(dummy);
    569          #endif
    570          		  }
    571          		  else
    572          			  {
    573          				dummy = DUMMY_PID_VALUE; // When read, will not change the existing value
    574          				EEPROM_WRITE(dummy); // Kp
    575          				dummy = 0.0f;
    576          				for (uint8_t q = 3; q--;) EEPROM_WRITE(dummy); // Ki, Kd, Kc
    577          			  }
    578          		
    579          		}
    580          		else
    581          			{
    582          			dummy = DUMMY_PID_VALUE; // When read, will not change the existing value
    583          			EEPROM_WRITE(dummy); // Kp
    584          			dummy = 0.0f;
    585          			for (uint8_t q = 3; q--;) EEPROM_WRITE(dummy); // Ki, Kd, Kc
   \                     ??save_22: (+1)
   \      0x3C4   0x2204             MOVS     R2,#+4
   \      0x3C6   0xA902             ADD      R1,SP,#+8
   \      0x3C8   0xA801             ADD      R0,SP,#+4
   \      0x3CA   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \                     ??save_23: (+1)
   \      0x3CE   0x4630             MOV      R0,R6
   \      0x3D0   0x1E46             SUBS     R6,R0,#+1
   \      0x3D2   0xB2C0             UXTB     R0,R0
   \      0x3D4   0x2800             CMP      R0,#+0
   \      0x3D6   0xD1F5             BNE.N    ??save_22
   \                     ??save_24: (+1)
   \      0x3D8   0x2001             MOVS     R0,#+1
   \                     ??save_25: (+1)
   \      0x3DA   0x2800             CMP      R0,#+0
   \      0x3DC   0xD129             BNE.N    ??save_26
   \      0x3DE   0x7828             LDRB     R0,[R5, #+0]
   \      0x3E0   0x2800             CMP      R0,#+0
   \      0x3E2   0xD01A             BEQ.N    ??save_27
   \      0x3E4   0x2204             MOVS     R2,#+4
   \      0x3E6   0x.... 0x....      LDR.W    R1,??DataTable94_11
   \      0x3EA   0xA801             ADD      R0,SP,#+4
   \      0x3EC   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \      0x3F0   0x2204             MOVS     R2,#+4
   \      0x3F2   0x.... 0x....      LDR.W    R1,??DataTable94_12
   \      0x3F6   0xA801             ADD      R0,SP,#+4
   \      0x3F8   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \      0x3FC   0x2204             MOVS     R2,#+4
   \      0x3FE   0x.... 0x....      LDR.W    R1,??DataTable94_13
   \      0x402   0xA801             ADD      R0,SP,#+4
   \      0x404   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \      0x408   0xF04F 0x507E      MOV      R0,#+1065353216
   \      0x40C   0x9002             STR      R0,[SP, #+8]
   \      0x40E   0x2204             MOVS     R2,#+4
   \      0x410   0xA902             ADD      R1,SP,#+8
   \      0x412   0xA801             ADD      R0,SP,#+4
   \      0x414   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \      0x418   0xE7DE             B.N      ??save_24
   \                     ??save_27: (+1)
   \      0x41A   0x.... 0x....      LDR.W    R0,??DataTable94_14  ;; 0x453b8000
   \      0x41E   0x9002             STR      R0,[SP, #+8]
   \      0x420   0x2204             MOVS     R2,#+4
   \      0x422   0xA902             ADD      R1,SP,#+8
   \      0x424   0xA801             ADD      R0,SP,#+4
   \      0x426   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \      0x42A   0x2000             MOVS     R0,#+0
   \      0x42C   0x9002             STR      R0,[SP, #+8]
   \      0x42E   0x2603             MOVS     R6,#+3
   \      0x430   0xE7CD             B.N      ??save_23
    586          			}
    587          	/*--mks cfg end--*/
    588              } // Hotends Loop
    589          
    590              #if DISABLED(PID_EXTRUSION_SCALING)
    591                int lpq_len = 20;
   \                     ??save_26: (+1)
   \      0x432   0x2014             MOVS     R0,#+20
   \      0x434   0x9005             STR      R0,[SP, #+20]
    592              #endif
    593              EEPROM_WRITE(lpq_len);
   \      0x436   0x2204             MOVS     R2,#+4
   \      0x438   0xA905             ADD      R1,SP,#+20
   \      0x43A   0xA801             ADD      R0,SP,#+4
   \      0x43C   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    594          
    595          #if 0 /*--mks cfg begin--*/
    596              #if DISABLED(PIDTEMPBED)
    597                dummy = DUMMY_PID_VALUE;
    598                for (uint8_t q = 3; q--;) EEPROM_WRITE(dummy);
    599              #else
    600                EEPROM_WRITE(thermalManager.bedKp);
    601                EEPROM_WRITE(thermalManager.bedKi);
    602                EEPROM_WRITE(thermalManager.bedKd);
    603              #endif
    604          #endif
    605          	if(PIDTEMPBED == 0)
   \      0x440   0x7868             LDRB     R0,[R5, #+1]
   \      0x442   0x2800             CMP      R0,#+0
   \      0x444   0xD10E             BNE.N    ??save_28
    606          		{
    607          		dummy = DUMMY_PID_VALUE;
   \      0x446   0x.... 0x....      LDR.W    R0,??DataTable94_14  ;; 0x453b8000
   \      0x44A   0x9002             STR      R0,[SP, #+8]
    608          		for (uint8_t q = 3; q--;) EEPROM_WRITE(dummy);
   \      0x44C   0x2503             MOVS     R5,#+3
   \                     ??save_29: (+1)
   \      0x44E   0x4628             MOV      R0,R5
   \      0x450   0x1E45             SUBS     R5,R0,#+1
   \      0x452   0xB2C0             UXTB     R0,R0
   \      0x454   0x2800             CMP      R0,#+0
   \      0x456   0xD017             BEQ.N    ??save_30
   \      0x458   0x2204             MOVS     R2,#+4
   \      0x45A   0xA902             ADD      R1,SP,#+8
   \      0x45C   0xA801             ADD      R0,SP,#+4
   \      0x45E   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \      0x462   0xE7F4             B.N      ??save_29
    609          		}
    610          	else
    611          		{
    612          		EEPROM_WRITE(thermalManager.bedKp);
   \                     ??save_28: (+1)
   \      0x464   0x2204             MOVS     R2,#+4
   \      0x466   0x.... 0x....      LDR.W    R1,??DataTable94_15
   \      0x46A   0xA801             ADD      R0,SP,#+4
   \      0x46C   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    613          		EEPROM_WRITE(thermalManager.bedKi);
   \      0x470   0x2204             MOVS     R2,#+4
   \      0x472   0x.... 0x....      LDR.W    R1,??DataTable94_16
   \      0x476   0xA801             ADD      R0,SP,#+4
   \      0x478   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    614          		EEPROM_WRITE(thermalManager.bedKd);
   \      0x47C   0x2204             MOVS     R2,#+4
   \      0x47E   0x.... 0x....      LDR.W    R1,??DataTable94_17
   \      0x482   0xA801             ADD      R0,SP,#+4
   \      0x484   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    615          		}
    616          	/*--mks cfg end--*/
    617          
    618              #if !HAS_LCD_CONTRAST
    619                const int lcd_contrast = 32;
   \                     ??save_30: (+1)
   \      0x488   0x2020             MOVS     R0,#+32
   \      0x48A   0x9007             STR      R0,[SP, #+28]
    620              #endif
    621              EEPROM_WRITE(lcd_contrast);
   \      0x48C   0x2204             MOVS     R2,#+4
   \      0x48E   0xA907             ADD      R1,SP,#+28
   \      0x490   0xA801             ADD      R0,SP,#+4
   \      0x492   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    622          
    623              #if ENABLED(FWRETRACT)
    624                EEPROM_WRITE(autoretract_enabled);
    625                EEPROM_WRITE(retract_length);
    626                #if EXTRUDERS > 1
    627                  EEPROM_WRITE(retract_length_swap);
    628                #else
    629                  dummy = 0.0f;
    630                  EEPROM_WRITE(dummy);
    631                #endif
    632                EEPROM_WRITE(retract_feedrate_mm_s);
    633                EEPROM_WRITE(retract_zlift);
    634                EEPROM_WRITE(retract_recover_length);
    635                #if EXTRUDERS > 1
    636                  EEPROM_WRITE(retract_recover_length_swap);
    637                #else
    638                  dummy = 0.0f;
    639                  EEPROM_WRITE(dummy);
    640                #endif
    641                EEPROM_WRITE(retract_recover_feedrate_mm_s);
    642              #endif // FWRETRACT
    643          
    644              EEPROM_WRITE(volumetric_enabled);
   \      0x496   0x2201             MOVS     R2,#+1
   \      0x498   0x.... 0x....      LDR.W    R1,??DataTable94_18
   \      0x49C   0xA801             ADD      R0,SP,#+4
   \      0x49E   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    645          
    646              // Save filament sizes
    647              for (uint8_t q = 0; q < MAX_EXTRUDERS; q++) {
   \      0x4A2   0x2000             MOVS     R0,#+0
   \      0x4A4   0xE009             B.N      ??save_31
    648                if (q < COUNT(filament_size)) dummy = filament_size[q];
   \                     ??save_32: (+1)
   \      0x4A6   0x.... 0x....      LDR.W    R0,??DataTable94_19
   \      0x4AA   0x6800             LDR      R0,[R0, #+0]
   \      0x4AC   0x9002             STR      R0,[SP, #+8]
    649                EEPROM_WRITE(dummy);
   \      0x4AE   0x2204             MOVS     R2,#+4
   \      0x4B0   0xA902             ADD      R1,SP,#+8
   \      0x4B2   0xA801             ADD      R0,SP,#+4
   \      0x4B4   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    650              }
   \      0x4B8   0x2001             MOVS     R0,#+1
   \                     ??save_31: (+1)
   \      0x4BA   0x2800             CMP      R0,#+0
   \      0x4BC   0xD0F3             BEQ.N    ??save_32
    651          
    652              // Save TMC2130 Configuration, and placeholder values
    653              uint16_t val;
    654              #if ENABLED(HAVE_TMC2130)
    655                #if ENABLED(X_IS_TMC2130)
    656                  val = stepperX.getCurrent();
    657                #else
    658                  val = 0;
    659                #endif
    660                EEPROM_WRITE(val);
    661                #if ENABLED(Y_IS_TMC2130)
    662                  val = stepperY.getCurrent();
    663                #else
    664                  val = 0;
    665                #endif
    666                EEPROM_WRITE(val);
    667                #if ENABLED(Z_IS_TMC2130)
    668                  val = stepperZ.getCurrent();
    669                #else
    670                  val = 0;
    671                #endif
    672                EEPROM_WRITE(val);
    673                #if ENABLED(X2_IS_TMC2130)
    674                  val = stepperX2.getCurrent();
    675                #else
    676                  val = 0;
    677                #endif
    678                EEPROM_WRITE(val);
    679                #if ENABLED(Y2_IS_TMC2130)
    680                  val = stepperY2.getCurrent();
    681                #else
    682                  val = 0;
    683                #endif
    684                EEPROM_WRITE(val);
    685                #if ENABLED(Z2_IS_TMC2130)
    686                  val = stepperZ2.getCurrent();
    687                #else
    688                  val = 0;
    689                #endif
    690                EEPROM_WRITE(val);
    691                #if ENABLED(E0_IS_TMC2130)
    692                  val = stepperE0.getCurrent();
    693                #else
    694                  val = 0;
    695                #endif
    696                EEPROM_WRITE(val);
    697                #if ENABLED(E1_IS_TMC2130)
    698                  val = stepperE1.getCurrent();
    699                #else
    700                  val = 0;
    701                #endif
    702                EEPROM_WRITE(val);
    703                #if ENABLED(E2_IS_TMC2130)
    704                  val = stepperE2.getCurrent();
    705                #else
    706                  val = 0;
    707                #endif
    708                EEPROM_WRITE(val);
    709                #if ENABLED(E3_IS_TMC2130)
    710                  val = stepperE3.getCurrent();
    711                #else
    712                  val = 0;
    713                #endif
    714                EEPROM_WRITE(val);
    715                #if ENABLED(E4_IS_TMC2130)
    716                  val = stepperE4.getCurrent();
    717                #else
    718                  val = 0;
    719                #endif
    720                EEPROM_WRITE(val);
    721              #else
    722                val = 0;
   \      0x4BE   0x2000             MOVS     R0,#+0
   \      0x4C0   0xF8AD 0x0018      STRH     R0,[SP, #+24]
    723                for (uint8_t q = 0; q < 11; ++q) EEPROM_WRITE(val);
   \      0x4C4   0x4605             MOV      R5,R0
   \      0x4C6   0xE005             B.N      ??save_33
   \                     ??save_34: (+1)
   \      0x4C8   0x2202             MOVS     R2,#+2
   \      0x4CA   0xA906             ADD      R1,SP,#+24
   \      0x4CC   0xA801             ADD      R0,SP,#+4
   \      0x4CE   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \      0x4D2   0x1C6D             ADDS     R5,R5,#+1
   \                     ??save_33: (+1)
   \      0x4D4   0x4628             MOV      R0,R5
   \      0x4D6   0xB2C0             UXTB     R0,R0
   \      0x4D8   0x280B             CMP      R0,#+11
   \      0x4DA   0xDBF5             BLT.N    ??save_34
    724              #endif
    725          
    726              //
    727              // Linear Advance
    728              //
    729          
    730              #if ENABLED(LIN_ADVANCE)
    731                EEPROM_WRITE(planner.extruder_advance_k);
    732                EEPROM_WRITE(planner.advance_ed_ratio);
    733              #else
    734                dummy = 0.0f;
   \      0x4DC   0x2000             MOVS     R0,#+0
   \      0x4DE   0x9002             STR      R0,[SP, #+8]
    735                EEPROM_WRITE(dummy);
   \      0x4E0   0x2204             MOVS     R2,#+4
   \      0x4E2   0xA902             ADD      R1,SP,#+8
   \      0x4E4   0xA801             ADD      R0,SP,#+4
   \      0x4E6   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    736                EEPROM_WRITE(dummy);
   \      0x4EA   0x2204             MOVS     R2,#+4
   \      0x4EC   0xA902             ADD      R1,SP,#+8
   \      0x4EE   0xA801             ADD      R0,SP,#+4
   \      0x4F0   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    737              #endif
    738          
    739              if (!eeprom_write_error) {
   \      0x4F4   0x7820             LDRB     R0,[R4, #+0]
   \      0x4F6   0x2800             CMP      R0,#+0
   \      0x4F8   0xD126             BNE.N    ??save_35
    740          
    741                const uint16_t final_checksum = eeprom_checksum,
   \      0x4FA   0x8860             LDRH     R0,[R4, #+2]
   \      0x4FC   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    742                               eeprom_size = eeprom_index;
   \      0x500   0xA801             ADD      R0,SP,#+4
   \      0x502   0x8805             LDRH     R5,[R0, #+0]
    743          
    744                // Write the EEPROM header
    745                eeprom_index = EEPROM_OFFSET;
   \      0x504   0x2000             MOVS     R0,#+0
   \      0x506   0x9001             STR      R0,[SP, #+4]
    746                EEPROM_WRITE(version);
   \      0x508   0x2204             MOVS     R2,#+4
   \      0x50A   0x.... 0x....      ADR.W    R1,version
   \      0x50E   0xA801             ADD      R0,SP,#+4
   \      0x510   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    747                EEPROM_WRITE(final_checksum);
   \      0x514   0x2202             MOVS     R2,#+2
   \      0x516   0xF10D 0x011A      ADD      R1,SP,#+26
   \      0x51A   0xA801             ADD      R0,SP,#+4
   \      0x51C   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
    748          
    749                // Report storage size
    750                SERIAL_ECHO_START;
   \      0x520   0x....             LDR.N    R0,??DataTable93_5
   \      0x522   0x.... 0x....      BL       _Z14serialprintPGMPKc
    751                SERIAL_ECHOPAIR("Settings Stored (", eeprom_size - (EEPROM_OFFSET));
   \      0x526   0x4629             MOV      R1,R5
   \      0x528   0x.... 0x....      ADR.W    R0,?_2
   \      0x52C   0x.... 0x....      BL       _Z17serial_echopair_PPKci
    752                SERIAL_ECHOLNPGM(" bytes)");
   \      0x530   0x.... 0x....      ADR.W    R0,?_3
   \      0x534   0x.... 0x....      BL       _Z14serialprintPGMPKc
    753          	  if(eeprom_size> (MKS_EEPROM_OFFSET-1))
   \      0x538   0xF5B5 0x6FC0      CMP      R5,#+1536
   \      0x53C   0xDB04             BLT.N    ??save_35
    754          	  	{
    755          	  	SERIAL_ECHOLNPGM("Error!!! EEPROM OVERFLOW!");
   \      0x53E   0x.... 0x....      ADR.W    R0,?_4
   \      0x542   0x.... 0x....      BL       _Z14serialprintPGMPKc
    756          
    757          		while(1);
   \                     ??save_36: (+1)
   \      0x546   0xE7FE             B.N      ??save_36
    758          	  	}
    759              }
    760          
    761              #if ENABLED(UBL_SAVE_ACTIVE_ON_M500)
    762                if (ubl.state.eeprom_storage_slot >= 0)
   \                     ??save_35: (+1)
   \      0x548   0x.... 0x....      LDR.W    R0,??DataTable94_6
   \      0x54C   0xF990 0x1008      LDRSB    R1,[R0, #+8]
   \      0x550   0x0008             MOVS     R0,R1
   \      0x552   0xD403             BMI.N    ??save_37
    763                  ubl.store_mesh(ubl.state.eeprom_storage_slot);
   \      0x554   0x.... 0x....      LDR.W    R0,??DataTable94_20
   \      0x558   0x.... 0x....      BL       _ZN20unified_bed_leveling10store_meshEs
    764              #endif
    765          
    766              return !eeprom_write_error;
   \                     ??save_37: (+1)
   \      0x55C   0x7820             LDRB     R0,[R4, #+0]
   \      0x55E   0x1E40             SUBS     R0,R0,#+1
   \      0x560   0x4180             SBCS     R0,R0,R0
   \      0x562   0x0FC0             LSRS     R0,R0,#+31
   \      0x564   0xB008             ADD      SP,SP,#+32
   \      0x566   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
   \                     ??save_20: (+1)
   \      0x56A   0x2208             MOVS     R2,#+8
   \      0x56C   0x.... 0x....      LDR.W    R1,??DataTable94_21
   \      0x570   0xA801             ADD      R0,SP,#+4
   \      0x572   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \      0x576   0x2208             MOVS     R2,#+8
   \      0x578   0x.... 0x....      LDR.W    R1,??DataTable94_22
   \      0x57C   0xA801             ADD      R0,SP,#+4
   \      0x57E   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \      0x582   0x2208             MOVS     R2,#+8
   \      0x584   0x.... 0x....      LDR.W    R1,??DataTable95
   \      0x588   0xA801             ADD      R0,SP,#+4
   \      0x58A   0x.... 0x....      BL       _ZN14MarlinSettings10write_dataERiPKht
   \      0x58E   0x2000             MOVS     R0,#+0
   \      0x590   0xE723             B.N      ??save_25
    767            }
    768          
    769            /**
    770             * M501 - Retrieve Configuration
    771             */

   \                                 In section .text, align 2, keep-with-next
    772            bool MarlinSettings::load() {
   \                     _ZN14MarlinSettings4loadEv: (+1)
   \        0x0   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \        0x4   0xB08D             SUB      SP,SP,#+52
    773              EEPROM_START();
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9002             STR      R0,[SP, #+8]
    774              eeprom_read_error = false; // If set EEPROM_READ won't write into RAM
   \        0xA   0x.... 0x....      LDR.W    R5,??DataTable95_1
   \        0xE   0x7068             STRB     R0,[R5, #+1]
    775          
    776              char stored_ver[4];
    777              EEPROM_READ(stored_ver);
   \       0x10   0x2204             MOVS     R2,#+4
   \       0x12   0xA904             ADD      R1,SP,#+16
   \       0x14   0xA802             ADD      R0,SP,#+8
   \       0x16   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    778          
    779              uint16_t stored_checksum;
    780              EEPROM_READ(stored_checksum);
   \       0x1A   0x2202             MOVS     R2,#+2
   \       0x1C   0xF10D 0x0106      ADD      R1,SP,#+6
   \       0x20   0xA802             ADD      R0,SP,#+8
   \       0x22   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    781          
    782              // Version has to match or defaults are used
    783              if (strncmp(version, stored_ver, 3) != 0) {
   \       0x26   0x.... 0x....      ADR.W    R6,version
   \       0x2A   0x2203             MOVS     R2,#+3
   \       0x2C   0xA904             ADD      R1,SP,#+16
   \       0x2E   0x4630             MOV      R0,R6
   \       0x30   0x.... 0x....      BL       strncmp
   \       0x34   0x2800             CMP      R0,#+0
   \       0x36   0xD021             BEQ.N    ??load_0
    784                if (stored_ver[0] != 'V') {
   \       0x38   0xF99D 0x0010      LDRSB    R0,[SP, #+16]
   \       0x3C   0x2856             CMP      R0,#+86
   \       0x3E   0xD005             BEQ.N    ??load_1
    785                  stored_ver[0] = '?';
   \       0x40   0x203F             MOVS     R0,#+63
   \       0x42   0xF88D 0x0010      STRB     R0,[SP, #+16]
    786                  stored_ver[1] = '\0';
   \       0x46   0x2000             MOVS     R0,#+0
   \       0x48   0xF88D 0x0011      STRB     R0,[SP, #+17]
    787                }
    788                SERIAL_ECHO_START;
   \                     ??load_1: (+1)
   \       0x4C   0x.... 0x....      LDR.W    R0,??DataTable94_23
   \       0x50   0x.... 0x....      BL       _Z14serialprintPGMPKc
    789                SERIAL_ECHOPGM("EEPROM version mismatch ");
   \       0x54   0x.... 0x....      ADR.W    R0,?_5
   \       0x58   0x.... 0x....      BL       _Z14serialprintPGMPKc
    790                SERIAL_ECHOPAIR("(EEPROM=", stored_ver);
   \       0x5C   0xA904             ADD      R1,SP,#+16
   \       0x5E   0x.... 0x....      ADR.W    R0,?_6
   \       0x62   0x.... 0x....      BL       _Z17serial_echopair_PPKcS0_
    791                SERIAL_ECHOLNPGM(" Marlin=" EEPROM_VERSION ")");
   \       0x66   0x.... 0x....      ADR.W    R0,?_7
   \       0x6A   0x.... 0x....      BL       _Z14serialprintPGMPKc
    792          	  
    793          	  card.mksReset();
   \       0x6E   0x.... 0x....      LDR.W    R0,??DataTable95_2
   \       0x72   0x.... 0x....      BL       _ZN10CardReader8mksResetEv
    794                reset();
   \       0x76   0x.... 0x....      BL       _ZN14MarlinSettings5resetEv
   \       0x7A   0xE32F             B.N      ??load_2
    795              }
    796              else {
    797                card.mksLoad();
   \                     ??load_0: (+1)
   \       0x7C   0x.... 0x....      LDR.W    R0,??DataTable95_2
   \       0x80   0x.... 0x....      BL       _ZN10CardReader7mksLoadEv
    798          	  					
    799                float dummy = 0;
   \       0x84   0x2000             MOVS     R0,#+0
   \       0x86   0x9003             STR      R0,[SP, #+12]
    800          
    801                eeprom_checksum = 0; // clear before reading first "real data"
   \       0x88   0x8068             STRH     R0,[R5, #+2]
    802          
    803                // Number of esteppers may change
    804                uint8_t esteppers;
    805                EEPROM_READ(esteppers);
   \       0x8A   0x2201             MOVS     R2,#+1
   \       0x8C   0x4669             MOV      R1,SP
   \       0x8E   0xA802             ADD      R0,SP,#+8
   \       0x90   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    806          
    807                // Get only the number of E stepper parameters previously stored
    808                // Any steppers added later are set to their defaults
    809                const float def1[] = DEFAULT_AXIS_STEPS_PER_UNIT, def2[] = DEFAULT_MAX_FEEDRATE;
    810                const uint32_t def3[] = DEFAULT_MAX_ACCELERATION;
    811          
    812          	/*--mks--*/  
    813                /*
    814                float tmp1[XYZ + esteppers], tmp2[XYZ + esteppers];       
    815                uint32_t tmp3[XYZ + esteppers];
    816          	  
    817                EEPROM_READ(tmp1);
    818                EEPROM_READ(tmp2);
    819                EEPROM_READ(tmp3);
    820                LOOP_XYZE_N(i) {
    821                  planner.axis_steps_per_mm[i]			= i < XYZ + esteppers ? tmp1[i] : def1[i < COUNT(def1) ? i : COUNT(def1) - 1];
    822                  planner.max_feedrate_mm_s[i]			= i < XYZ + esteppers ? tmp2[i] : def2[i < COUNT(def2) ? i : COUNT(def2) - 1];
    823                  planner.max_acceleration_mm_per_s2[i] = i < XYZ + esteppers ? tmp3[i] : def3[i < COUNT(def3) ? i : COUNT(def3) - 1];
    824                  }
    825          
    826                */
    827              /*---mks---*/
    828                float *tmp1 = NULL;			
    829                float *tmp2 = NULL;
    830                uint32_t *tmp3 = NULL;
    831                tmp1 = (float *)malloc((XYZ + esteppers) * sizeof(float));
   \       0x94   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x98   0x1CC0             ADDS     R0,R0,#+3
   \       0x9A   0x0080             LSLS     R0,R0,#+2
   \       0x9C   0x.... 0x....      BL       malloc
   \       0xA0   0x4680             MOV      R8,R0
    832                tmp2 = (float *)malloc((XYZ + esteppers) * sizeof(float));
   \       0xA2   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0xA6   0x1CC0             ADDS     R0,R0,#+3
   \       0xA8   0x0080             LSLS     R0,R0,#+2
   \       0xAA   0x.... 0x....      BL       malloc
   \       0xAE   0x4607             MOV      R7,R0
    833                tmp3 = (uint32_t *)malloc((XYZ + esteppers) * sizeof(uint32_t));
   \       0xB0   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0xB4   0x1CC0             ADDS     R0,R0,#+3
   \       0xB6   0x0080             LSLS     R0,R0,#+2
   \       0xB8   0x.... 0x....      BL       malloc
   \       0xBC   0x4604             MOV      R4,R0
    834                read_data(eeprom_index, (uint8_t *)tmp1, (XYZ + esteppers) * sizeof(float));
   \       0xBE   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \       0xC2   0x1CD2             ADDS     R2,R2,#+3
   \       0xC4   0x0092             LSLS     R2,R2,#+2
   \       0xC6   0xB292             UXTH     R2,R2
   \       0xC8   0x4641             MOV      R1,R8
   \       0xCA   0xA802             ADD      R0,SP,#+8
   \       0xCC   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    835                read_data(eeprom_index, (uint8_t *)tmp2, (XYZ + esteppers) * sizeof(float));
   \       0xD0   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \       0xD4   0x1CD2             ADDS     R2,R2,#+3
   \       0xD6   0x0092             LSLS     R2,R2,#+2
   \       0xD8   0xB292             UXTH     R2,R2
   \       0xDA   0x4639             MOV      R1,R7
   \       0xDC   0xA802             ADD      R0,SP,#+8
   \       0xDE   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    836                read_data(eeprom_index, (uint8_t *)tmp3, (XYZ + esteppers) * sizeof(uint32_t));
   \       0xE2   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \       0xE6   0x1CD2             ADDS     R2,R2,#+3
   \       0xE8   0x0092             LSLS     R2,R2,#+2
   \       0xEA   0xB292             UXTH     R2,R2
   \       0xEC   0x4621             MOV      R1,R4
   \       0xEE   0xA802             ADD      R0,SP,#+8
   \       0xF0   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    837          
    838                LOOP_XYZE_N(i) {
   \       0xF4   0xF04F 0x0C00      MOV      R12,#+0
   \       0xF8   0x4643             MOV      R3,R8
   \       0xFA   0x463A             MOV      R2,R7
   \       0xFC   0x4621             MOV      R1,R4
   \       0xFE   0xE011             B.N      ??load_3
    839                  planner.axis_steps_per_mm[i]          = i < XYZ + esteppers ? *(tmp1+i) : def1[i < COUNT(def1) ? i : COUNT(def1) - 1];
    840                  planner.max_feedrate_mm_s[i]          = i < XYZ + esteppers ? *(tmp2+i) : def2[i < COUNT(def2) ? i : COUNT(def2) - 1];
    841                  planner.max_acceleration_mm_per_s2[i] = i < XYZ + esteppers ? *(tmp3+i) : def3[i < COUNT(def3) ? i : COUNT(def3) - 1];
   \                     ??load_4: (+1)
   \      0x100   0x2003             MOVS     R0,#+3
   \      0x102   0xE003             B.N      ??load_5
   \                     ??load_6: (+1)
   \      0x104   0xF1BC 0x0F04      CMP      R12,#+4
   \      0x108   0xD2FA             BCS.N    ??load_4
   \      0x10A   0x4660             MOV      R0,R12
   \                     ??load_5: (+1)
   \      0x10C   0x.... 0x....      ADR.W    R4,`MarlinSettings::load(){10}::def3`
   \      0x110   0xF854 0x0020      LDR      R0,[R4, R0, LSL #+2]
   \                     ??load_7: (+1)
   \      0x114   0x.... 0x....      LDR.W    R4,??DataTable95_3
   \      0x118   0xF844 0x002C      STR      R0,[R4, R12, LSL #+2]
   \      0x11C   0xF10C 0x0C01      ADD      R12,R12,#+1
   \      0x120   0xFA5F 0xFC8C      UXTB     R12,R12
   \                     ??load_3: (+1)
   \      0x124   0xF1BC 0x0F03      CMP      R12,#+3
   \      0x128   0xF300 0x82E2      BGT.W    ??load_8
   \      0x12C   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \      0x130   0x1CC0             ADDS     R0,R0,#+3
   \      0x132   0x4584             CMP      R12,R0
   \      0x134   0xDA02             BGE.N    ??load_9
   \      0x136   0xF853 0x402C      LDR      R4,[R3, R12, LSL #+2]
   \      0x13A   0xE009             B.N      ??load_10
   \                     ??load_9: (+1)
   \      0x13C   0xF1BC 0x0F04      CMP      R12,#+4
   \      0x140   0xD201             BCS.N    ??load_11
   \      0x142   0x4664             MOV      R4,R12
   \      0x144   0xE000             B.N      ??load_12
   \                     ??load_11: (+1)
   \      0x146   0x2403             MOVS     R4,#+3
   \                     ??load_12: (+1)
   \      0x148   0x.... 0x....      ADR.W    R7,`MarlinSettings::load(){10}::def1`
   \      0x14C   0xF857 0x4024      LDR      R4,[R7, R4, LSL #+2]
   \                     ??load_10: (+1)
   \      0x150   0x.... 0x....      LDR.W    R7,??DataTable95_4
   \      0x154   0xF847 0x402C      STR      R4,[R7, R12, LSL #+2]
   \      0x158   0x4584             CMP      R12,R0
   \      0x15A   0xDA02             BGE.N    ??load_13
   \      0x15C   0xF852 0x402C      LDR      R4,[R2, R12, LSL #+2]
   \      0x160   0xE009             B.N      ??load_14
   \                     ??load_13: (+1)
   \      0x162   0xF1BC 0x0F04      CMP      R12,#+4
   \      0x166   0xD201             BCS.N    ??load_15
   \      0x168   0x4664             MOV      R4,R12
   \      0x16A   0xE000             B.N      ??load_16
   \                     ??load_15: (+1)
   \      0x16C   0x2403             MOVS     R4,#+3
   \                     ??load_16: (+1)
   \      0x16E   0x.... 0x....      ADR.W    R7,`MarlinSettings::load(){10}::def2`
   \      0x172   0xF857 0x4024      LDR      R4,[R7, R4, LSL #+2]
   \                     ??load_14: (+1)
   \      0x176   0x.... 0x....      LDR.W    R7,??DataTable95_5
   \      0x17A   0xF847 0x402C      STR      R4,[R7, R12, LSL #+2]
   \      0x17E   0x4584             CMP      R12,R0
   \      0x180   0xDAC0             BGE.N    ??load_6
   \      0x182   0xF851 0x002C      LDR      R0,[R1, R12, LSL #+2]
   \      0x186   0xE7C5             B.N      ??load_7
    842                }
    843          
    844                EEPROM_READ(planner.acceleration);
    845                EEPROM_READ(planner.retract_acceleration);
    846                EEPROM_READ(planner.travel_acceleration);
    847                EEPROM_READ(planner.min_feedrate_mm_s);
    848                EEPROM_READ(planner.min_travel_feedrate_mm_s);
    849                EEPROM_READ(planner.min_segment_time);
    850                EEPROM_READ(planner.max_jerk);
    851          
    852                #if !HAS_HOME_OFFSET
    853                  float home_offset[XYZ];
    854                #endif
    855                EEPROM_READ(home_offset);
    856          
    857               // #if ENABLED(DELTA)
    858          	  if(MACHINETPYE == DELTA)	{
    859                  home_offset[X_AXIS] = 0.0;
    860                  home_offset[Y_AXIS] = 0.0;
    861                  home_offset[Z_AXIS] -= DELTA_HEIGHT;	}
    862                //#endif
    863          
    864                #if HOTENDS > 1
    865                  // Skip hotend 0 which must be 0
    866                  for (uint8_t e = 1; e < HOTENDS; e++)
    867                    LOOP_XYZ(i) EEPROM_READ(hotend_offset[i][e]);
    868                #endif
    869          
    870                //
    871                // Global Leveling
    872                //
    873          /*	
    874                #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
    875                  EEPROM_READ(planner.z_fade_height);
    876                #else
    877                  EEPROM_READ(dummy);
    878                #endif	
    879                    */
    880          
    881          //#if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
    882          		if((MACHINETPYE != DELTA) && (BED_LEVELING_METHOD&HAS_FADE))
    883                  	EEPROM_READ(planner.z_fade_height);
    884          		else
    885          			EEPROM_READ(dummy);
   \                     ??load_17: (+1)
   \      0x188   0x2204             MOVS     R2,#+4
   \      0x18A   0xA903             ADD      R1,SP,#+12
   \      0x18C   0xA802             ADD      R0,SP,#+8
   \      0x18E   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    886          //#else
    887          //        EEPROM_READ(dummy);
    888          //#endif	  
    889          
    890          
    891                //
    892                // Mesh (Manual) Bed Leveling
    893                //
    894          
    895                bool leveling_is_on;
    896                uint8_t mesh_num_x, mesh_num_y;
    897                EEPROM_READ(leveling_is_on);
   \                     ??load_18: (+1)
   \      0x192   0x2201             MOVS     R2,#+1
   \      0x194   0xF10D 0x0103      ADD      R1,SP,#+3
   \      0x198   0xA802             ADD      R0,SP,#+8
   \      0x19A   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    898                EEPROM_READ(dummy);
   \      0x19E   0x2204             MOVS     R2,#+4
   \      0x1A0   0xA903             ADD      R1,SP,#+12
   \      0x1A2   0xA802             ADD      R0,SP,#+8
   \      0x1A4   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    899                EEPROM_READ(mesh_num_x);
   \      0x1A8   0x2201             MOVS     R2,#+1
   \      0x1AA   0xF10D 0x0102      ADD      R1,SP,#+2
   \      0x1AE   0xA802             ADD      R0,SP,#+8
   \      0x1B0   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    900                EEPROM_READ(mesh_num_y);
   \      0x1B4   0x2201             MOVS     R2,#+1
   \      0x1B6   0xF10D 0x0101      ADD      R1,SP,#+1
   \      0x1BA   0xA802             ADD      R0,SP,#+8
   \      0x1BC   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    901          
    902          	  /*--mks cfg-- MESH_BED_LEVELING */
    903                //#if ENABLED(MESH_BED_LEVELING)
    904          		if(BED_LEVELING_METHOD == MESH_BED_LEVELING) {
   \      0x1C0   0xF898 0x000C      LDRB     R0,[R8, #+12]
   \      0x1C4   0x2820             CMP      R0,#+32
   \      0x1C6   0xD145             BNE.N    ??load_19
    905                  mbl.status = leveling_is_on ? _BV(MBL_STATUS_HAS_MESH_BIT) : 0;
   \      0x1C8   0xF89D 0x0003      LDRB     R0,[SP, #+3]
   \      0x1CC   0x1E40             SUBS     R0,R0,#+1
   \      0x1CE   0x4180             SBCS     R0,R0,R0
   \      0x1D0   0x43C0             MVNS     R0,R0
   \      0x1D2   0x0FC0             LSRS     R0,R0,#+31
   \      0x1D4   0x.... 0x....      LDR.W    R1,??DataTable95_6
   \      0x1D8   0x7008             STRB     R0,[R1, #+0]
    906                  mbl.z_offset = dummy;
   \      0x1DA   0x9803             LDR      R0,[SP, #+12]
   \      0x1DC   0x.... 0x....      LDR.W    R1,??DataTable95_7
   \      0x1E0   0x6008             STR      R0,[R1, #+0]
    907                  if (mesh_num_x == GRID_MAX_POINTS_X && mesh_num_y == GRID_MAX_POINTS_Y) {
   \      0x1E2   0xF109 0x0060      ADD      R0,R9,#+96
   \      0x1E6   0xF89D 0x1002      LDRB     R1,[SP, #+2]
   \      0x1EA   0x7802             LDRB     R2,[R0, #+0]
   \      0x1EC   0x4291             CMP      R1,R2
   \      0x1EE   0xD11D             BNE.N    ??load_20
   \      0x1F0   0xF89D 0x1001      LDRB     R1,[SP, #+1]
   \      0x1F4   0x7840             LDRB     R0,[R0, #+1]
   \      0x1F6   0x4281             CMP      R1,R0
   \      0x1F8   0xD118             BNE.N    ??load_20
    908                    // EEPROM data fits the current mesh
    909                    EEPROM_READ(mbl.z_values);
   \      0x1FA   0xF44F 0x6280      MOV      R2,#+1024
   \      0x1FE   0x.... 0x....      LDR.W    R1,??DataTable94
   \      0x202   0xA802             ADD      R0,SP,#+8
   \      0x204   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    910                  }
    911                  else {
    912                    // EEPROM data is stale
    913                    mbl.reset();
    914                    for (uint16_t q = mesh_num_x * mesh_num_y; q--;) EEPROM_READ(dummy);
    915                  }
    916                }else{//#else
    917                  // MBL is disabled - skip the stored data
    918                  for (uint16_t q = mesh_num_x * mesh_num_y; q--;) EEPROM_READ(dummy);
    919                }//#endif // MESH_BED_LEVELING
    920          
    921                #if !HAS_BED_PROBE
    922                  float zprobe_zoffset;
    923                #endif
    924                EEPROM_READ(zprobe_zoffset);
   \                     ??load_21: (+1)
   \      0x208   0x2204             MOVS     R2,#+4
   \      0x20A   0x.... 0x....      LDR.W    R1,??DataTable94_1
   \      0x20E   0xA802             ADD      R0,SP,#+8
   \      0x210   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    925          
    926                //
    927                // Planar Bed Leveling matrix
    928                //
    929          
    930                //#if ABL_PLANAR
    931          	  if(BED_LEVELING_METHOD&ABL_PLANAR)
   \      0x214   0xF898 0x000C      LDRB     R0,[R8, #+12]
   \      0x218   0xF010 0x0F06      TST      R0,#0x6
   \      0x21C   0xD02C             BEQ.N    ??load_22
    932                  EEPROM_READ(planner.bed_level_matrix);
   \      0x21E   0x2224             MOVS     R2,#+36
   \      0x220   0x.... 0x....      LDR.W    R1,??DataTable94_2
   \      0x224   0xA802             ADD      R0,SP,#+8
   \      0x226   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x22A   0xE033             B.N      ??load_23
   \                     ??load_20: (+1)
   \      0x22C   0x.... 0x....      BL       _ZN17mesh_bed_leveling5resetEv
   \      0x230   0xF89D 0xA002      LDRB     R10,[SP, #+2]
   \      0x234   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \      0x238   0xFB00 0xFA0A      MUL      R10,R0,R10
   \                     ??load_24: (+1)
   \      0x23C   0x4650             MOV      R0,R10
   \      0x23E   0xF1A0 0x0A01      SUB      R10,R0,#+1
   \      0x242   0xB280             UXTH     R0,R0
   \      0x244   0x2800             CMP      R0,#+0
   \      0x246   0xD0DF             BEQ.N    ??load_21
   \      0x248   0x2204             MOVS     R2,#+4
   \      0x24A   0xA903             ADD      R1,SP,#+12
   \      0x24C   0xA802             ADD      R0,SP,#+8
   \      0x24E   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x252   0xE7F3             B.N      ??load_24
   \                     ??load_19: (+1)
   \      0x254   0xF89D 0xA002      LDRB     R10,[SP, #+2]
   \      0x258   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \      0x25C   0xFB00 0xFA0A      MUL      R10,R0,R10
   \                     ??load_25: (+1)
   \      0x260   0x4650             MOV      R0,R10
   \      0x262   0xF1A0 0x0A01      SUB      R10,R0,#+1
   \      0x266   0xB280             UXTH     R0,R0
   \      0x268   0x2800             CMP      R0,#+0
   \      0x26A   0xD0CD             BEQ.N    ??load_21
   \      0x26C   0x2204             MOVS     R2,#+4
   \      0x26E   0xA903             ADD      R1,SP,#+12
   \      0x270   0xA802             ADD      R0,SP,#+8
   \      0x272   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x276   0xE7F3             B.N      ??load_25
    933                //#else
    934                else
    935                  for (uint8_t q = 9; q--;) EEPROM_READ(dummy);
   \                     ??load_22: (+1)
   \      0x278   0xF04F 0x0A09      MOV      R10,#+9
   \      0x27C   0xE004             B.N      ??load_26
   \                     ??load_27: (+1)
   \      0x27E   0x2204             MOVS     R2,#+4
   \      0x280   0xA903             ADD      R1,SP,#+12
   \      0x282   0xA802             ADD      R0,SP,#+8
   \      0x284   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \                     ??load_26: (+1)
   \      0x288   0x4650             MOV      R0,R10
   \      0x28A   0xF1A0 0x0A01      SUB      R10,R0,#+1
   \      0x28E   0xB2C0             UXTB     R0,R0
   \      0x290   0x2800             CMP      R0,#+0
   \      0x292   0xD1F4             BNE.N    ??load_27
    936                //#endif
    937          
    938                //
    939                // Bilinear Auto Bed Leveling
    940                //
    941          
    942                uint8_t grid_max_x, grid_max_y;
    943                EEPROM_READ(grid_max_x);                       // 1 byte
   \                     ??load_23: (+1)
   \      0x294   0x2201             MOVS     R2,#+1
   \      0x296   0xF10D 0x0105      ADD      R1,SP,#+5
   \      0x29A   0xA802             ADD      R0,SP,#+8
   \      0x29C   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    944                EEPROM_READ(grid_max_y);                       // 1 byte
   \      0x2A0   0x2201             MOVS     R2,#+1
   \      0x2A2   0xA901             ADD      R1,SP,#+4
   \      0x2A4   0xA802             ADD      R0,SP,#+8
   \      0x2A6   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    945          /*--mks cfg--begin AUTO_BED_LEVELING_BILINEAR */      
    946          /*
    947                #if ENABLED(AUTO_BED_LEVELING_BILINEAR)
    948                  if (grid_max_x == GRID_MAX_POINTS_X && grid_max_y == GRID_MAX_POINTS_Y) {
    949                    set_bed_leveling_enabled(false);
    950                    EEPROM_READ(bilinear_grid_spacing);        // 2 ints
    951                    EEPROM_READ(bilinear_start);               // 2 ints
    952                    EEPROM_READ(z_values);                     // 9 to 256 floats
    953                  }
    954                  else // EEPROM data is stale
    955                #endif // AUTO_BED_LEVELING_BILINEAR
    956                  {
    957                    // Skip past disabled (or stale) Bilinear Grid data
    958                    int bgs[2], bs[2];
    959                    EEPROM_READ(bgs);
    960                    EEPROM_READ(bs);
    961                    for (uint16_t q = grid_max_x * grid_max_y; q--;) EEPROM_READ(dummy);
    962                  }
    963          */
    964          	
    965          	int bgs[2], bs[2];
    966          	if(BED_LEVELING_METHOD == AUTO_BED_LEVELING_BILINEAR)
   \      0x2AA   0xF898 0x000C      LDRB     R0,[R8, #+12]
   \      0x2AE   0x2808             CMP      R0,#+8
   \      0x2B0   0xD155             BNE.N    ??load_28
    967          		{
    968                  if (grid_max_x == GRID_MAX_POINTS_X && grid_max_y == GRID_MAX_POINTS_Y) {
   \      0x2B2   0xF109 0x0060      ADD      R0,R9,#+96
   \      0x2B6   0xF89D 0x1005      LDRB     R1,[SP, #+5]
   \      0x2BA   0x7802             LDRB     R2,[R0, #+0]
   \      0x2BC   0x4291             CMP      R1,R2
   \      0x2BE   0xD132             BNE.N    ??load_29
   \      0x2C0   0xF89D 0x1004      LDRB     R1,[SP, #+4]
   \      0x2C4   0x7840             LDRB     R0,[R0, #+1]
   \      0x2C6   0x4281             CMP      R1,R0
   \      0x2C8   0xD12D             BNE.N    ??load_29
    969                    set_bed_leveling_enabled(false);
   \      0x2CA   0x2000             MOVS     R0,#+0
   \      0x2CC   0x.... 0x....      BL       _Z24set_bed_leveling_enabledb
    970                    EEPROM_READ(bilinear_grid_spacing);        // 2 ints
   \      0x2D0   0x2208             MOVS     R2,#+8
   \      0x2D2   0x.... 0x....      LDR.W    R1,??DataTable94_4
   \      0x2D6   0xA802             ADD      R0,SP,#+8
   \      0x2D8   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    971                    EEPROM_READ(bilinear_start);               // 2 ints
   \      0x2DC   0x2208             MOVS     R2,#+8
   \      0x2DE   0x.... 0x....      LDR.W    R1,??DataTable94_3
   \      0x2E2   0xA802             ADD      R0,SP,#+8
   \      0x2E4   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    972                    EEPROM_READ(z_values);                     // 9 to 256 floats
   \      0x2E8   0xF44F 0x6280      MOV      R2,#+1024
   \      0x2EC   0x.... 0x....      LDR.W    R1,??DataTable94_5
   \      0x2F0   0xA802             ADD      R0,SP,#+8
   \      0x2F2   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    973                  }
    974                  else // EEPROM data is stale
    975          			{
    976          			  // Skip past disabled (or stale) Bilinear Grid data
    977          			  EEPROM_READ(bgs);
    978          			  EEPROM_READ(bs);
    979          			  for (uint16_t q = grid_max_x * grid_max_y; q--;) EEPROM_READ(dummy);
    980          			}
    981          		}
    982          		else
    983          			{
    984          			EEPROM_READ(bgs);
    985          			EEPROM_READ(bs);
    986          			for (uint16_t q = grid_max_x * grid_max_y; q--;) EEPROM_READ(dummy);
    987          			}
    988          	  /*--mks cfg--end AUTO_BED_LEVELING_BILINEAR */		
    989          
    990               // #if ENABLED(AUTO_BED_LEVELING_UBL)
    991          	  if(BED_LEVELING_METHOD == AUTO_BED_LEVELING_UBL)	{
   \                     ??load_30: (+1)
   \      0x2F6   0xF898 0x000C      LDRB     R0,[R8, #+12]
   \      0x2FA   0x2810             CMP      R0,#+16
   \      0x2FC   0xD14B             BNE.N    ??load_31
    992                  EEPROM_READ(ubl.state.active);
   \      0x2FE   0x.... 0x....      LDR.W    R9,??DataTable94_6
   \      0x302   0x2201             MOVS     R2,#+1
   \      0x304   0x4649             MOV      R1,R9
   \      0x306   0xA802             ADD      R0,SP,#+8
   \      0x308   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    993                  EEPROM_READ(ubl.state.z_offset);
   \      0x30C   0x2204             MOVS     R2,#+4
   \      0x30E   0xF109 0x0104      ADD      R1,R9,#+4
   \      0x312   0xA802             ADD      R0,SP,#+8
   \      0x314   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
    994                  EEPROM_READ(ubl.state.eeprom_storage_slot); }
   \      0x318   0x2201             MOVS     R2,#+1
   \      0x31A   0xF109 0x0108      ADD      R1,R9,#+8
   \      0x31E   0xA802             ADD      R0,SP,#+8
   \      0x320   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x324   0xE047             B.N      ??load_32
   \                     ??load_29: (+1)
   \      0x326   0x2208             MOVS     R2,#+8
   \      0x328   0xA907             ADD      R1,SP,#+28
   \      0x32A   0xA802             ADD      R0,SP,#+8
   \      0x32C   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x330   0x2208             MOVS     R2,#+8
   \      0x332   0xA905             ADD      R1,SP,#+20
   \      0x334   0xA802             ADD      R0,SP,#+8
   \      0x336   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x33A   0xF89D 0x9005      LDRB     R9,[SP, #+5]
   \      0x33E   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \      0x342   0xFB00 0xF909      MUL      R9,R0,R9
   \                     ??load_33: (+1)
   \      0x346   0x4648             MOV      R0,R9
   \      0x348   0xF1A0 0x0901      SUB      R9,R0,#+1
   \      0x34C   0xB280             UXTH     R0,R0
   \      0x34E   0x2800             CMP      R0,#+0
   \      0x350   0xD0D1             BEQ.N    ??load_30
   \      0x352   0x2204             MOVS     R2,#+4
   \      0x354   0xA903             ADD      R1,SP,#+12
   \      0x356   0xA802             ADD      R0,SP,#+8
   \      0x358   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x35C   0xE7F3             B.N      ??load_33
   \                     ??load_28: (+1)
   \      0x35E   0x2208             MOVS     R2,#+8
   \      0x360   0xA907             ADD      R1,SP,#+28
   \      0x362   0xA802             ADD      R0,SP,#+8
   \      0x364   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x368   0x2208             MOVS     R2,#+8
   \      0x36A   0xA905             ADD      R1,SP,#+20
   \      0x36C   0xA802             ADD      R0,SP,#+8
   \      0x36E   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x372   0xF89D 0x9005      LDRB     R9,[SP, #+5]
   \      0x376   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \      0x37A   0xFB00 0xF909      MUL      R9,R0,R9
   \                     ??load_34: (+1)
   \      0x37E   0x4648             MOV      R0,R9
   \      0x380   0xF1A0 0x0901      SUB      R9,R0,#+1
   \      0x384   0xB280             UXTH     R0,R0
   \      0x386   0x2800             CMP      R0,#+0
   \      0x388   0xD0B5             BEQ.N    ??load_30
   \      0x38A   0x2204             MOVS     R2,#+4
   \      0x38C   0xA903             ADD      R1,SP,#+12
   \      0x38E   0xA802             ADD      R0,SP,#+8
   \      0x390   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x394   0xE7F3             B.N      ??load_34
    995                //#else
    996          	  else {
    997                  bool dummyb;
    998                  uint8_t dummyui8;
    999                  EEPROM_READ(dummyb);
   \                     ??load_31: (+1)
   \      0x396   0x2201             MOVS     R2,#+1
   \      0x398   0xF10D 0x0125      ADD      R1,SP,#+37
   \      0x39C   0xA802             ADD      R0,SP,#+8
   \      0x39E   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   1000                  EEPROM_READ(dummy);
   \      0x3A2   0x2204             MOVS     R2,#+4
   \      0x3A4   0xA903             ADD      R1,SP,#+12
   \      0x3A6   0xA802             ADD      R0,SP,#+8
   \      0x3A8   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   1001                  EEPROM_READ(dummyui8); }
   \      0x3AC   0x2201             MOVS     R2,#+1
   \      0x3AE   0xA909             ADD      R1,SP,#+36
   \      0x3B0   0xA802             ADD      R0,SP,#+8
   \      0x3B2   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   1002               // #endif //AUTO_BED_LEVELING_UBL
   1003          
   1004               // #if ENABLED(DELTA)
   1005          	  if(MACHINETPYE == DELTA)	{
   \                     ??load_32: (+1)
   \      0x3B6   0xF9B8 0x0024      LDRSH    R0,[R8, #+36]
   \      0x3BA   0x2802             CMP      R0,#+2
   \      0x3BC   0xD134             BNE.N    ??load_35
   1006                  EEPROM_READ(endstop_adj);               // 3 floats
   \      0x3BE   0x220C             MOVS     R2,#+12
   \      0x3C0   0x.... 0x....      LDR.W    R1,??DataTable94_7
   \      0x3C4   0xA802             ADD      R0,SP,#+8
   \      0x3C6   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   1007                  EEPROM_READ(delta_radius);              // 1 float
   \      0x3CA   0x2204             MOVS     R2,#+4
   \      0x3CC   0x.... 0x....      LDR.W    R1,??DataTable95_8
   \      0x3D0   0xA802             ADD      R0,SP,#+8
   \      0x3D2   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   1008                  EEPROM_READ(delta_diagonal_rod);        // 1 float
   \      0x3D6   0x2204             MOVS     R2,#+4
   \      0x3D8   0x.... 0x....      LDR.W    R1,??DataTable95_9
   \      0x3DC   0xA802             ADD      R0,SP,#+8
   \      0x3DE   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   1009                  EEPROM_READ(delta_segments_per_second); // 1 float
   \      0x3E2   0x2204             MOVS     R2,#+4
   \      0x3E4   0x.... 0x....      LDR.W    R1,??DataTable94_8
   \      0x3E8   0xA802             ADD      R0,SP,#+8
   \      0x3EA   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   1010                  EEPROM_READ(delta_calibration_radius);  // 1 float
   \      0x3EE   0x2204             MOVS     R2,#+4
   \      0x3F0   0x.... 0x....      LDR.W    R1,??DataTable94_9
   \      0x3F4   0xA802             ADD      R0,SP,#+8
   \      0x3F6   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   1011                  EEPROM_READ(delta_tower_angle_trim);    // 2 floats
   \      0x3FA   0x2208             MOVS     R2,#+8
   \      0x3FC   0x.... 0x....      LDR.W    R1,??DataTable94_10
   \      0x400   0xA802             ADD      R0,SP,#+8
   \      0x402   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   1012                  dummy = 0.0f;
   \      0x406   0x2000             MOVS     R0,#+0
   \      0x408   0x9003             STR      R0,[SP, #+12]
   1013                  for (uint8_t q=3; q--;) EEPROM_READ(dummy);	}
   \      0x40A   0xF04F 0x0903      MOV      R9,#+3
   \                     ??load_36: (+1)
   \      0x40E   0x4648             MOV      R0,R9
   \      0x410   0xF1A0 0x0901      SUB      R9,R0,#+1
   \      0x414   0xB2C0             UXTB     R0,R0
   \      0x416   0x2800             CMP      R0,#+0
   \      0x418   0xF000 0x81C4      BEQ.W    ??load_37
   \      0x41C   0x2204             MOVS     R2,#+4
   \      0x41E   0xA903             ADD      R1,SP,#+12
   \      0x420   0xA802             ADD      R0,SP,#+8
   \      0x422   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x426   0xE7F2             B.N      ??load_36
   1014          		/*
   1015                #elif ENABLED(Z_DUAL_ENDSTOPS)
   1016                  EEPROM_READ(z_endstop_adj);
   1017                  dummy = 0.0f;
   1018                  for (uint8_t q=11; q--;) EEPROM_READ(dummy);	*/
   1019                //#else
   1020          	  else	  {
   1021                  dummy = 0.0f;
   \                     ??load_35: (+1)
   \      0x428   0x2000             MOVS     R0,#+0
   \      0x42A   0x9003             STR      R0,[SP, #+12]
   1022                  for (uint8_t q=12; q--;) EEPROM_READ(dummy);	}
   \      0x42C   0xF04F 0x090C      MOV      R9,#+12
   \                     ??load_38: (+1)
   \      0x430   0x4648             MOV      R0,R9
   \      0x432   0xF1A0 0x0901      SUB      R9,R0,#+1
   \      0x436   0xB2C0             UXTB     R0,R0
   \      0x438   0x2800             CMP      R0,#+0
   \      0x43A   0xF000 0x81B3      BEQ.W    ??load_37
   \      0x43E   0x2204             MOVS     R2,#+4
   \      0x440   0xA903             ADD      R1,SP,#+12
   \      0x442   0xA802             ADD      R0,SP,#+8
   \      0x444   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x448   0xE7F2             B.N      ??load_38
   1023                //#endif
   1024          
   1025                #if DISABLED(ULTIPANEL)
   1026                  int lcd_preheat_hotend_temp[2], lcd_preheat_bed_temp[2], lcd_preheat_fan_speed[2];
   1027                #endif
   1028          
   1029                EEPROM_READ(lcd_preheat_hotend_temp);
   1030                EEPROM_READ(lcd_preheat_bed_temp);
   1031                EEPROM_READ(lcd_preheat_fan_speed);
   1032          
   1033                //EEPROM_ASSERT(
   1034                //  WITHIN(lcd_preheat_fan_speed, 0, 255),
   1035                //  "lcd_preheat_fan_speed out of range"
   1036                //);
   1037          
   1038          #if 0	/*--mks cfg begin--*/
   1039          #if ENABLED(PIDTEMP)
   1040            for (uint8_t e = 0; e < MAX_EXTRUDERS; e++) {
   1041          	EEPROM_READ(dummy); // Kp
   1042          	if (e < HOTENDS && dummy != DUMMY_PID_VALUE) {
   1043          	  // do not need to scale PID values as the values in EEPROM are already scaled
   1044          	  PID_PARAM(Kp, e) = dummy;
   1045          	  EEPROM_READ(PID_PARAM(Ki, e));
   1046          	  EEPROM_READ(PID_PARAM(Kd, e));
   1047          	  #if ENABLED(PID_EXTRUSION_SCALING)
   1048          		EEPROM_READ(PID_PARAM(Kc, e));
   1049          	  #else
   1050          		EEPROM_READ(dummy);
   1051          	  #endif
   1052          	}
   1053          	else {
   1054          	  for (uint8_t q=3; q--;) EEPROM_READ(dummy); // Ki, Kd, Kc
   1055          	}
   1056            }
   1057          #else // !PIDTEMP
   1058            // 4 x 4 = 16 slots for PID parameters
   1059            for (uint8_t q = MAX_EXTRUDERS * 4; q--;) EEPROM_READ(dummy);  // Kp, Ki, Kd, Kc
   1060          #endif // !PIDTEMP
   1061          #endif 
   1062                //#if ENABLED(PIDTEMP)	/*--mks cfg--*/
   1063                if(PIDTEMP){
   1064                  for (uint8_t e = 0; e < MAX_EXTRUDERS; e++) {
   1065                    EEPROM_READ(dummy); // Kp
   1066                    if (e < HOTENDS && dummy != DUMMY_PID_VALUE) {
   1067                      // do not need to scale PID values as the values in EEPROM are already scaled
   1068                      PID_PARAM(Kp, e) = dummy;
   1069                      EEPROM_READ(PID_PARAM(Ki, e));
   1070                      EEPROM_READ(PID_PARAM(Kd, e));
   1071                      #if ENABLED(PID_EXTRUSION_SCALING)
   1072                        EEPROM_READ(PID_PARAM(Kc, e));
   1073                      #else
   1074                        EEPROM_READ(dummy);
   1075                      #endif
   1076                    }
   1077                    else {
   1078                      for (uint8_t q=3; q--;) EEPROM_READ(dummy); // Ki, Kd, Kc
   \                     ??load_39: (+1)
   \      0x44A   0x2204             MOVS     R2,#+4
   \      0x44C   0xA903             ADD      R1,SP,#+12
   \      0x44E   0xA802             ADD      R0,SP,#+8
   \      0x450   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \                     ??load_40: (+1)
   \      0x454   0x4648             MOV      R0,R9
   \      0x456   0xF1A0 0x0901      SUB      R9,R0,#+1
   \      0x45A   0xB2C0             UXTB     R0,R0
   \      0x45C   0x2800             CMP      R0,#+0
   \      0x45E   0xD1F4             BNE.N    ??load_39
   \                     ??load_41: (+1)
   \      0x460   0x2001             MOVS     R0,#+1
   \                     ??load_42: (+1)
   \      0x462   0x2800             CMP      R0,#+0
   \      0x464   0xD12F             BNE.N    ??load_43
   \      0x466   0x2204             MOVS     R2,#+4
   \      0x468   0xA903             ADD      R1,SP,#+12
   \      0x46A   0xA802             ADD      R0,SP,#+8
   \      0x46C   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x470   0x9803             LDR      R0,[SP, #+12]
   \      0x472   0x.... 0x....      LDR.W    R1,??DataTable94_14  ;; 0x453b8000
   \      0x476   0x.... 0x....      BL       __aeabi_cfcmpeq
   \      0x47A   0xD013             BEQ.N    ??load_44
   \      0x47C   0x.... 0x....      LDR.W    R1,??DataTable94_11
   \      0x480   0x6008             STR      R0,[R1, #+0]
   \      0x482   0x2204             MOVS     R2,#+4
   \      0x484   0x.... 0x....      LDR.W    R1,??DataTable94_12
   \      0x488   0xA802             ADD      R0,SP,#+8
   \      0x48A   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x48E   0x2204             MOVS     R2,#+4
   \      0x490   0x....             LDR.N    R1,??DataTable94_13
   \      0x492   0xA802             ADD      R0,SP,#+8
   \      0x494   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x498   0x2204             MOVS     R2,#+4
   \      0x49A   0xA903             ADD      R1,SP,#+12
   \      0x49C   0xA802             ADD      R0,SP,#+8
   \      0x49E   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x4A2   0xE7DD             B.N      ??load_41
   \                     ??load_44: (+1)
   \      0x4A4   0xF04F 0x0903      MOV      R9,#+3
   \      0x4A8   0xE7D4             B.N      ??load_40
   1079                    }
   1080                  }
   1081                }else{//#else // !PIDTEMP
   1082                  // 4 x 4 = 16 slots for PID parameters
   1083                  for (uint8_t q = MAX_EXTRUDERS * 4; q--;) EEPROM_READ(dummy);  // Kp, Ki, Kd, Kc
   \                     ??load_45: (+1)
   \      0x4AA   0xF04F 0x0904      MOV      R9,#+4
   \      0x4AE   0xE004             B.N      ??load_46
   \                     ??load_47: (+1)
   \      0x4B0   0x2204             MOVS     R2,#+4
   \      0x4B2   0xA903             ADD      R1,SP,#+12
   \      0x4B4   0xA802             ADD      R0,SP,#+8
   \      0x4B6   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \                     ??load_46: (+1)
   \      0x4BA   0x4648             MOV      R0,R9
   \      0x4BC   0xF1A0 0x0901      SUB      R9,R0,#+1
   \      0x4C0   0xB2C0             UXTB     R0,R0
   \      0x4C2   0x2800             CMP      R0,#+0
   \      0x4C4   0xD1F4             BNE.N    ??load_47
   1084                }//#endif // !PIDTEMP
   1085          	/*--mks cfg end--*/
   1086          
   1087          	
   1088                #if DISABLED(PID_EXTRUSION_SCALING)
   1089                  int lpq_len;
   1090                #endif
   1091                EEPROM_READ(lpq_len);
   \                     ??load_43: (+1)
   \      0x4C6   0x2204             MOVS     R2,#+4
   \      0x4C8   0xA909             ADD      R1,SP,#+36
   \      0x4CA   0xA802             ADD      R0,SP,#+8
   \      0x4CC   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   1092          
   1093          #if 0 /*--mks cfg begin--*/
   1094                #if ENABLED(PIDTEMPBED)
   1095                  EEPROM_READ(dummy); // bedKp
   1096                  if (dummy != DUMMY_PID_VALUE) {
   1097                    thermalManager.bedKp = dummy;
   1098                    EEPROM_READ(thermalManager.bedKi);
   1099                    EEPROM_READ(thermalManager.bedKd);
   1100                  }
   1101                #else
   1102                  for (uint8_t q=3; q--;) EEPROM_READ(dummy); // bedKp, bedKi, bedKd
   1103                #endif
   1104          #endif
   1105          	if(PIDTEMPBED)
   \      0x4D0   0xF898 0x0001      LDRB     R0,[R8, #+1]
   \      0x4D4   0x2800             CMP      R0,#+0
   \      0x4D6   0xD016             BEQ.N    ??load_48
   1106          		{
   1107                  EEPROM_READ(dummy); // bedKp
   \      0x4D8   0x2204             MOVS     R2,#+4
   \      0x4DA   0xA903             ADD      R1,SP,#+12
   \      0x4DC   0xA802             ADD      R0,SP,#+8
   \      0x4DE   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   1108                  if (dummy != DUMMY_PID_VALUE) {
   \      0x4E2   0x9803             LDR      R0,[SP, #+12]
   \      0x4E4   0x....             LDR.N    R1,??DataTable94_14  ;; 0x453b8000
   \      0x4E6   0x.... 0x....      BL       __aeabi_cfcmpeq
   \      0x4EA   0xD01A             BEQ.N    ??load_49
   1109                    thermalManager.bedKp = dummy;
   \      0x4EC   0x....             LDR.N    R1,??DataTable94_15
   \      0x4EE   0x6008             STR      R0,[R1, #+0]
   1110                    EEPROM_READ(thermalManager.bedKi);
   \      0x4F0   0x2204             MOVS     R2,#+4
   \      0x4F2   0x....             LDR.N    R1,??DataTable94_16
   \      0x4F4   0xA802             ADD      R0,SP,#+8
   \      0x4F6   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   1111                    EEPROM_READ(thermalManager.bedKd);
   \      0x4FA   0x2204             MOVS     R2,#+4
   \      0x4FC   0x....             LDR.N    R1,??DataTable94_17
   \      0x4FE   0xA802             ADD      R0,SP,#+8
   \      0x500   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x504   0xE00D             B.N      ??load_49
   1112                  	}
   1113          		}
   1114          	else
   1115          		{
   1116          		for (uint8_t q=3; q--;) EEPROM_READ(dummy); // bedKp, bedKi, bedKd
   \                     ??load_48: (+1)
   \      0x506   0xF04F 0x0903      MOV      R9,#+3
   \      0x50A   0xE004             B.N      ??load_50
   \                     ??load_51: (+1)
   \      0x50C   0x2204             MOVS     R2,#+4
   \      0x50E   0xA903             ADD      R1,SP,#+12
   \      0x510   0xA802             ADD      R0,SP,#+8
   \      0x512   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \                     ??load_50: (+1)
   \      0x516   0x4648             MOV      R0,R9
   \      0x518   0xF1A0 0x0901      SUB      R9,R0,#+1
   \      0x51C   0xB2C0             UXTB     R0,R0
   \      0x51E   0x2800             CMP      R0,#+0
   \      0x520   0xD1F4             BNE.N    ??load_51
   1117          		}
   1118          	/*--mks cfg end--*/
   1119          
   1120                #if !HAS_LCD_CONTRAST
   1121                  int lcd_contrast;
   1122                #endif
   1123                EEPROM_READ(lcd_contrast);
   \                     ??load_49: (+1)
   \      0x522   0x2204             MOVS     R2,#+4
   \      0x524   0xA90B             ADD      R1,SP,#+44
   \      0x526   0xA802             ADD      R0,SP,#+8
   \      0x528   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   1124          
   1125                #if ENABLED(FWRETRACT)
   1126                  EEPROM_READ(autoretract_enabled);
   1127                  EEPROM_READ(retract_length);
   1128                  #if EXTRUDERS > 1
   1129                    EEPROM_READ(retract_length_swap);
   1130                  #else
   1131                    EEPROM_READ(dummy);
   1132                  #endif
   1133                  EEPROM_READ(retract_feedrate_mm_s);
   1134                  EEPROM_READ(retract_zlift);
   1135                  EEPROM_READ(retract_recover_length);
   1136                  #if EXTRUDERS > 1
   1137                    EEPROM_READ(retract_recover_length_swap);
   1138                  #else
   1139                    EEPROM_READ(dummy);
   1140                  #endif
   1141                  EEPROM_READ(retract_recover_feedrate_mm_s);
   1142                #endif // FWRETRACT
   1143          
   1144                EEPROM_READ(volumetric_enabled);
   \      0x52C   0x2201             MOVS     R2,#+1
   \      0x52E   0x....             LDR.N    R1,??DataTable94_18
   \      0x530   0xA802             ADD      R0,SP,#+8
   \      0x532   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   1145          
   1146                for (uint8_t q = 0; q < MAX_EXTRUDERS; q++) {
   \      0x536   0x2000             MOVS     R0,#+0
   \      0x538   0xE008             B.N      ??load_52
   1147                  EEPROM_READ(dummy);
   \                     ??load_53: (+1)
   \      0x53A   0x2204             MOVS     R2,#+4
   \      0x53C   0xA903             ADD      R1,SP,#+12
   \      0x53E   0xA802             ADD      R0,SP,#+8
   \      0x540   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   1148                  if (q < COUNT(filament_size)) filament_size[q] = dummy;
   \      0x544   0x9803             LDR      R0,[SP, #+12]
   \      0x546   0x....             LDR.N    R1,??DataTable94_19
   \      0x548   0x6008             STR      R0,[R1, #+0]
   1149                }
   \      0x54A   0x2001             MOVS     R0,#+1
   \                     ??load_52: (+1)
   \      0x54C   0x2800             CMP      R0,#+0
   \      0x54E   0xD0F4             BEQ.N    ??load_53
   1150          
   1151                uint16_t val;
   1152                #if ENABLED(HAVE_TMC2130)
   1153                  EEPROM_READ(val);
   1154                  #if ENABLED(X_IS_TMC2130)
   1155                    stepperX.setCurrent(val, R_SENSE, HOLD_MULTIPLIER);
   1156                  #endif
   1157                  EEPROM_READ(val);
   1158                  #if ENABLED(Y_IS_TMC2130)
   1159                    stepperY.setCurrent(val, R_SENSE, HOLD_MULTIPLIER);
   1160                  #endif
   1161                  EEPROM_READ(val);
   1162                  #if ENABLED(Z_IS_TMC2130)
   1163                    stepperZ.setCurrent(val, R_SENSE, HOLD_MULTIPLIER);
   1164                  #endif
   1165                  EEPROM_READ(val);
   1166                  #if ENABLED(X2_IS_TMC2130)
   1167                    stepperX2.setCurrent(val, R_SENSE, HOLD_MULTIPLIER);
   1168                  #endif
   1169                  EEPROM_READ(val);
   1170                  #if ENABLED(Y2_IS_TMC2130)
   1171                    stepperY2.setCurrent(val, R_SENSE, HOLD_MULTIPLIER);
   1172                  #endif
   1173                  EEPROM_READ(val);
   1174                  #if ENABLED(Z2_IS_TMC2130)
   1175                    stepperZ2.setCurrent(val, R_SENSE, HOLD_MULTIPLIER);
   1176                  #endif
   1177                  EEPROM_READ(val);
   1178                  #if ENABLED(E0_IS_TMC2130)
   1179                    stepperE0.setCurrent(val, R_SENSE, HOLD_MULTIPLIER);
   1180                  #endif
   1181                  EEPROM_READ(val);
   1182                  #if ENABLED(E1_IS_TMC2130)
   1183                    stepperE1.setCurrent(val, R_SENSE, HOLD_MULTIPLIER);
   1184                  #endif
   1185                  EEPROM_READ(val);
   1186                  #if ENABLED(E2_IS_TMC2130)
   1187                    stepperE2.setCurrent(val, R_SENSE, HOLD_MULTIPLIER);
   1188                  #endif
   1189                  EEPROM_READ(val);
   1190                  #if ENABLED(E3_IS_TMC2130)
   1191                    stepperE3.setCurrent(val, R_SENSE, HOLD_MULTIPLIER);
   1192                  #endif
   1193                  EEPROM_READ(val);
   1194                  #if ENABLED(E4_IS_TMC2130)
   1195                    stepperE4.setCurrent(val, R_SENSE, HOLD_MULTIPLIER);
   1196                  #endif
   1197                #else
   1198                  for (uint8_t q = 0; q < 11; q++) EEPROM_READ(val);
   \      0x550   0xF04F 0x0900      MOV      R9,#+0
   \      0x554   0xE006             B.N      ??load_54
   \                     ??load_55: (+1)
   \      0x556   0x2202             MOVS     R2,#+2
   \      0x558   0xA90A             ADD      R1,SP,#+40
   \      0x55A   0xA802             ADD      R0,SP,#+8
   \      0x55C   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x560   0xF109 0x0901      ADD      R9,R9,#+1
   \                     ??load_54: (+1)
   \      0x564   0x4648             MOV      R0,R9
   \      0x566   0xB2C0             UXTB     R0,R0
   \      0x568   0x280B             CMP      R0,#+11
   \      0x56A   0xDBF4             BLT.N    ??load_55
   1199                #endif
   1200          
   1201                //
   1202                // Linear Advance
   1203                //
   1204          
   1205                #if ENABLED(LIN_ADVANCE)
   1206                  EEPROM_READ(planner.extruder_advance_k);
   1207                  EEPROM_READ(planner.advance_ed_ratio);
   1208                #else
   1209                  EEPROM_READ(dummy);
   \      0x56C   0x2204             MOVS     R2,#+4
   \      0x56E   0xA903             ADD      R1,SP,#+12
   \      0x570   0xA802             ADD      R0,SP,#+8
   \      0x572   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   1210                  EEPROM_READ(dummy);
   \      0x576   0x2204             MOVS     R2,#+4
   \      0x578   0xA903             ADD      R1,SP,#+12
   \      0x57A   0xA802             ADD      R0,SP,#+8
   \      0x57C   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   1211                #endif
   1212          
   1213                if (eeprom_checksum == stored_checksum) {
   \      0x580   0x8868             LDRH     R0,[R5, #+2]
   \      0x582   0xF8BD 0x1006      LDRH     R1,[SP, #+6]
   \      0x586   0x4288             CMP      R0,R1
   \      0x588   0xD133             BNE.N    ??load_56
   1214                  if (eeprom_read_error)
   \      0x58A   0x7868             LDRB     R0,[R5, #+1]
   \      0x58C   0x2800             CMP      R0,#+0
   \      0x58E   0xD012             BEQ.N    ??load_57
   1215                  	{
   1216          			   uint8_t eppr_w1 = 0;
   \      0x590   0x2000             MOVS     R0,#+0
   \      0x592   0xF88D 0x002A      STRB     R0,[SP, #+42]
   1217          			   AT24CXX_Write(0, (uint8_t *)&eppr_w1,1);
   \      0x596   0x2201             MOVS     R2,#+1
   \      0x598   0xF10D 0x012A      ADD      R1,SP,#+42
   \      0x59C   0x.... 0x....      BL       AT24CXX_Write
   1218                  	
   1219                          Running = false;
   \      0x5A0   0x2000             MOVS     R0,#+0
   \      0x5A2   0x.... 0x....      LDR.W    R1,??DataTable95_10
   \      0x5A6   0x7008             STRB     R0,[R1, #+0]
   1220                          kill("eeprom_read_error");
   \      0x5A8   0x.... 0x....      ADR.W    R0,?_8
   \      0x5AC   0x.... 0x....      BL       _Z4killPKc
   1221                    		reset();
   \      0x5B0   0x.... 0x....      BL       _ZN14MarlinSettings5resetEv
   \      0x5B4   0xE037             B.N      ??load_58
   1222                  	}
   1223                  else {
   1224                    postprocess();
   \                     ??load_57: (+1)
   \      0x5B6   0x.... 0x....      BL       _ZN14MarlinSettings11postprocessEv
   1225                    SERIAL_ECHO_START;
   \      0x5BA   0x....             LDR.N    R0,??DataTable94_23
   \      0x5BC   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1226                    SERIAL_ECHO(version);
   \      0x5C0   0x.... 0x....      LDR.W    R0,??report_0
   \      0x5C4   0x7800             LDRB     R0,[R0, #+0]
   \      0x5C6   0x2800             CMP      R0,#+0
   \      0x5C8   0x4631             MOV      R1,R6
   \      0x5CA   0xD104             BNE.N    ??load_59
   \      0x5CC   0x.... 0x....      LDR.W    R0,??DataTable95_11
   \      0x5D0   0x.... 0x....      BL       _ZN12MarlinSerial5printEPKc
   \      0x5D4   0xE003             B.N      ??load_60
   \                     ??load_59: (+1)
   \      0x5D6   0x.... 0x....      LDR.W    R0,??DataTable95_12
   \      0x5DA   0x.... 0x....      BL       _ZN12MarlinSerial5printEPKc
   1227                    SERIAL_ECHOPAIR(" stored settings retrieved (", eeprom_index - (EEPROM_OFFSET));
   \                     ??load_60: (+1)
   \      0x5DE   0x9902             LDR      R1,[SP, #+8]
   \      0x5E0   0x.... 0x....      ADR.W    R0,?_9
   \      0x5E4   0x.... 0x....      BL       _Z17serial_echopair_PPKci
   1228                    SERIAL_ECHOLNPGM(" bytes)");
   \      0x5E8   0x.... 0x....      ADR.W    R0,?_3
   \      0x5EC   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \      0x5F0   0xE019             B.N      ??load_58
   1229                  }
   1230                }
   1231                else 
   1232          	  	{
   1233          		 uint8_t eppr_w2 = 0;
   \                     ??load_56: (+1)
   \      0x5F2   0x2000             MOVS     R0,#+0
   \      0x5F4   0xF88D 0x002A      STRB     R0,[SP, #+42]
   1234          		 AT24CXX_Write(0, (uint8_t *)&eppr_w2,1);
   \      0x5F8   0x2201             MOVS     R2,#+1
   \      0x5FA   0xF10D 0x012A      ADD      R1,SP,#+42
   \      0x5FE   0x.... 0x....      BL       AT24CXX_Write
   1235                  SERIAL_ERROR_START;
   \      0x602   0x.... 0x....      LDR.W    R0,??DataTable95_13
   \      0x606   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1236                  SERIAL_ERRORLNPGM("EEPROM checksum mismatch");
   \      0x60A   0x.... 0x....      ADR.W    R0,?_10
   \      0x60E   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1237                  Running = false;
   \      0x612   0x2000             MOVS     R0,#+0
   \      0x614   0x.... 0x....      LDR.W    R1,??DataTable95_10
   \      0x618   0x7008             STRB     R0,[R1, #+0]
   1238                  kill("EEPROM checksum mis!");
   \      0x61A   0x.... 0x....      ADR.W    R0,?_11
   \      0x61E   0x.... 0x....      BL       _Z4killPKc
   1239                  reset();
   \      0x622   0x.... 0x....      BL       _ZN14MarlinSettings5resetEv
   1240                }
   1241          
   1242                //#if ENABLED(AUTO_BED_LEVELING_UBL)
   1243          	  if(BED_LEVELING_METHOD == AUTO_BED_LEVELING_UBL) 	{
   \                     ??load_58: (+1)
   \      0x626   0xF898 0x000C      LDRB     R0,[R8, #+12]
   \      0x62A   0x2810             CMP      R0,#+16
   \      0x62C   0xD14D             BNE.N    ??load_61
   1244                  ubl.eeprom_start = (eeprom_index + 32) & 0xFFF8; // Pad the end of configuration data so it
   \      0x62E   0x9802             LDR      R0,[SP, #+8]
   \      0x630   0x3020             ADDS     R0,R0,#+32
   \      0x632   0xF020 0x0007      BIC      R0,R0,#0x7
   \      0x636   0x.... 0x....      LDR.W    R1,??DataTable95_14
   \      0x63A   0x8008             STRH     R0,[R1, #+0]
   1245                                                                   // can float up or down a little bit without
   1246                                                                   // disrupting the Unified Bed Leveling data
   1247                  SERIAL_ECHOPGM(" UBL ");
   \      0x63C   0x.... 0x....      ADR.W    R0,?_12
   \      0x640   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1248                  if (!ubl.state.active) SERIAL_ECHO("not ");
   \      0x644   0x....             LDR.N    R6,??DataTable94_6
   \      0x646   0x7830             LDRB     R0,[R6, #+0]
   \      0x648   0x2800             CMP      R0,#+0
   \      0x64A   0xD10F             BNE.N    ??load_62
   \      0x64C   0x.... 0x....      ADR.W    R1,?_13
   \      0x650   0x.... 0x....      LDR.W    R0,??report_0
   \      0x654   0x7800             LDRB     R0,[R0, #+0]
   \      0x656   0x2800             CMP      R0,#+0
   \      0x658   0xD104             BNE.N    ??load_63
   \      0x65A   0x.... 0x....      LDR.W    R0,??DataTable95_11
   \      0x65E   0x.... 0x....      BL       _ZN12MarlinSerial5printEPKc
   \      0x662   0xE003             B.N      ??load_62
   \                     ??load_63: (+1)
   \      0x664   0x.... 0x....      LDR.W    R0,??DataTable95_12
   \      0x668   0x.... 0x....      BL       _ZN12MarlinSerial5printEPKc
   1249                  SERIAL_ECHOLNPGM("active!");
   \                     ??load_62: (+1)
   \      0x66C   0x.... 0x....      ADR.W    R0,?_14
   \      0x670   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1250          
   1251                  if (!ubl.sanity_check()) {
   \      0x674   0x.... 0x....      LDR.W    R8,??DataTable94_20
   \      0x678   0x4640             MOV      R0,R8
   \      0x67A   0x.... 0x....      BL       _ZN20unified_bed_leveling12sanity_checkEv
   \      0x67E   0x2800             CMP      R0,#+0
   \      0x680   0xD104             BNE.N    ??load_64
   1252                    SERIAL_ECHOLNPGM("\nUnified Bed Leveling system initialized.\n");
   \      0x682   0x.... 0x....      ADR.W    R0,?_15
   \      0x686   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \      0x68A   0xE006             B.N      ??load_65
   1253                  }
   1254                  else {
   1255                    SERIAL_PROTOCOLPGM("?Unable to enable Unified Bed Leveling system.\n");
   \                     ??load_64: (+1)
   \      0x68C   0x.... 0x....      ADR.W    R0,?_16
   \      0x690   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1256                    ubl.reset();
   \      0x694   0x4640             MOV      R0,R8
   \      0x696   0x.... 0x....      BL       _ZN20unified_bed_leveling5resetEv
   1257                  }
   1258          
   1259                  if (ubl.state.eeprom_storage_slot >= 0) {
   \                     ??load_65: (+1)
   \      0x69A   0xF996 0x1008      LDRSB    R1,[R6, #+8]
   \      0x69E   0x0008             MOVS     R0,R1
   \      0x6A0   0x4640             MOV      R0,R8
   \      0x6A2   0xD40C             BMI.N    ??load_66
   1260                    ubl.load_mesh(ubl.state.eeprom_storage_slot);
   \      0x6A4   0x.... 0x....      BL       _ZN20unified_bed_leveling9load_meshEs
   1261                    SERIAL_ECHOPAIR("Mesh ", ubl.state.eeprom_storage_slot);
   \      0x6A8   0xF996 0x1008      LDRSB    R1,[R6, #+8]
   \      0x6AC   0x.... 0x....      ADR.W    R0,?_17
   \      0x6B0   0x.... 0x....      BL       _Z17serial_echopair_PPKci
   1262                    SERIAL_ECHOLNPGM(" loaded from storage.");
   \      0x6B4   0x.... 0x....      ADR.W    R0,?_18
   \      0x6B8   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \      0x6BC   0xE005             B.N      ??load_61
   1263                  }
   1264                  else {
   1265                    ubl.reset();
   \                     ??load_66: (+1)
   \      0x6BE   0x.... 0x....      BL       _ZN20unified_bed_leveling5resetEv
   1266                    SERIAL_ECHOLNPGM("UBL System reset()");
   \      0x6C2   0x.... 0x....      ADR.W    R0,?_19
   \      0x6C6   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1267                  }
   1268          	  	}
   1269                //#endif
   1270                free(tmp1);
   \                     ??load_61: (+1)
   \      0x6CA   0x980C             LDR      R0,[SP, #+48]
   \      0x6CC   0x.... 0x....      BL       free
   1271                free(tmp2);
   \      0x6D0   0x4620             MOV      R0,R4
   \      0x6D2   0x.... 0x....      BL       free
   1272                free(tmp3);
   \      0x6D6   0x4638             MOV      R0,R7
   \      0x6D8   0x.... 0x....      BL       free
   1273              }
   1274          
   1275              #if ENABLED(EEPROM_CHITCHAT)
   1276                report();
   \                     ??load_2: (+1)
   \      0x6DC   0x2000             MOVS     R0,#+0
   \      0x6DE   0x.... 0x....      BL       _ZN14MarlinSettings6reportEb
   1277              #endif
   1278              return !eeprom_read_error;
   \      0x6E2   0x7868             LDRB     R0,[R5, #+1]
   \      0x6E4   0x1E40             SUBS     R0,R0,#+1
   \      0x6E6   0x4180             SBCS     R0,R0,R0
   \      0x6E8   0x0FC0             LSRS     R0,R0,#+31
   \      0x6EA   0xB00D             ADD      SP,SP,#+52
   \      0x6EC   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   \                     ??load_8: (+1)
   \      0x6F0   0x930C             STR      R3,[SP, #+48]
   \      0x6F2   0x4614             MOV      R4,R2
   \      0x6F4   0x460F             MOV      R7,R1
   \      0x6F6   0x2204             MOVS     R2,#+4
   \      0x6F8   0x.... 0x....      LDR.W    R1,??DataTable95_15
   \      0x6FC   0xA802             ADD      R0,SP,#+8
   \      0x6FE   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x702   0x2204             MOVS     R2,#+4
   \      0x704   0x.... 0x....      LDR.W    R1,??DataTable95_16
   \      0x708   0xA802             ADD      R0,SP,#+8
   \      0x70A   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x70E   0x2204             MOVS     R2,#+4
   \      0x710   0x.... 0x....      LDR.W    R1,??DataTable95_17
   \      0x714   0xA802             ADD      R0,SP,#+8
   \      0x716   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x71A   0x2204             MOVS     R2,#+4
   \      0x71C   0x.... 0x....      LDR.W    R1,??DataTable95_18
   \      0x720   0xA802             ADD      R0,SP,#+8
   \      0x722   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x726   0x2204             MOVS     R2,#+4
   \      0x728   0x.... 0x....      LDR.W    R1,??DataTable95_19
   \      0x72C   0xA802             ADD      R0,SP,#+8
   \      0x72E   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x732   0x2204             MOVS     R2,#+4
   \      0x734   0x.... 0x....      LDR.W    R1,??DataTable95_20
   \      0x738   0xA802             ADD      R0,SP,#+8
   \      0x73A   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x73E   0x2210             MOVS     R2,#+16
   \      0x740   0x.... 0x....      LDR.W    R1,??DataTable95_21
   \      0x744   0xA802             ADD      R0,SP,#+8
   \      0x746   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x74A   0x.... 0x....      LDR.W    R10,??DataTable95_22
   \      0x74E   0x220C             MOVS     R2,#+12
   \      0x750   0x4651             MOV      R1,R10
   \      0x752   0xA802             ADD      R0,SP,#+8
   \      0x754   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x758   0x.... 0x....      LDR.W    R9,??report_0+0xC
   \      0x75C   0xF109 0x0834      ADD      R8,R9,#+52
   \      0x760   0xF9B8 0xB024      LDRSH    R11,[R8, #+36]
   \      0x764   0xF1BB 0x0F02      CMP      R11,#+2
   \      0x768   0xD10C             BNE.N    ??load_67
   \      0x76A   0x2000             MOVS     R0,#+0
   \      0x76C   0xF8CA 0x0000      STR      R0,[R10, #+0]
   \      0x770   0xF8CA 0x0004      STR      R0,[R10, #+4]
   \      0x774   0xF8DA 0x0008      LDR      R0,[R10, #+8]
   \      0x778   0xF8D8 0x101C      LDR      R1,[R8, #+28]
   \      0x77C   0x.... 0x....      BL       __aeabi_fsub
   \      0x780   0xF8CA 0x0008      STR      R0,[R10, #+8]
   \                     ??load_67: (+1)
   \      0x784   0xF1BB 0x0F02      CMP      R11,#+2
   \      0x788   0xF43F 0xACFE      BEQ.W    ??load_17
   \      0x78C   0xF898 0x000C      LDRB     R0,[R8, #+12]
   \      0x790   0x06C0             LSLS     R0,R0,#+27
   \      0x792   0xF57F 0xACF9      BPL.W    ??load_17
   \      0x796   0x2204             MOVS     R2,#+4
   \      0x798   0x.... 0x....      LDR.W    R1,??DataTable95_23
   \      0x79C   0xA802             ADD      R0,SP,#+8
   \      0x79E   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x7A2   0xE4F6             B.N      ??load_18
   \                     ??load_37: (+1)
   \      0x7A4   0x2208             MOVS     R2,#+8
   \      0x7A6   0x....             LDR.N    R1,??DataTable94_21
   \      0x7A8   0xA802             ADD      R0,SP,#+8
   \      0x7AA   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x7AE   0x2208             MOVS     R2,#+8
   \      0x7B0   0x....             LDR.N    R1,??DataTable94_22
   \      0x7B2   0xA802             ADD      R0,SP,#+8
   \      0x7B4   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x7B8   0x2208             MOVS     R2,#+8
   \      0x7BA   0x.... 0x....      LDR.W    R1,??DataTable95
   \      0x7BE   0xA802             ADD      R0,SP,#+8
   \      0x7C0   0x.... 0x....      BL       _ZN14MarlinSettings9read_dataERiPht
   \      0x7C4   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \      0x7C8   0x2800             CMP      R0,#+0
   \      0x7CA   0xF43F 0xAE6E      BEQ.W    ??load_45
   \      0x7CE   0x2000             MOVS     R0,#+0
   \      0x7D0   0xE647             B.N      ??load_42
   1279            }

   \                                 In section .text, align 4, keep-with-next
   \                     `MarlinSettings::load(){10}::def1`:
   \        0x0   0x4417'8000        DC32 44178000H, 44178000H, 4491E000H, 44820000H
   \              0x4417'8000  
   \              0x4491'E000  
   \              0x4482'0000  

   \                                 In section .text, align 4, keep-with-next
   \                     `MarlinSettings::load(){10}::def2`:
   \        0x0   0x4220'0000        DC32 42200000H, 42200000H, 41200000H, 428C0000H
   \              0x4220'0000  
   \              0x4120'0000  
   \              0x428C'0000  

   \                                 In section .text, align 4, keep-with-next
   \                     `MarlinSettings::load(){10}::def3`:
   \        0x0   0x0000'03E8        DC32 1000, 1000, 100, 1000
   \              0x0000'03E8  
   \              0x0000'0064  
   \              0x0000'03E8  
   1280          
   1281          #else // !EEPROM_SETTINGS
   1282          
   1283            bool MarlinSettings::save() {
   1284              SERIAL_ERROR_START;
   1285              SERIAL_ERRORLNPGM("EEPROM disabled");
   1286              return false;
   1287            }
   1288          
   1289          #endif // !EEPROM_SETTINGS
   1290          
   1291          /**
   1292           * M502 - Reset Configuration
   1293           */

   \                                 In section .text, align 2, keep-with-next
   1294          void MarlinSettings::reset() {
   \                     _ZN14MarlinSettings5resetEv: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   1295          
   1296            //card.mksReset();
   1297          	
   1298            const float tmp1[] = DEFAULT_AXIS_STEPS_PER_UNIT, tmp2[] = DEFAULT_MAX_FEEDRATE;
   1299            const uint32_t tmp3[] = DEFAULT_MAX_ACCELERATION;
   1300            LOOP_XYZE_N(i) {
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0xE014             B.N      ??reset_0
   1301              planner.axis_steps_per_mm[i]          = tmp1[i < COUNT(tmp1) ? i : COUNT(tmp1) - 1];
   1302              planner.max_feedrate_mm_s[i]          = tmp2[i < COUNT(tmp2) ? i : COUNT(tmp2) - 1];
   1303              planner.max_acceleration_mm_per_s2[i] = tmp3[i < COUNT(tmp3) ? i : COUNT(tmp3) - 1];
   \                     ??reset_1: (+1)
   \        0x6   0x2103             MOVS     R1,#+3
   \        0x8   0xE00A             B.N      ??reset_2
   \                     ??reset_3: (+1)
   \        0xA   0x2103             MOVS     R1,#+3
   \                     ??reset_4: (+1)
   \        0xC   0x.... 0x....      ADR.W    R2,`MarlinSettings::reset()::tmp2`
   \       0x10   0xF852 0x1021      LDR      R1,[R2, R1, LSL #+2]
   \       0x14   0x....             LDR.N    R2,??DataTable95_5
   \       0x16   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
   \       0x1A   0x2804             CMP      R0,#+4
   \       0x1C   0xD2F3             BCS.N    ??reset_1
   \       0x1E   0x4601             MOV      R1,R0
   \                     ??reset_2: (+1)
   \       0x20   0x.... 0x....      ADR.W    R2,`MarlinSettings::reset()::tmp3`
   \       0x24   0xF852 0x1021      LDR      R1,[R2, R1, LSL #+2]
   \       0x28   0x....             LDR.N    R2,??DataTable95_3
   \       0x2A   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
   \       0x2E   0x1C40             ADDS     R0,R0,#+1
   \                     ??reset_0: (+1)
   \       0x30   0x2804             CMP      R0,#+4
   \       0x32   0xDA27             BGE.N    ??reset_5
   \       0x34   0xD201             BCS.N    ??reset_6
   \       0x36   0x4601             MOV      R1,R0
   \       0x38   0xE000             B.N      ??reset_7
   \                     ??reset_6: (+1)
   \       0x3A   0x2103             MOVS     R1,#+3
   \                     ??reset_7: (+1)
   \       0x3C   0x.... 0x....      ADR.W    R2,`MarlinSettings::reset()::tmp1`
   \       0x40   0xF852 0x1021      LDR      R1,[R2, R1, LSL #+2]
   \       0x44   0x....             LDR.N    R2,??DataTable95_4
   \       0x46   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
   \       0x4A   0x2804             CMP      R0,#+4
   \       0x4C   0xD2DD             BCS.N    ??reset_3
   \       0x4E   0x4601             MOV      R1,R0
   \       0x50   0xE7DC             B.N      ??reset_4
   1304            }
   1305          
   1306            planner.acceleration = DEFAULT_ACCELERATION;
   1307            planner.retract_acceleration = DEFAULT_RETRACT_ACCELERATION;
   1308            planner.travel_acceleration = DEFAULT_TRAVEL_ACCELERATION;
   1309            planner.min_feedrate_mm_s = DEFAULT_MINIMUMFEEDRATE;
   1310            planner.min_segment_time = DEFAULT_MINSEGMENTTIME;
   1311            planner.min_travel_feedrate_mm_s = DEFAULT_MINTRAVELFEEDRATE;
   1312            planner.max_jerk[X_AXIS] = DEFAULT_XJERK;
   1313            planner.max_jerk[Y_AXIS] = DEFAULT_YJERK;
   1314            planner.max_jerk[Z_AXIS] = DEFAULT_ZJERK;
   1315            planner.max_jerk[E_AXIS] = DEFAULT_EJERK;
   1316          
   1317            //#if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
   1318            if((MACHINETPYE != DELTA) && (BED_LEVELING_METHOD&HAS_FADE))	//mks_delta
   1319              planner.z_fade_height = 0.0;
   1320            //#endif
   1321          
   1322            #if HAS_HOME_OFFSET
   1323              ZERO(home_offset);
   1324            #endif
   1325          
   1326            #if HOTENDS > 1
   1327              constexpr float tmp4[XYZ][HOTENDS] = {
   1328                HOTEND_OFFSET_X,
   1329                HOTEND_OFFSET_Y
   1330                #ifdef HOTEND_OFFSET_Z
   1331                  , HOTEND_OFFSET_Z
   1332                #else
   1333                  , { 0 }
   1334                #endif
   1335              };
   1336              static_assert(
   1337                tmp4[X_AXIS][0] == 0 && tmp4[Y_AXIS][0] == 0 && tmp4[Z_AXIS][0] == 0,
   1338                "Offsets for the first hotend must be 0.0."
   1339              );
   1340              LOOP_XYZ(i) HOTEND_LOOP() hotend_offset[i][e] = tmp4[i][e];
   1341            #endif
   1342          
   1343            // Applies to all MBL and ABL
   1344            //#if HAS_LEVELING
   1345            if(BED_LEVELING_METHOD&HAS_LEVELING)
   1346              reset_bed_level();
   1347            //#endif
   1348          
   1349            #if HAS_BED_PROBE
   1350              zprobe_zoffset = Z_PROBE_OFFSET_FROM_EXTRUDER;
   1351            #endif
   1352          
   1353           // #if ENABLED(DELTA)
   1354           
   1355            if(MACHINETPYE == DELTA) {
   1356              const float adj[ABC] = DELTA_ENDSTOP_ADJ,
   1357                          dta[ABC] = DELTA_TOWER_ANGLE_TRIM;
   1358              COPY(endstop_adj, adj);
   1359              delta_radius = DELTA_RADIUS;
   1360              delta_diagonal_rod = DELTA_DIAGONAL_ROD;
   1361              delta_segments_per_second = DELTA_SEGMENTS_PER_SECOND;
   1362              delta_calibration_radius = DELTA_CALIBRATION_RADIUS;
   1363              delta_tower_angle_trim[A_AXIS] = dta[A_AXIS] - dta[C_AXIS];
   1364              delta_tower_angle_trim[B_AXIS] = dta[B_AXIS] - dta[C_AXIS];
   1365              home_offset[Z_AXIS] = 0;
   1366            	}
   1367            /*
   1368            #elif ENABLED(Z_DUAL_ENDSTOPS)
   1369          
   1370              float z_endstop_adj =
   1371                #ifdef Z_DUAL_ENDSTOPS_ADJUSTMENT
   1372                  Z_DUAL_ENDSTOPS_ADJUSTMENT
   1373                #else
   1374                  0
   1375                #endif
   1376              ;
   1377          
   1378            #endif	*/
   1379          
   1380            #if ENABLED(ULTIPANEL)
   1381              lcd_preheat_hotend_temp[0] = PREHEAT_1_TEMP_HOTEND;
   1382              lcd_preheat_hotend_temp[1] = PREHEAT_2_TEMP_HOTEND;
   1383              lcd_preheat_bed_temp[0] = PREHEAT_1_TEMP_BED;
   1384              lcd_preheat_bed_temp[1] = PREHEAT_2_TEMP_BED;
   1385              lcd_preheat_fan_speed[0] = PREHEAT_1_FAN_SPEED;
   1386              lcd_preheat_fan_speed[1] = PREHEAT_2_FAN_SPEED;
   1387            #endif
   1388          
   1389            #if HAS_LCD_CONTRAST
   1390              lcd_contrast = DEFAULT_LCD_CONTRAST;
   1391            #endif
   1392          
   1393          //  #if ENABLED(PIDTEMP) /*--mks cfg--*/
   1394          	if(PIDTEMP) {
   1395              #if ENABLED(PID_PARAMS_PER_HOTEND) && HOTENDS > 1
   1396                HOTEND_LOOP()
   1397              #endif
   1398              {
   1399                PID_PARAM(Kp, e) = DEFAULT_Kp;
   1400                PID_PARAM(Ki, e) = scalePID_i(DEFAULT_Ki);
   1401                PID_PARAM(Kd, e) = scalePID_d(DEFAULT_Kd);
   1402                #if ENABLED(PID_EXTRUSION_SCALING)
   1403                  PID_PARAM(Kc, e) = DEFAULT_Kc;
   1404                #endif
   1405              }
   1406              #if ENABLED(PID_EXTRUSION_SCALING)
   1407                lpq_len = 20; // default last-position-queue size
   1408              #endif
   1409            }//#endif // PIDTEMP
   1410          
   1411            //#if ENABLED(PIDTEMPBED)	/*--mks cfg--*/
   1412            if(PIDTEMPBED) {
   1413              thermalManager.bedKp = DEFAULT_bedKp;
   1414              thermalManager.bedKi = scalePID_i(DEFAULT_bedKi);
   1415              thermalManager.bedKd = scalePID_d(DEFAULT_bedKd);
   1416            }//#endif
   1417          
   1418            #if ENABLED(FWRETRACT)
   1419              autoretract_enabled = false;
   1420              retract_length = RETRACT_LENGTH;
   1421              #if EXTRUDERS > 1
   1422                retract_length_swap = RETRACT_LENGTH_SWAP;
   1423              #endif
   1424              retract_feedrate_mm_s = RETRACT_FEEDRATE;
   1425              retract_zlift = RETRACT_ZLIFT;
   1426              retract_recover_length = RETRACT_RECOVER_LENGTH;
   1427              #if EXTRUDERS > 1
   1428                retract_recover_length_swap = RETRACT_RECOVER_LENGTH_SWAP;
   1429              #endif
   1430              retract_recover_feedrate_mm_s = RETRACT_RECOVER_FEEDRATE;
   1431            #endif
   1432          
   1433            volumetric_enabled =
   1434              #if ENABLED(VOLUMETRIC_DEFAULT_ON)
   1435                true
   1436              #else
   1437                false
   1438              #endif
   1439            ;
   1440            for (uint8_t q = 0; q < COUNT(filament_size); q++)
   1441              filament_size[q] = DEFAULT_NOMINAL_FILAMENT_DIA;
   \                     ??reset_8: (+1)
   \       0x52   0x....             LDR.N    R0,??DataTable95_24  ;; 0x40400000
   \       0x54   0x6008             STR      R0,[R1, #+0]
   \       0x56   0x2001             MOVS     R0,#+1
   \                     ??reset_9: (+1)
   \       0x58   0x2800             CMP      R0,#+0
   \       0x5A   0xD0FA             BEQ.N    ??reset_8
   1442          
   1443            endstops.enable_globally(
   1444              #if ENABLED(ENDSTOPS_ALWAYS_ON_DEFAULT)
   1445                (true)
   1446              #else
   1447                (false)
   1448              #endif
   1449            );
   \       0x5C   0x2000             MOVS     R0,#+0
   \       0x5E   0x.... 0x....      BL       _ZN8Endstops15enable_globallyEb
   1450          
   1451            #if ENABLED(HAVE_TMC2130)
   1452              #if ENABLED(X_IS_TMC2130)
   1453                stepperX.setCurrent(X_CURRENT, R_SENSE, HOLD_MULTIPLIER);
   1454              #endif
   1455              #if ENABLED(Y_IS_TMC2130)
   1456                stepperY.setCurrent(Y_CURRENT, R_SENSE, HOLD_MULTIPLIER);
   1457              #endif
   1458              #if ENABLED(Z_IS_TMC2130)
   1459                stepperZ.setCurrent(Z_CURRENT, R_SENSE, HOLD_MULTIPLIER);
   1460              #endif
   1461              #if ENABLED(X2_IS_TMC2130)
   1462                stepperX2.setCurrent(X2_CURRENT, R_SENSE, HOLD_MULTIPLIER);
   1463              #endif
   1464              #if ENABLED(Y2_IS_TMC2130)
   1465                stepperY2.setCurrent(Y2_CURRENT, R_SENSE, HOLD_MULTIPLIER);
   1466              #endif
   1467              #if ENABLED(Z2_IS_TMC2130)
   1468                stepperZ2.setCurrent(Z2_CURRENT, R_SENSE, HOLD_MULTIPLIER);
   1469              #endif
   1470              #if ENABLED(E0_IS_TMC2130)
   1471                stepperE0.setCurrent(E0_CURRENT, R_SENSE, HOLD_MULTIPLIER);
   1472              #endif
   1473              #if ENABLED(E1_IS_TMC2130)
   1474                stepperE1.setCurrent(E1_CURRENT, R_SENSE, HOLD_MULTIPLIER);
   1475              #endif
   1476              #if ENABLED(E2_IS_TMC2130)
   1477                stepperE2.setCurrent(E2_CURRENT, R_SENSE, HOLD_MULTIPLIER);
   1478              #endif
   1479              #if ENABLED(E3_IS_TMC2130)
   1480                stepperE3.setCurrent(E3_CURRENT, R_SENSE, HOLD_MULTIPLIER);
   1481              #endif
   1482            #endif
   1483          
   1484            #if ENABLED(LIN_ADVANCE)
   1485              planner.extruder_advance_k = LIN_ADVANCE_K;
   1486              planner.advance_ed_ratio = LIN_ADVANCE_E_D_RATIO;
   1487            #endif
   1488          
   1489            //#if ENABLED(AUTO_BED_LEVELING_UBL)
   1490            if(BED_LEVELING_METHOD == AUTO_BED_LEVELING_UBL)
   \       0x62   0x7B20             LDRB     R0,[R4, #+12]
   \       0x64   0x2810             CMP      R0,#+16
   \       0x66   0xD102             BNE.N    ??reset_10
   1491              ubl.reset();
   \       0x68   0x....             LDR.N    R0,??DataTable95_25
   \       0x6A   0x.... 0x....      BL       _ZN20unified_bed_leveling5resetEv
   1492           // #endif
   1493          
   1494            postprocess();
   \                     ??reset_10: (+1)
   \       0x6E   0x.... 0x....      BL       _ZN14MarlinSettings11postprocessEv
   1495          
   1496            SERIAL_ECHO_START;
   \       0x72   0x....             LDR.N    R0,??DataTable95_26
   \       0x74   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1497            SERIAL_ECHOLNPGM("Hardcoded Default Settings Loaded");
   \       0x78   0x.... 0x....      ADR.W    R0,?_0
   \       0x7C   0xE8BD 0x4070      POP      {R4-R6,LR}
   \       0x80   0x.... 0x....      B.W      _Z14serialprintPGMPKc
   \                     ??reset_5: (+1)
   \       0x84   0x....             LDR.N    R0,??DataTable95_27  ;; 0x447a0000
   \       0x86   0x....             LDR.N    R1,??DataTable95_15
   \       0x88   0x6008             STR      R0,[R1, #+0]
   \       0x8A   0x....             LDR.N    R1,??DataTable95_16
   \       0x8C   0x6008             STR      R0,[R1, #+0]
   \       0x8E   0x....             LDR.N    R1,??DataTable95_17
   \       0x90   0x6008             STR      R0,[R1, #+0]
   \       0x92   0x2000             MOVS     R0,#+0
   \       0x94   0x....             LDR.N    R1,??DataTable95_18
   \       0x96   0x6008             STR      R0,[R1, #+0]
   \       0x98   0xF644 0x6020      MOVW     R0,#+20000
   \       0x9C   0x....             LDR.N    R1,??DataTable95_20
   \       0x9E   0x6008             STR      R0,[R1, #+0]
   \       0xA0   0x2000             MOVS     R0,#+0
   \       0xA2   0x....             LDR.N    R1,??DataTable95_19
   \       0xA4   0x6008             STR      R0,[R1, #+0]
   \       0xA6   0x....             LDR.N    R0,??DataTable95_21
   \       0xA8   0xF04F 0x4180      MOV      R1,#+1073741824
   \       0xAC   0x6001             STR      R1,[R0, #+0]
   \       0xAE   0x6041             STR      R1,[R0, #+4]
   \       0xB0   0x....             LDR.N    R1,??DataTable95_28  ;; 0x3ecccccd
   \       0xB2   0x6081             STR      R1,[R0, #+8]
   \       0xB4   0xF04F 0x517C      MOV      R1,#+1056964608
   \       0xB8   0x60C1             STR      R1,[R0, #+12]
   \       0xBA   0x....             LDR.N    R4,??DataTable95_29
   \       0xBC   0x7B26             LDRB     R6,[R4, #+12]
   \       0xBE   0xF9B4 0x0024      LDRSH    R0,[R4, #+36]
   \       0xC2   0x2802             CMP      R0,#+2
   \       0xC4   0xD004             BEQ.N    ??reset_11
   \       0xC6   0x06F0             LSLS     R0,R6,#+27
   \       0xC8   0xD502             BPL.N    ??reset_11
   \       0xCA   0x2000             MOVS     R0,#+0
   \       0xCC   0x....             LDR.N    R1,??DataTable95_23
   \       0xCE   0x6008             STR      R0,[R1, #+0]
   \                     ??reset_11: (+1)
   \       0xD0   0x....             LDR.N    R5,??DataTable95_22
   \       0xD2   0x2200             MOVS     R2,#+0
   \       0xD4   0x210C             MOVS     R1,#+12
   \       0xD6   0x4628             MOV      R0,R5
   \       0xD8   0x.... 0x....      BL       __aeabi_memset4
   \       0xDC   0xF016 0x0F3E      TST      R6,#0x3E
   \       0xE0   0xD001             BEQ.N    ??reset_12
   \       0xE2   0x.... 0x....      BL       _Z15reset_bed_levelv
   \                     ??reset_12: (+1)
   \       0xE6   0x....             LDR.N    R0,??DataTable95_30  ;; 0x3f4ccccd
   \       0xE8   0x....             LDR.N    R1,??DataTable95_31
   \       0xEA   0x6008             STR      R0,[R1, #+0]
   \       0xEC   0xF9B4 0x0024      LDRSH    R0,[R4, #+36]
   \       0xF0   0x2802             CMP      R0,#+2
   \       0xF2   0xD114             BNE.N    ??reset_13
   \       0xF4   0x220C             MOVS     R2,#+12
   \       0xF6   0x.... 0x....      ADR.W    R1,`MarlinSettings::reset(){3}::adj`
   \       0xFA   0x....             LDR.N    R0,??DataTable95_32
   \       0xFC   0x.... 0x....      BL       __aeabi_memcpy4
   \      0x100   0x2000             MOVS     R0,#+0
   \      0x102   0x....             LDR.N    R1,??DataTable95_8
   \      0x104   0x6008             STR      R0,[R1, #+0]
   \      0x106   0x....             LDR.N    R1,??DataTable95_9
   \      0x108   0x6008             STR      R0,[R1, #+0]
   \      0x10A   0x....             LDR.N    R1,??DataTable95_33
   \      0x10C   0x6008             STR      R0,[R1, #+0]
   \      0x10E   0x....             LDR.N    R1,??DataTable95_34
   \      0x110   0x6008             STR      R0,[R1, #+0]
   \      0x112   0x....             LDR.N    R0,??DataTable95_35
   \      0x114   0x2100             MOVS     R1,#+0
   \      0x116   0x6001             STR      R1,[R0, #+0]
   \      0x118   0x6041             STR      R1,[R0, #+4]
   \      0x11A   0x4608             MOV      R0,R1
   \      0x11C   0x60A8             STR      R0,[R5, #+8]
   \                     ??reset_13: (+1)
   \      0x11E   0x....             LDR.N    R0,??DataTable95_36
   \      0x120   0x21B4             MOVS     R1,#+180
   \      0x122   0x6001             STR      R1,[R0, #+0]
   \      0x124   0x21F0             MOVS     R1,#+240
   \      0x126   0x6041             STR      R1,[R0, #+4]
   \      0x128   0x....             LDR.N    R0,??DataTable95_37
   \      0x12A   0x2146             MOVS     R1,#+70
   \      0x12C   0x6001             STR      R1,[R0, #+0]
   \      0x12E   0x216E             MOVS     R1,#+110
   \      0x130   0x6041             STR      R1,[R0, #+4]
   \      0x132   0x....             LDR.N    R0,??DataTable95
   \      0x134   0x2100             MOVS     R1,#+0
   \      0x136   0x6001             STR      R1,[R0, #+0]
   \      0x138   0x6041             STR      R1,[R0, #+4]
   \      0x13A   0x7820             LDRB     R0,[R4, #+0]
   \      0x13C   0x2800             CMP      R0,#+0
   \      0x13E   0xD008             BEQ.N    ??reset_14
   \      0x140   0x....             LDR.N    R0,??DataTable95_38  ;; 0x41b1999a
   \      0x142   0x....             LDR.N    R1,??DataTable95_39
   \      0x144   0x6008             STR      R0,[R1, #+0]
   \      0x146   0x....             LDR.N    R0,??DataTable95_40  ;; 0x3e3531a6
   \      0x148   0x....             LDR.N    R1,??DataTable95_41
   \      0x14A   0x6008             STR      R0,[R1, #+0]
   \      0x14C   0x....             LDR.N    R0,??DataTable95_42  ;; 0x442df340
   \      0x14E   0x....             LDR.N    R1,??DataTable95_43
   \      0x150   0x6008             STR      R0,[R1, #+0]
   \                     ??reset_14: (+1)
   \      0x152   0x7860             LDRB     R0,[R4, #+1]
   \      0x154   0x2800             CMP      R0,#+0
   \      0x156   0xD008             BEQ.N    ??reset_15
   \      0x158   0x....             LDR.N    R0,??DataTable95_44  ;; 0x41200000
   \      0x15A   0x....             LDR.N    R1,??DataTable95_45
   \      0x15C   0x6008             STR      R0,[R1, #+0]
   \      0x15E   0x....             LDR.N    R0,??DataTable95_46  ;; 0x3b76f5eb
   \      0x160   0x....             LDR.N    R1,??DataTable95_47
   \      0x162   0x6008             STR      R0,[R1, #+0]
   \      0x164   0x....             LDR.N    R0,??DataTable95_48  ;; 0x44e90070
   \      0x166   0x....             LDR.N    R1,??DataTable95_49
   \      0x168   0x6008             STR      R0,[R1, #+0]
   \                     ??reset_15: (+1)
   \      0x16A   0x2000             MOVS     R0,#+0
   \      0x16C   0x....             LDR.N    R1,??DataTable95_50
   \      0x16E   0x7008             STRB     R0,[R1, #+0]
   \      0x170   0x.... 0x....      LDR.W    R1,??DataTable96
   \      0x174   0xE770             B.N      ??reset_9
   1498          }

   \                                 In section .text, align 4, keep-with-next
   \                     `MarlinSettings::reset()::tmp1`:
   \        0x0   0x4417'8000        DC32 44178000H, 44178000H, 4491E000H, 44820000H
   \              0x4417'8000  
   \              0x4491'E000  
   \              0x4482'0000  

   \                                 In section .text, align 4, keep-with-next
   \                     `MarlinSettings::reset()::tmp2`:
   \        0x0   0x4220'0000        DC32 42200000H, 42200000H, 41200000H, 428C0000H
   \              0x4220'0000  
   \              0x4120'0000  
   \              0x428C'0000  

   \                                 In section .text, align 4, keep-with-next
   \                     `MarlinSettings::reset()::tmp3`:
   \        0x0   0x0000'03E8        DC32 1000, 1000, 100, 1000
   \              0x0000'03E8  
   \              0x0000'0064  
   \              0x0000'03E8  

   \                                 In section .text, align 4, keep-with-next
   \                     `MarlinSettings::reset(){3}::adj`:
   \        0x0   0x0000'0000        DC32 0H, 0H, 0H
   \              0x0000'0000  
   \              0x0000'0000  
   1499          
   1500          #if DISABLED(DISABLE_M503)
   1501          
   1502            #define CONFIG_ECHO_START do{ if (!forReplay) SERIAL_ECHO_START; }while(0)
   1503          
   1504            /**
   1505             * M503 - Report current settings in RAM
   1506             *
   1507             * Unless specifically disabled, M503 is available even without EEPROM
   1508             */

   \                                 In section .text, align 4, keep-with-next
   1509            void MarlinSettings::report(bool forReplay) {
   \                     _ZN14MarlinSettings6reportEb: (+1)
   \        0x0   0xE92D 0x4FFE      PUSH     {R1-R11,LR}
   \        0x4   0x4682             MOV      R10,R0
   1510          
   1511              /**
   1512               * Announce current units, in case inches are being displayed
   1513               */
   1514              CONFIG_ECHO_START;
   \        0x6   0x.... 0x....      LDR.W    R4,??DataTable96_6
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD102             BNE.N    ??report_5
   \        0xE   0x4620             MOV      R0,R4
   \       0x10   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1515              #if ENABLED(INCH_MODE_SUPPORT)
   1516                extern float linear_unit_factor, volumetric_unit_factor;
   1517                #define LINEAR_UNIT(N) ((N) / linear_unit_factor)
   1518                #define VOLUMETRIC_UNIT(N) ((N) / (volumetric_enabled ? volumetric_unit_factor : linear_unit_factor))
   1519                SERIAL_ECHOPGM("  G2");
   1520                SERIAL_CHAR(linear_unit_factor == 1.0 ? '1' : '0');
   1521                SERIAL_ECHOPGM(" ; Units in ");
   1522                serialprintPGM(linear_unit_factor == 1.0 ? PSTR("mm\n") : PSTR("inches\n"));
   1523              #else
   1524                #define LINEAR_UNIT(N) N
   1525                #define VOLUMETRIC_UNIT(N) N
   1526                SERIAL_ECHOLNPGM("  G21 ; Units in mm\n");
   \                     ??report_5: (+1)
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable96_8
   \       0x18   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1527              #endif
   1528              SERIAL_EOL;
   \       0x1C   0x.... 0x....      LDR.W    R5,??DataTable96_9
   \       0x20   0x.... 0x....      LDR.W    R6,??DataTable96_10
   \       0x24   0xF8DF 0x767C      LDR.W    R7,??report_0
   \       0x28   0x7838             LDRB     R0,[R7, #+0]
   \       0x2A   0x2800             CMP      R0,#+0
   \       0x2C   0xD104             BNE.N    ??report_6
   \       0x2E   0x210A             MOVS     R1,#+10
   \       0x30   0x4630             MOV      R0,R6
   \       0x32   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \       0x36   0xE004             B.N      ??report_7
   \                     ??report_6: (+1)
   \       0x38   0x2200             MOVS     R2,#+0
   \       0x3A   0x210A             MOVS     R1,#+10
   \       0x3C   0x4628             MOV      R0,R5
   \       0x3E   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1529          #if ENABLED(ULTIPANEL)
   1530          
   1531                // Temperature units - for Ultipanel temperature options
   1532          
   1533                CONFIG_ECHO_START;
   \                     ??report_7: (+1)
   \       0x42   0x4650             MOV      R0,R10
   \       0x44   0x2800             CMP      R0,#+0
   \       0x46   0xD102             BNE.N    ??report_8
   \       0x48   0x4620             MOV      R0,R4
   \       0x4A   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1534            #if ENABLED(TEMPERATURE_UNITS_SUPPORT)
   1535                  extern TempUnit input_temp_units;
   1536                  extern float to_temp_units(const float &f);
   1537          	#define TEMP_UNIT(N) to_temp_units(N)
   1538                  SERIAL_ECHOPGM("  M149 ");
   1539                  SERIAL_CHAR(input_temp_units == TEMPUNIT_K ? 'K' : input_temp_units == TEMPUNIT_F ? 'F' : 'C');
   1540                  SERIAL_ECHOPGM(" ; Units in ");
   1541                  serialprintPGM(input_temp_units == TEMPUNIT_K ? PSTR("Kelvin\n") : input_temp_units == TEMPUNIT_F ? PSTR("Fahrenheit\n") : PSTR("Celsius\n"));
   1542            #else
   1543          	#define TEMP_UNIT(N) N
   1544                  SERIAL_ECHOLNPGM("  M149 C ; Units in Celsius\n");
   \                     ??report_8: (+1)
   \       0x4E   0x.... 0x....      LDR.W    R0,??DataTable96_11
   \       0x52   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1545            #endif
   1546                SERIAL_EOL;
   \       0x56   0x7838             LDRB     R0,[R7, #+0]
   \       0x58   0x2800             CMP      R0,#+0
   \       0x5A   0xD104             BNE.N    ??report_9
   \       0x5C   0x210A             MOVS     R1,#+10
   \       0x5E   0x4630             MOV      R0,R6
   \       0x60   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \       0x64   0xE004             B.N      ??report_10
   \                     ??report_9: (+1)
   \       0x66   0x2200             MOVS     R2,#+0
   \       0x68   0x210A             MOVS     R1,#+10
   \       0x6A   0x4628             MOV      R0,R5
   \       0x6C   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1547          
   1548          #endif
   1549          
   1550              /**
   1551               * Volumetric extrusion M200
   1552               */
   1553              if (!forReplay) {
   \                     ??report_10: (+1)
   \       0x70   0x4650             MOV      R0,R10
   \       0x72   0x2800             CMP      R0,#+0
   \       0x74   0xD11D             BNE.N    ??report_11
   1554                CONFIG_ECHO_START;
   \       0x76   0x4620             MOV      R0,R4
   \       0x78   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1555                SERIAL_ECHOPGM("Filament settings:");
   \       0x7C   0x.... 0x....      LDR.W    R0,??DataTable96_13
   \       0x80   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1556                if (volumetric_enabled)
   \       0x84   0x.... 0x....      LDR.W    R0,??DataTable96_14
   \       0x88   0x7800             LDRB     R0,[R0, #+0]
   \       0x8A   0x2800             CMP      R0,#+0
   \       0x8C   0xD00D             BEQ.N    ??report_12
   1557                {  SERIAL_EOL;}
   \       0x8E   0x7838             LDRB     R0,[R7, #+0]
   \       0x90   0x2800             CMP      R0,#+0
   \       0x92   0xD104             BNE.N    ??report_13
   \       0x94   0x210A             MOVS     R1,#+10
   \       0x96   0x4630             MOV      R0,R6
   \       0x98   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \       0x9C   0xE009             B.N      ??report_11
   \                     ??report_13: (+1)
   \       0x9E   0x2200             MOVS     R2,#+0
   \       0xA0   0x210A             MOVS     R1,#+10
   \       0xA2   0x4628             MOV      R0,R5
   \       0xA4   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   \       0xA8   0xE003             B.N      ??report_11
   1558                else
   1559                  SERIAL_ECHOLNPGM(" Disabled");
   \                     ??report_12: (+1)
   \       0xAA   0x.... 0x....      LDR.W    R0,??DataTable96_16
   \       0xAE   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1560              }
   1561          
   1562              CONFIG_ECHO_START;
   \                     ??report_11: (+1)
   \       0xB2   0x4650             MOV      R0,R10
   \       0xB4   0x2800             CMP      R0,#+0
   \       0xB6   0xD102             BNE.N    ??report_14
   \       0xB8   0x4620             MOV      R0,R4
   \       0xBA   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1563              SERIAL_ECHOPAIR("  M200 D", filament_size[0]);
   \                     ??report_14: (+1)
   \       0xBE   0x.... 0x....      LDR.W    R0,??DataTable96
   \       0xC2   0x6801             LDR      R1,[R0, #+0]
   \       0xC4   0x.... 0x....      LDR.W    R0,??DataTable96_17
   \       0xC8   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1564              SERIAL_EOL;
   \       0xCC   0x7838             LDRB     R0,[R7, #+0]
   \       0xCE   0x2800             CMP      R0,#+0
   \       0xD0   0xD104             BNE.N    ??report_15
   \       0xD2   0x210A             MOVS     R1,#+10
   \       0xD4   0x4630             MOV      R0,R6
   \       0xD6   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \       0xDA   0xE004             B.N      ??report_16
   \                     ??report_15: (+1)
   \       0xDC   0x2200             MOVS     R2,#+0
   \       0xDE   0x210A             MOVS     R1,#+10
   \       0xE0   0x4628             MOV      R0,R5
   \       0xE2   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1565              #if EXTRUDERS > 1
   1566                CONFIG_ECHO_START;
   1567                SERIAL_ECHOPAIR("  M200 T1 D", filament_size[1]);
   1568                SERIAL_EOL;
   1569                #if EXTRUDERS > 2
   1570                  CONFIG_ECHO_START;
   1571                  SERIAL_ECHOPAIR("  M200 T2 D", filament_size[2]);
   1572                  SERIAL_EOL;
   1573                  #if EXTRUDERS > 3
   1574                    CONFIG_ECHO_START;
   1575                    SERIAL_ECHOPAIR("  M200 T3 D", filament_size[3]);
   1576                    SERIAL_EOL;
   1577                    #if EXTRUDERS > 4
   1578                      CONFIG_ECHO_START;
   1579                      SERIAL_ECHOPAIR("  M200 T4 D", filament_size[4]);
   1580                      SERIAL_EOL;
   1581                    #endif // EXTRUDERS > 4
   1582                  #endif // EXTRUDERS > 3
   1583                #endif // EXTRUDERS > 2
   1584              #endif // EXTRUDERS > 1
   1585          
   1586              if (!volumetric_enabled) {
   \                     ??report_16: (+1)
   \       0xE6   0x.... 0x....      LDR.W    R0,??DataTable96_14
   \       0xEA   0x7800             LDRB     R0,[R0, #+0]
   \       0xEC   0x2800             CMP      R0,#+0
   \       0xEE   0xD109             BNE.N    ??report_17
   1587                CONFIG_ECHO_START;
   \       0xF0   0x4650             MOV      R0,R10
   \       0xF2   0x2800             CMP      R0,#+0
   \       0xF4   0xD102             BNE.N    ??report_18
   \       0xF6   0x4620             MOV      R0,R4
   \       0xF8   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1588                SERIAL_ECHOLNPGM("  M200 D0");
   \                     ??report_18: (+1)
   \       0xFC   0x.... 0x....      LDR.W    R0,??DataTable96_18
   \      0x100   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1589              }
   1590          
   1591              if (!forReplay) {
   \                     ??report_17: (+1)
   \      0x104   0x4650             MOV      R0,R10
   \      0x106   0x2800             CMP      R0,#+0
   \      0x108   0xD106             BNE.N    ??report_19
   1592                CONFIG_ECHO_START;
   \      0x10A   0x4620             MOV      R0,R4
   \      0x10C   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1593                SERIAL_ECHOLNPGM("Steps per unit:");
   \      0x110   0x.... 0x....      LDR.W    R0,??DataTable96_19
   \      0x114   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1594              }
   1595              CONFIG_ECHO_START;
   \                     ??report_19: (+1)
   \      0x118   0x4650             MOV      R0,R10
   \      0x11A   0x2800             CMP      R0,#+0
   \      0x11C   0xD102             BNE.N    ??report_20
   \      0x11E   0x4620             MOV      R0,R4
   \      0x120   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1596              SERIAL_ECHOPAIR("  M92 X", LINEAR_UNIT(planner.axis_steps_per_mm[X_AXIS]));
   \                     ??report_20: (+1)
   \      0x124   0x.... 0x....      LDR.W    R9,??DataTable96_20
   \      0x128   0xF8D9 0x1000      LDR      R1,[R9, #+0]
   \      0x12C   0x.... 0x....      LDR.W    R0,??DataTable96_21
   \      0x130   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1597              SERIAL_ECHOPAIR(" Y", LINEAR_UNIT(planner.axis_steps_per_mm[Y_AXIS]));
   \      0x134   0xF8D9 0x1004      LDR      R1,[R9, #+4]
   \      0x138   0xA098             ADR.N    R0,??report_1    ;; 0x20, 0x59, 0x00, 0x00
   \      0x13A   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1598              SERIAL_ECHOPAIR(" Z", LINEAR_UNIT(planner.axis_steps_per_mm[Z_AXIS]));
   \      0x13E   0xF8D9 0x1008      LDR      R1,[R9, #+8]
   \      0x142   0xA097             ADR.N    R0,??report_1+0x4  ;; 0x20, 0x5A, 0x00, 0x00
   \      0x144   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1599              #if DISABLED(DISTINCT_E_FACTORS)
   1600                SERIAL_ECHOPAIR(" E", VOLUMETRIC_UNIT(planner.axis_steps_per_mm[E_AXIS]));
   \      0x148   0xF20F 0x2858      ADR.W    R8,??report_1+0x8  ;; 0x20, 0x45, 0x00, 0x00
   \      0x14C   0xF8D9 0x100C      LDR      R1,[R9, #+12]
   \      0x150   0x4640             MOV      R0,R8
   \      0x152   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1601              #endif
   1602              SERIAL_EOL;
   \      0x156   0x7838             LDRB     R0,[R7, #+0]
   \      0x158   0x2800             CMP      R0,#+0
   \      0x15A   0xD104             BNE.N    ??report_21
   \      0x15C   0x210A             MOVS     R1,#+10
   \      0x15E   0x4630             MOV      R0,R6
   \      0x160   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x164   0xE004             B.N      ??report_22
   \                     ??report_21: (+1)
   \      0x166   0x2200             MOVS     R2,#+0
   \      0x168   0x210A             MOVS     R1,#+10
   \      0x16A   0x4628             MOV      R0,R5
   \      0x16C   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1603              #if ENABLED(DISTINCT_E_FACTORS)
   1604                CONFIG_ECHO_START;
   1605                for (uint8_t i = 0; i < E_STEPPERS; i++) {
   1606                  SERIAL_ECHOPAIR("  M92 T", (int)i);
   1607                  SERIAL_ECHOLNPAIR(" E", VOLUMETRIC_UNIT(planner.axis_steps_per_mm[E_AXIS + i]));
   1608                }
   1609              #endif
   1610          
   1611              if (!forReplay) {
   \                     ??report_22: (+1)
   \      0x170   0x4650             MOV      R0,R10
   \      0x172   0x2800             CMP      R0,#+0
   \      0x174   0xD106             BNE.N    ??report_23
   1612                CONFIG_ECHO_START;
   \      0x176   0x4620             MOV      R0,R4
   \      0x178   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1613                SERIAL_ECHOLNPGM("Maximum feedrates (units/s):");
   \      0x17C   0x.... 0x....      LDR.W    R0,??DataTable96_22
   \      0x180   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1614              }
   1615              CONFIG_ECHO_START;
   \                     ??report_23: (+1)
   \      0x184   0x4650             MOV      R0,R10
   \      0x186   0x2800             CMP      R0,#+0
   \      0x188   0xD102             BNE.N    ??report_24
   \      0x18A   0x4620             MOV      R0,R4
   \      0x18C   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1616              SERIAL_ECHOPAIR("  M203 X", LINEAR_UNIT(planner.max_feedrate_mm_s[X_AXIS]));
   \                     ??report_24: (+1)
   \      0x190   0x.... 0x....      LDR.W    R11,??DataTable96_23
   \      0x194   0xF8DB 0x1000      LDR      R1,[R11, #+0]
   \      0x198   0x.... 0x....      LDR.W    R0,??DataTable96_24
   \      0x19C   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1617              SERIAL_ECHOPAIR(" Y", LINEAR_UNIT(planner.max_feedrate_mm_s[Y_AXIS]));
   \      0x1A0   0xF8DB 0x1004      LDR      R1,[R11, #+4]
   \      0x1A4   0xA07D             ADR.N    R0,??report_1    ;; 0x20, 0x59, 0x00, 0x00
   \      0x1A6   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1618              SERIAL_ECHOPAIR(" Z", LINEAR_UNIT(planner.max_feedrate_mm_s[Z_AXIS]));
   \      0x1AA   0xF20F 0x19F4      ADR.W    R9,??report_1+0x4  ;; 0x20, 0x5A, 0x00, 0x00
   \      0x1AE   0xF8DB 0x1008      LDR      R1,[R11, #+8]
   \      0x1B2   0x4648             MOV      R0,R9
   \      0x1B4   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1619              #if DISABLED(DISTINCT_E_FACTORS)
   1620                SERIAL_ECHOPAIR(" E", VOLUMETRIC_UNIT(planner.max_feedrate_mm_s[E_AXIS]));
   \      0x1B8   0xF8DB 0x100C      LDR      R1,[R11, #+12]
   \      0x1BC   0x4640             MOV      R0,R8
   \      0x1BE   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1621              #endif
   1622              SERIAL_EOL;
   \      0x1C2   0x7838             LDRB     R0,[R7, #+0]
   \      0x1C4   0x2800             CMP      R0,#+0
   \      0x1C6   0xD104             BNE.N    ??report_25
   \      0x1C8   0x210A             MOVS     R1,#+10
   \      0x1CA   0x4630             MOV      R0,R6
   \      0x1CC   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x1D0   0xE004             B.N      ??report_26
   \                     ??report_25: (+1)
   \      0x1D2   0x2200             MOVS     R2,#+0
   \      0x1D4   0x210A             MOVS     R1,#+10
   \      0x1D6   0x4628             MOV      R0,R5
   \      0x1D8   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1623              #if ENABLED(DISTINCT_E_FACTORS)
   1624                CONFIG_ECHO_START;
   1625                for (uint8_t i = 0; i < E_STEPPERS; i++) {
   1626                  SERIAL_ECHOPAIR("  M203 T", (int)i);
   1627                  SERIAL_ECHOLNPAIR(" E", VOLUMETRIC_UNIT(planner.max_feedrate_mm_s[E_AXIS + i]));
   1628                }
   1629              #endif
   1630          
   1631              if (!forReplay) {
   \                     ??report_26: (+1)
   \      0x1DC   0x4650             MOV      R0,R10
   \      0x1DE   0x2800             CMP      R0,#+0
   \      0x1E0   0xD106             BNE.N    ??report_27
   1632                CONFIG_ECHO_START;
   \      0x1E2   0x4620             MOV      R0,R4
   \      0x1E4   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1633                SERIAL_ECHOLNPGM("Maximum Acceleration (units/s2):");
   \      0x1E8   0x.... 0x....      LDR.W    R0,??DataTable96_25
   \      0x1EC   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1634              }
   1635              CONFIG_ECHO_START;
   \                     ??report_27: (+1)
   \      0x1F0   0x4650             MOV      R0,R10
   \      0x1F2   0x2800             CMP      R0,#+0
   \      0x1F4   0xD102             BNE.N    ??report_28
   \      0x1F6   0x4620             MOV      R0,R4
   \      0x1F8   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1636              SERIAL_ECHOPAIR("  M201 X", LINEAR_UNIT(planner.max_acceleration_mm_per_s2[X_AXIS]));
   \                     ??report_28: (+1)
   \      0x1FC   0x.... 0x....      LDR.W    R11,??DataTable96_26
   \      0x200   0xF8DB 0x1000      LDR      R1,[R11, #+0]
   \      0x204   0x.... 0x....      LDR.W    R0,??DataTable96_27
   \      0x208   0x.... 0x....      BL       _Z17serial_echopair_PPKcm
   1637              SERIAL_ECHOPAIR(" Y", LINEAR_UNIT(planner.max_acceleration_mm_per_s2[Y_AXIS]));
   \      0x20C   0xF8DB 0x1004      LDR      R1,[R11, #+4]
   \      0x210   0xA062             ADR.N    R0,??report_1    ;; 0x20, 0x59, 0x00, 0x00
   \      0x212   0x.... 0x....      BL       _Z17serial_echopair_PPKcm
   1638              SERIAL_ECHOPAIR(" Z", LINEAR_UNIT(planner.max_acceleration_mm_per_s2[Z_AXIS]));
   \      0x216   0xF8DB 0x1008      LDR      R1,[R11, #+8]
   \      0x21A   0x4648             MOV      R0,R9
   \      0x21C   0x.... 0x....      BL       _Z17serial_echopair_PPKcm
   1639              #if DISABLED(DISTINCT_E_FACTORS)
   1640                SERIAL_ECHOPAIR(" E", VOLUMETRIC_UNIT(planner.max_acceleration_mm_per_s2[E_AXIS]));
   \      0x220   0xF8DB 0x100C      LDR      R1,[R11, #+12]
   \      0x224   0x4640             MOV      R0,R8
   \      0x226   0x.... 0x....      BL       _Z17serial_echopair_PPKcm
   1641              #endif
   1642              SERIAL_EOL;
   \      0x22A   0x7838             LDRB     R0,[R7, #+0]
   \      0x22C   0x2800             CMP      R0,#+0
   \      0x22E   0xD104             BNE.N    ??report_29
   \      0x230   0x210A             MOVS     R1,#+10
   \      0x232   0x4630             MOV      R0,R6
   \      0x234   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x238   0xE004             B.N      ??report_30
   \                     ??report_29: (+1)
   \      0x23A   0x2200             MOVS     R2,#+0
   \      0x23C   0x210A             MOVS     R1,#+10
   \      0x23E   0x4628             MOV      R0,R5
   \      0x240   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1643              #if ENABLED(DISTINCT_E_FACTORS)
   1644                SERIAL_ECHO_START;
   1645                for (uint8_t i = 0; i < E_STEPPERS; i++) {
   1646                  SERIAL_ECHOPAIR("  M201 T", (int)i);
   1647                  SERIAL_ECHOLNPAIR(" E", VOLUMETRIC_UNIT(planner.max_acceleration_mm_per_s2[E_AXIS + i]));
   1648                }
   1649              #endif
   1650          
   1651              if (!forReplay) {
   \                     ??report_30: (+1)
   \      0x244   0x4650             MOV      R0,R10
   \      0x246   0x2800             CMP      R0,#+0
   \      0x248   0xD106             BNE.N    ??report_31
   1652                CONFIG_ECHO_START;
   \      0x24A   0x4620             MOV      R0,R4
   \      0x24C   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1653                SERIAL_ECHOLNPGM("Acceleration (units/s2): P<print_accel> R<retract_accel> T<travel_accel>");
   \      0x250   0x.... 0x....      LDR.W    R0,??DataTable96_28
   \      0x254   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1654              }
   1655              CONFIG_ECHO_START;
   \                     ??report_31: (+1)
   \      0x258   0x4650             MOV      R0,R10
   \      0x25A   0x2800             CMP      R0,#+0
   \      0x25C   0xD102             BNE.N    ??report_32
   \      0x25E   0x4620             MOV      R0,R4
   \      0x260   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1656              SERIAL_ECHOPAIR("  M204 P", LINEAR_UNIT(planner.acceleration));
   \                     ??report_32: (+1)
   \      0x264   0x.... 0x....      LDR.W    R0,??DataTable96_29
   \      0x268   0x6801             LDR      R1,[R0, #+0]
   \      0x26A   0x.... 0x....      LDR.W    R0,??DataTable96_30
   \      0x26E   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1657              SERIAL_ECHOPAIR(" R", LINEAR_UNIT(planner.retract_acceleration));
   \      0x272   0x.... 0x....      LDR.W    R0,??DataTable96_31
   \      0x276   0x6801             LDR      R1,[R0, #+0]
   \      0x278   0xA0C7             ADR.N    R0,??report_2    ;; 0x20, 0x52, 0x00, 0x00
   \      0x27A   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1658              SERIAL_ECHOLNPAIR(" T", LINEAR_UNIT(planner.travel_acceleration));
   \      0x27E   0xF20F 0x391C      ADR.W    R9,??report_2+0x4  ;; 0x20, 0x54, 0x00, 0x00
   \      0x282   0x.... 0x....      LDR.W    R0,??DataTable96_32
   \      0x286   0x6801             LDR      R1,[R0, #+0]
   \      0x288   0x4648             MOV      R0,R9
   \      0x28A   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0x28E   0x7838             LDRB     R0,[R7, #+0]
   \      0x290   0x2800             CMP      R0,#+0
   \      0x292   0xD104             BNE.N    ??report_33
   \      0x294   0x210A             MOVS     R1,#+10
   \      0x296   0x4630             MOV      R0,R6
   \      0x298   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x29C   0xE004             B.N      ??report_34
   \                     ??report_33: (+1)
   \      0x29E   0x2200             MOVS     R2,#+0
   \      0x2A0   0x210A             MOVS     R1,#+10
   \      0x2A2   0x4628             MOV      R0,R5
   \      0x2A4   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1659          
   1660              if (!forReplay) {
   \                     ??report_34: (+1)
   \      0x2A8   0x4650             MOV      R0,R10
   \      0x2AA   0x2800             CMP      R0,#+0
   \      0x2AC   0xD106             BNE.N    ??report_35
   1661                CONFIG_ECHO_START;
   \      0x2AE   0x4620             MOV      R0,R4
   \      0x2B0   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1662                SERIAL_ECHOLNPGM("Advanced: S<min_feedrate> T<min_travel_feedrate> B<min_segment_time_ms> X<max_xy_jerk> Z<max_z_jerk> E<max_e_jerk>");
   \      0x2B4   0x.... 0x....      LDR.W    R0,??DataTable96_33
   \      0x2B8   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1663              }
   1664              CONFIG_ECHO_START;
   \                     ??report_35: (+1)
   \      0x2BC   0x4650             MOV      R0,R10
   \      0x2BE   0x2800             CMP      R0,#+0
   \      0x2C0   0xD102             BNE.N    ??report_36
   \      0x2C2   0x4620             MOV      R0,R4
   \      0x2C4   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1665              SERIAL_ECHOPAIR("  M205 S", LINEAR_UNIT(planner.min_feedrate_mm_s));
   \                     ??report_36: (+1)
   \      0x2C8   0x.... 0x....      LDR.W    R0,??DataTable96_34
   \      0x2CC   0x6801             LDR      R1,[R0, #+0]
   \      0x2CE   0x.... 0x....      LDR.W    R0,??DataTable96_35
   \      0x2D2   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1666              SERIAL_ECHOPAIR(" T", LINEAR_UNIT(planner.min_travel_feedrate_mm_s));
   \      0x2D6   0x.... 0x....      LDR.W    R0,??DataTable96_36
   \      0x2DA   0x6801             LDR      R1,[R0, #+0]
   \      0x2DC   0x4648             MOV      R0,R9
   \      0x2DE   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1667              SERIAL_ECHOPAIR(" B", planner.min_segment_time);
   \      0x2E2   0x.... 0x....      LDR.W    R0,??DataTable96_37
   \      0x2E6   0x6801             LDR      R1,[R0, #+0]
   \      0x2E8   0xA0AD             ADR.N    R0,??report_2+0x8  ;; 0x20, 0x42, 0x00, 0x00
   \      0x2EA   0x.... 0x....      BL       _Z17serial_echopair_PPKcm
   1668              SERIAL_ECHOPAIR(" X", LINEAR_UNIT(planner.max_jerk[X_AXIS]));
   \      0x2EE   0x.... 0x....      LDR.W    R9,??DataTable96_38
   \      0x2F2   0xF8D9 0x1000      LDR      R1,[R9, #+0]
   \      0x2F6   0xA0AB             ADR.N    R0,??report_2+0xC  ;; 0x20, 0x58, 0x00, 0x00
   \      0x2F8   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1669              SERIAL_ECHOPAIR(" Y", LINEAR_UNIT(planner.max_jerk[Y_AXIS]));
   \      0x2FC   0xF8D9 0x1004      LDR      R1,[R9, #+4]
   \      0x300   0xA026             ADR.N    R0,??report_1    ;; 0x20, 0x59, 0x00, 0x00
   \      0x302   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1670              SERIAL_ECHOPAIR(" Z", LINEAR_UNIT(planner.max_jerk[Z_AXIS]));
   \      0x306   0xF8D9 0x1008      LDR      R1,[R9, #+8]
   \      0x30A   0xA025             ADR.N    R0,??report_1+0x4  ;; 0x20, 0x5A, 0x00, 0x00
   \      0x30C   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1671              SERIAL_ECHOLNPAIR(" E", LINEAR_UNIT(planner.max_jerk[E_AXIS]));
   \      0x310   0xF8D9 0x100C      LDR      R1,[R9, #+12]
   \      0x314   0x4640             MOV      R0,R8
   \      0x316   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0x31A   0x7838             LDRB     R0,[R7, #+0]
   \      0x31C   0x2800             CMP      R0,#+0
   \      0x31E   0xD104             BNE.N    ??report_37
   \      0x320   0x210A             MOVS     R1,#+10
   \      0x322   0x4630             MOV      R0,R6
   \      0x324   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x328   0xE004             B.N      ??report_38
   \                     ??report_37: (+1)
   \      0x32A   0x2200             MOVS     R2,#+0
   \      0x32C   0x210A             MOVS     R1,#+10
   \      0x32E   0x4628             MOV      R0,R5
   \      0x330   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1672          
   1673              //#if HAS_M206_COMMAND		//mks_delta
   1674          	if(MACHINETPYE != DELTA){
   \                     ??report_38: (+1)
   \      0x334   0xF8DF 0xB378      LDR.W    R11,??report_0+0xC
   \      0x338   0xF10B 0x0034      ADD      R0,R11,#+52
   \      0x33C   0x9001             STR      R0,[SP, #+4]
   \      0x33E   0xF9B0 0x0024      LDRSH    R0,[R0, #+36]
   \      0x342   0x2802             CMP      R0,#+2
   \      0x344   0xD035             BEQ.N    ??report_39
   1675                if (!forReplay) {
   \      0x346   0x4650             MOV      R0,R10
   \      0x348   0x2800             CMP      R0,#+0
   \      0x34A   0xD106             BNE.N    ??report_40
   1676                  CONFIG_ECHO_START;
   \      0x34C   0x4620             MOV      R0,R4
   \      0x34E   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1677                  SERIAL_ECHOLNPGM("Home offset:");
   \      0x352   0x.... 0x....      LDR.W    R0,??DataTable96_39
   \      0x356   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1678                }
   1679                CONFIG_ECHO_START;
   \                     ??report_40: (+1)
   \      0x35A   0x4650             MOV      R0,R10
   \      0x35C   0x2800             CMP      R0,#+0
   \      0x35E   0xD102             BNE.N    ??report_41
   \      0x360   0x4620             MOV      R0,R4
   \      0x362   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1680                SERIAL_ECHOPAIR("  M206 X", LINEAR_UNIT(home_offset[X_AXIS]));
   \                     ??report_41: (+1)
   \      0x366   0x.... 0x....      LDR.W    R8,??DataTable96_40
   \      0x36A   0xF8D8 0x1000      LDR      R1,[R8, #+0]
   \      0x36E   0x.... 0x....      LDR.W    R0,??DataTable96_41
   \      0x372   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1681                SERIAL_ECHOPAIR(" Y", LINEAR_UNIT(home_offset[Y_AXIS]));
   \      0x376   0xF8D8 0x1004      LDR      R1,[R8, #+4]
   \      0x37A   0xA008             ADR.N    R0,??report_1    ;; 0x20, 0x59, 0x00, 0x00
   \      0x37C   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1682                SERIAL_ECHOLNPAIR(" Z", LINEAR_UNIT(home_offset[Z_AXIS]));
   \      0x380   0xF8D8 0x1008      LDR      R1,[R8, #+8]
   \      0x384   0xA006             ADR.N    R0,??report_1+0x4  ;; 0x20, 0x5A, 0x00, 0x00
   \      0x386   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0x38A   0x7838             LDRB     R0,[R7, #+0]
   \      0x38C   0x2800             CMP      R0,#+0
   \      0x38E   0xD10B             BNE.N    ??report_42
   \      0x390   0x210A             MOVS     R1,#+10
   \      0x392   0x4630             MOV      R0,R6
   \      0x394   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x398   0xE00B             B.N      ??report_39
   \      0x39A   0xBF00             Nop      
   \                     ??report_1:
   \      0x39C   0x20 0x59          DC8      0x20, 0x59, 0x00, 0x00
   \              0x00 0x00    
   \      0x3A0   0x20 0x5A          DC8      0x20, 0x5A, 0x00, 0x00
   \              0x00 0x00    
   \      0x3A4   0x20 0x45          DC8      0x20, 0x45, 0x00, 0x00
   \              0x00 0x00    
   \                     ??report_42: (+1)
   \      0x3A8   0x2200             MOVS     R2,#+0
   \      0x3AA   0x210A             MOVS     R1,#+10
   \      0x3AC   0x4628             MOV      R0,R5
   \      0x3AE   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1683              }//#endif
   1684          
   1685              #if HOTENDS > 1
   1686                if (!forReplay) {
   1687                  CONFIG_ECHO_START;
   1688                  SERIAL_ECHOLNPGM("Hotend offsets:");
   1689                }
   1690                CONFIG_ECHO_START;
   1691                for (uint8_t e = 1; e < HOTENDS; e++) {
   1692                  SERIAL_ECHOPAIR("  M218 T", (int)e);
   1693                  SERIAL_ECHOPAIR(" X", LINEAR_UNIT(hotend_offset[X_AXIS][e]));
   1694                  SERIAL_ECHOPAIR(" Y", LINEAR_UNIT(hotend_offset[Y_AXIS][e]));
   1695                  #if ENABLED(DUAL_X_CARRIAGE) || ENABLED(SWITCHING_EXTRUDER)
   1696                    SERIAL_ECHOPAIR(" Z", LINEAR_UNIT(hotend_offset[Z_AXIS][e]));
   1697                  #endif
   1698                  SERIAL_EOL;
   1699                }
   1700              #endif
   1701          
   1702          	/*--mks cfg--begin MESH_BED_LEVELING */
   1703          /*
   1704              #if ENABLED(MESH_BED_LEVELING)
   1705          
   1706                if (!forReplay) {
   1707                  CONFIG_ECHO_START;
   1708                  SERIAL_ECHOLNPGM("Mesh Bed Leveling:");
   1709                }
   1710                CONFIG_ECHO_START;
   1711                SERIAL_ECHOPAIR("  M420 S", mbl.has_mesh() ? 1 : 0);
   1712                #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
   1713                  SERIAL_ECHOPAIR(" Z", LINEAR_UNIT(planner.z_fade_height));
   1714                #endif
   1715                SERIAL_EOL;
   1716                for (uint8_t py = 0; py < GRID_MAX_POINTS_Y; py++) {
   1717                  for (uint8_t px = 0; px < GRID_MAX_POINTS_X; px++) {
   1718                    CONFIG_ECHO_START;
   1719                    SERIAL_ECHOPAIR("  G29 S3 X", (int)px + 1);
   1720                    SERIAL_ECHOPAIR(" Y", (int)py + 1);
   1721                    SERIAL_ECHOPGM(" Z");
   1722                    SERIAL_PROTOCOL_F(LINEAR_UNIT(mbl.z_values[px][py]), 5);
   1723                    SERIAL_EOL;
   1724                  }
   1725                }
   1726          
   1727              #elif ENABLED(AUTO_BED_LEVELING_UBL)
   1728          
   1729                if (!forReplay) {
   1730                  CONFIG_ECHO_START;
   1731                  SERIAL_ECHOLNPGM("Unified Bed Leveling:");
   1732                }
   1733                CONFIG_ECHO_START;
   1734                SERIAL_ECHOPAIR("  M420 S", ubl.state.active ? 1 : 0);
   1735                #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
   1736                  SERIAL_ECHOPAIR(" Z", planner.z_fade_height);
   1737                #endif
   1738                SERIAL_EOL;
   1739          
   1740                if (!forReplay) {
   1741                  SERIAL_ECHOPGM("\nUBL is ");
   1742                  ubl.state.active ? SERIAL_CHAR('A') : SERIAL_ECHOPGM("Ina");
   1743                  SERIAL_ECHOLNPAIR("ctive\n\nActive Mesh Slot: ", ubl.state.eeprom_storage_slot);
   1744          
   1745                  SERIAL_ECHOPGM("z_offset: ");
   1746                  SERIAL_ECHO_F(ubl.state.z_offset, 6);
   1747                  SERIAL_EOL;
   1748          
   1749                  SERIAL_ECHOPAIR("EEPROM can hold ", (int)((UBL_LAST_EEPROM_INDEX - ubl.eeprom_start) / sizeof(ubl.z_values)));
   1750                  SERIAL_ECHOLNPGM(" meshes.\n");
   1751          
   1752                  SERIAL_ECHOLNPAIR("GRID_MAX_POINTS_X  ", GRID_MAX_POINTS_X);
   1753                  SERIAL_ECHOLNPAIR("GRID_MAX_POINTS_Y  ", GRID_MAX_POINTS_Y);
   1754          
   1755                  SERIAL_ECHOPGM("UBL_MESH_MIN_X  " STRINGIFY(UBL_MESH_MIN_X));
   1756                  SERIAL_ECHOLNPAIR("=", UBL_MESH_MIN_X );
   1757                  SERIAL_ECHOPGM("UBL_MESH_MIN_Y  " STRINGIFY(UBL_MESH_MIN_Y));
   1758                  SERIAL_ECHOLNPAIR("=", UBL_MESH_MIN_Y );
   1759          
   1760                  SERIAL_ECHOPGM("UBL_MESH_MAX_X  " STRINGIFY(UBL_MESH_MAX_X));
   1761                  SERIAL_ECHOLNPAIR("=", UBL_MESH_MAX_X);
   1762                  SERIAL_ECHOPGM("UBL_MESH_MAX_Y  " STRINGIFY(UBL_MESH_MAX_Y));
   1763                  SERIAL_ECHOLNPAIR("=", UBL_MESH_MAX_Y);
   1764          
   1765                  SERIAL_ECHOLNPAIR("MESH_X_DIST  ", MESH_X_DIST);
   1766                  SERIAL_ECHOLNPAIR("MESH_Y_DIST  ", MESH_Y_DIST);
   1767                  SERIAL_EOL;
   1768                }
   1769          
   1770              #elif HAS_ABL
   1771          
   1772                if (!forReplay) {
   1773                  CONFIG_ECHO_START;
   1774                  SERIAL_ECHOLNPGM("Auto Bed Leveling:");
   1775                }
   1776                CONFIG_ECHO_START;
   1777                SERIAL_ECHOPAIR("  M420 S", planner.abl_enabled ? 1 : 0);
   1778                #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
   1779                  SERIAL_ECHOPAIR(" Z", LINEAR_UNIT(planner.z_fade_height));
   1780                #endif
   1781                SERIAL_EOL;
   1782          
   1783              #endif
   1784          */
   1785          
   1786          //#if ENABLED(MESH_BED_LEVELING)
   1787          	  if(BED_LEVELING_METHOD == MESH_BED_LEVELING)	{
   \                     ??report_39: (+1)
   \      0x3B2   0x9801             LDR      R0,[SP, #+4]
   \      0x3B4   0x7B00             LDRB     R0,[R0, #+12]
   \      0x3B6   0x2820             CMP      R0,#+32
   \      0x3B8   0xF040 0x8088      BNE.W    ??report_43
   1788          
   1789                if (!forReplay) {
   \      0x3BC   0x4650             MOV      R0,R10
   \      0x3BE   0x2800             CMP      R0,#+0
   \      0x3C0   0xD106             BNE.N    ??report_44
   1790                  CONFIG_ECHO_START;
   \      0x3C2   0x4620             MOV      R0,R4
   \      0x3C4   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1791                  SERIAL_ECHOLNPGM("Mesh Bed Leveling:");
   \      0x3C8   0x.... 0x....      ADR.W    R0,?_45
   \      0x3CC   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1792                }
   1793                CONFIG_ECHO_START;
   \                     ??report_44: (+1)
   \      0x3D0   0x4650             MOV      R0,R10
   \      0x3D2   0x2800             CMP      R0,#+0
   \      0x3D4   0xD102             BNE.N    ??report_45
   \      0x3D6   0x4620             MOV      R0,R4
   \      0x3D8   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1794                SERIAL_ECHOPAIR("  M420 S", mbl.has_mesh() ? 1 : 0);
   \                     ??report_45: (+1)
   \      0x3DC   0x.... 0x....      BL       _ZN17mesh_bed_leveling8has_meshEv
   \      0x3E0   0x1E41             SUBS     R1,R0,#+1
   \      0x3E2   0x4189             SBCS     R1,R1,R1
   \      0x3E4   0x43C9             MVNS     R1,R1
   \      0x3E6   0x0FC9             LSRS     R1,R1,#+31
   \      0x3E8   0x.... 0x....      ADR.W    R0,?_46
   \      0x3EC   0x.... 0x....      BL       _Z17serial_echopair_PPKci
   1795            //#if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
   1796            	if((MACHINETPYE != DELTA) && (BED_LEVELING_METHOD&HAS_FADE))	//mks_delta
   \      0x3F0   0x9801             LDR      R0,[SP, #+4]
   \      0x3F2   0xF9B0 0x0024      LDRSH    R0,[R0, #+36]
   \      0x3F6   0x2802             CMP      R0,#+2
   \      0x3F8   0xD009             BEQ.N    ??report_46
   \      0x3FA   0x9801             LDR      R0,[SP, #+4]
   \      0x3FC   0x7B00             LDRB     R0,[R0, #+12]
   \      0x3FE   0x06C0             LSLS     R0,R0,#+27
   \      0x400   0xD505             BPL.N    ??report_46
   1797                  SERIAL_ECHOPAIR(" Z", LINEAR_UNIT(planner.z_fade_height));
   \      0x402   0x.... 0x....      LDR.W    R0,??DataTable96_42
   \      0x406   0x6801             LDR      R1,[R0, #+0]
   \      0x408   0xA0A7             ADR.N    R0,??report_0+0x4  ;; 0x20, 0x5A, 0x00, 0x00
   \      0x40A   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1798            //#endif
   1799                SERIAL_EOL;
   \                     ??report_46: (+1)
   \      0x40E   0x7838             LDRB     R0,[R7, #+0]
   \      0x410   0x2800             CMP      R0,#+0
   \      0x412   0xD104             BNE.N    ??report_47
   \      0x414   0x210A             MOVS     R1,#+10
   \      0x416   0x4630             MOV      R0,R6
   \      0x418   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x41C   0xE004             B.N      ??report_48
   \                     ??report_47: (+1)
   \      0x41E   0x2200             MOVS     R2,#+0
   \      0x420   0x210A             MOVS     R1,#+10
   \      0x422   0x4628             MOV      R0,R5
   \      0x424   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1800                for (uint8_t py = 0; py < GRID_MAX_POINTS_Y; py++) {
   \                     ??report_48: (+1)
   \      0x428   0xF04F 0x0800      MOV      R8,#+0
   \      0x42C   0xE003             B.N      ??report_49
   \                     ??report_50: (+1)
   \      0x42E   0xF108 0x0801      ADD      R8,R8,#+1
   \      0x432   0xFA5F 0xF888      UXTB     R8,R8
   \                     ??report_49: (+1)
   \      0x436   0xF10B 0x0060      ADD      R0,R11,#+96
   \      0x43A   0x9002             STR      R0,[SP, #+8]
   \      0x43C   0x7840             LDRB     R0,[R0, #+1]
   \      0x43E   0x4580             CMP      R8,R0
   \      0x440   0xF280 0x8240      BGE.W    ??report_51
   1801                  for (uint8_t px = 0; px < GRID_MAX_POINTS_X; px++) {
   \      0x444   0xF04F 0x0900      MOV      R9,#+0
   \      0x448   0xE015             B.N      ??report_52
   1802                    CONFIG_ECHO_START;
   1803                    SERIAL_ECHOPAIR("  G29 S3 X", (int)px + 1);
   1804                    SERIAL_ECHOPAIR(" Y", (int)py + 1);
   1805                    SERIAL_ECHOPGM(" Z");
   1806                    SERIAL_PROTOCOL_F(LINEAR_UNIT(mbl.z_values[px][py]), 5);
   1807                    SERIAL_EOL;
   \                     ??report_53: (+1)
   \      0x44A   0x2200             MOVS     R2,#+0
   \      0x44C   0x210A             MOVS     R1,#+10
   \      0x44E   0x4628             MOV      R0,R5
   \      0x450   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   \      0x454   0xE00B             B.N      ??report_54
   \                     ??report_55: (+1)
   \      0x456   0x2005             MOVS     R0,#+5
   \      0x458   0x9000             STR      R0,[SP, #+0]
   \      0x45A   0x4628             MOV      R0,R5
   \      0x45C   0x.... 0x....      BL       _ZN12MarlinSerial5printEdi
   \                     ??report_56: (+1)
   \      0x460   0x7838             LDRB     R0,[R7, #+0]
   \      0x462   0x2800             CMP      R0,#+0
   \      0x464   0xD1F1             BNE.N    ??report_53
   \      0x466   0x210A             MOVS     R1,#+10
   \      0x468   0x4630             MOV      R0,R6
   \      0x46A   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \                     ??report_54: (+1)
   \      0x46E   0xF109 0x0901      ADD      R9,R9,#+1
   \      0x472   0xFA5F 0xF989      UXTB     R9,R9
   \                     ??report_52: (+1)
   \      0x476   0x9802             LDR      R0,[SP, #+8]
   \      0x478   0x7800             LDRB     R0,[R0, #+0]
   \      0x47A   0x4581             CMP      R9,R0
   \      0x47C   0xDAD7             BGE.N    ??report_50
   \      0x47E   0x4650             MOV      R0,R10
   \      0x480   0x2800             CMP      R0,#+0
   \      0x482   0xD102             BNE.N    ??report_57
   \      0x484   0x4620             MOV      R0,R4
   \      0x486   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \                     ??report_57: (+1)
   \      0x48A   0xF109 0x0101      ADD      R1,R9,#+1
   \      0x48E   0x.... 0x....      ADR.W    R0,?_47
   \      0x492   0x.... 0x....      BL       _Z17serial_echopair_PPKci
   \      0x496   0xF108 0x0101      ADD      R1,R8,#+1
   \      0x49A   0xA084             ADR.N    R0,??report_0+0x8  ;; 0x20, 0x59, 0x00, 0x00
   \      0x49C   0x.... 0x....      BL       _Z17serial_echopair_PPKci
   \      0x4A0   0xA081             ADR.N    R0,??report_0+0x4  ;; 0x20, 0x5A, 0x00, 0x00
   \      0x4A2   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \      0x4A6   0x.... 0x....      LDR.W    R0,??DataTable96_43
   \      0x4AA   0xEB00 0x1089      ADD      R0,R0,R9, LSL #+6
   \      0x4AE   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \      0x4B2   0x.... 0x....      BL       __aeabi_f2d
   \      0x4B6   0x4602             MOV      R2,R0
   \      0x4B8   0x460B             MOV      R3,R1
   \      0x4BA   0x7838             LDRB     R0,[R7, #+0]
   \      0x4BC   0x2800             CMP      R0,#+0
   \      0x4BE   0xD1CA             BNE.N    ??report_55
   \      0x4C0   0x2005             MOVS     R0,#+5
   \      0x4C2   0x9000             STR      R0,[SP, #+0]
   \      0x4C4   0x4630             MOV      R0,R6
   \      0x4C6   0x.... 0x....      BL       _ZN12MarlinSerial5printEdi
   \      0x4CA   0xE7C9             B.N      ??report_56
   1808                  }
   1809                }
   1810          	  	}
   1811          //#elif ENABLED(AUTO_BED_LEVELING_UBL)
   1812          	else if(BED_LEVELING_METHOD == AUTO_BED_LEVELING_UBL)	{
   \                     ??report_43: (+1)
   \      0x4CC   0x2810             CMP      R0,#+16
   \      0x4CE   0xF040 0x81BF      BNE.W    ??report_58
   1813                if (!forReplay) {
   \      0x4D2   0x4650             MOV      R0,R10
   \      0x4D4   0x2800             CMP      R0,#+0
   \      0x4D6   0xD106             BNE.N    ??report_59
   1814                  CONFIG_ECHO_START;
   \      0x4D8   0x4620             MOV      R0,R4
   \      0x4DA   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1815                  SERIAL_ECHOLNPGM("Unified Bed Leveling:");
   \      0x4DE   0x.... 0x....      ADR.W    R0,?_48
   \      0x4E2   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1816                }
   1817                CONFIG_ECHO_START;
   \                     ??report_59: (+1)
   \      0x4E6   0x4650             MOV      R0,R10
   \      0x4E8   0x2800             CMP      R0,#+0
   \      0x4EA   0xD102             BNE.N    ??report_60
   \      0x4EC   0x4620             MOV      R0,R4
   \      0x4EE   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1818                SERIAL_ECHOPAIR("  M420 S", ubl.state.active ? 1 : 0);
   \                     ??report_60: (+1)
   \      0x4F2   0x.... 0x....      LDR.W    R8,??DataTable96_44
   \      0x4F6   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \      0x4FA   0x1E41             SUBS     R1,R0,#+1
   \      0x4FC   0x4189             SBCS     R1,R1,R1
   \      0x4FE   0x43C9             MVNS     R1,R1
   \      0x500   0x0FC9             LSRS     R1,R1,#+31
   \      0x502   0x.... 0x....      ADR.W    R0,?_46
   \      0x506   0x.... 0x....      BL       _Z17serial_echopair_PPKci
   1819            //#if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
   1820            		if((MACHINETPYE != DELTA) && (BED_LEVELING_METHOD&HAS_FADE))	//mks_delta
   \      0x50A   0x9801             LDR      R0,[SP, #+4]
   \      0x50C   0xF9B0 0x0024      LDRSH    R0,[R0, #+36]
   \      0x510   0x2802             CMP      R0,#+2
   \      0x512   0xD009             BEQ.N    ??report_61
   \      0x514   0x9801             LDR      R0,[SP, #+4]
   \      0x516   0x7B00             LDRB     R0,[R0, #+12]
   \      0x518   0x06C0             LSLS     R0,R0,#+27
   \      0x51A   0xD505             BPL.N    ??report_61
   1821                  SERIAL_ECHOPAIR(" Z", planner.z_fade_height);
   \      0x51C   0x.... 0x....      LDR.W    R0,??DataTable96_42
   \      0x520   0x6801             LDR      R1,[R0, #+0]
   \      0x522   0xA061             ADR.N    R0,??report_0+0x4  ;; 0x20, 0x5A, 0x00, 0x00
   \      0x524   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1822            //#endif
   1823                SERIAL_EOL;
   \                     ??report_61: (+1)
   \      0x528   0x7838             LDRB     R0,[R7, #+0]
   \      0x52A   0x2800             CMP      R0,#+0
   \      0x52C   0xD104             BNE.N    ??report_62
   \      0x52E   0x210A             MOVS     R1,#+10
   \      0x530   0x4630             MOV      R0,R6
   \      0x532   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x536   0xE004             B.N      ??report_63
   \                     ??report_62: (+1)
   \      0x538   0x2200             MOVS     R2,#+0
   \      0x53A   0x210A             MOVS     R1,#+10
   \      0x53C   0x4628             MOV      R0,R5
   \      0x53E   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1824          
   1825                if (!forReplay) {
   \                     ??report_63: (+1)
   \      0x542   0x4650             MOV      R0,R10
   \      0x544   0x2800             CMP      R0,#+0
   \      0x546   0xF040 0x81BD      BNE.W    ??report_51
   1826                  SERIAL_ECHOPGM("\nUBL is ");
   \      0x54A   0x.... 0x....      ADR.W    R0,?_49
   \      0x54E   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1827          	//ubl.state.active ? SERIAL_CHAR('A') : SERIAL_ECHOPGM("Ina");
   1828          #ifdef USE_MKS_WIFI		
   1829                  if(ubl.state.active)
   \      0x552   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \      0x556   0x2800             CMP      R0,#+0
   \      0x558   0xD00D             BEQ.N    ??report_64
   1830                    SERIAL_CHAR('A')
   \      0x55A   0x7838             LDRB     R0,[R7, #+0]
   \      0x55C   0x2800             CMP      R0,#+0
   \      0x55E   0xD104             BNE.N    ??report_65
   \      0x560   0x2141             MOVS     R1,#+65
   \      0x562   0x4630             MOV      R0,R6
   \      0x564   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x568   0xE008             B.N      ??report_66
   \                     ??report_65: (+1)
   \      0x56A   0x2200             MOVS     R2,#+0
   \      0x56C   0x2141             MOVS     R1,#+65
   \      0x56E   0x4628             MOV      R0,R5
   \      0x570   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   \      0x574   0xE002             B.N      ??report_66
   1831                   else
   1832                    SERIAL_ECHOPGM("Ina");
   \                     ??report_64: (+1)
   \      0x576   0xA04F             ADR.N    R0,??report_0+0x10  ;; "Ina"
   \      0x578   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1833          #else
   1834                  ubl.state.active ? SERIAL_CHAR('A') : SERIAL_ECHOPGM("Ina");
   1835          #endif        
   1836                  SERIAL_ECHOLNPAIR("ctive\n\nActive Mesh Slot: ", ubl.state.eeprom_storage_slot);
   \                     ??report_66: (+1)
   \      0x57C   0xF998 0x1008      LDRSB    R1,[R8, #+8]
   \      0x580   0x.... 0x....      ADR.W    R0,?_51
   \      0x584   0x.... 0x....      BL       _Z17serial_echopair_PPKci
   \      0x588   0x7838             LDRB     R0,[R7, #+0]
   \      0x58A   0x2800             CMP      R0,#+0
   \      0x58C   0xD10C             BNE.N    ??report_67
   \      0x58E   0x210A             MOVS     R1,#+10
   \      0x590   0x4630             MOV      R0,R6
   \      0x592   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x596   0xE00C             B.N      ??report_68
   \                     ??report_2:
   \      0x598   0x20 0x52          DC8      0x20, 0x52, 0x00, 0x00
   \              0x00 0x00    
   \      0x59C   0x20 0x54          DC8      0x20, 0x54, 0x00, 0x00
   \              0x00 0x00    
   \      0x5A0   0x20 0x42          DC8      0x20, 0x42, 0x00, 0x00
   \              0x00 0x00    
   \      0x5A4   0x20 0x58          DC8      0x20, 0x58, 0x00, 0x00
   \              0x00 0x00    
   \                     ??report_67: (+1)
   \      0x5A8   0x2200             MOVS     R2,#+0
   \      0x5AA   0x210A             MOVS     R1,#+10
   \      0x5AC   0x4628             MOV      R0,R5
   \      0x5AE   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1837          
   1838                  SERIAL_ECHOPGM("z_offset: ");
   \                     ??report_68: (+1)
   \      0x5B2   0x.... 0x....      ADR.W    R0,?_52
   \      0x5B6   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1839                  SERIAL_ECHO_F(ubl.state.z_offset, 6);
   \      0x5BA   0xF8D8 0x0004      LDR      R0,[R8, #+4]
   \      0x5BE   0x.... 0x....      BL       __aeabi_f2d
   \      0x5C2   0x783A             LDRB     R2,[R7, #+0]
   \      0x5C4   0x2A00             CMP      R2,#+0
   \      0x5C6   0xD107             BNE.N    ??report_69
   \      0x5C8   0x2206             MOVS     R2,#+6
   \      0x5CA   0x9200             STR      R2,[SP, #+0]
   \      0x5CC   0x4602             MOV      R2,R0
   \      0x5CE   0x460B             MOV      R3,R1
   \      0x5D0   0x4630             MOV      R0,R6
   \      0x5D2   0x.... 0x....      BL       _ZN12MarlinSerial5printEdi
   \      0x5D6   0xE006             B.N      ??report_70
   \                     ??report_69: (+1)
   \      0x5D8   0x2206             MOVS     R2,#+6
   \      0x5DA   0x9200             STR      R2,[SP, #+0]
   \      0x5DC   0x4602             MOV      R2,R0
   \      0x5DE   0x460B             MOV      R3,R1
   \      0x5E0   0x4628             MOV      R0,R5
   \      0x5E2   0x.... 0x....      BL       _ZN12MarlinSerial5printEdi
   1840                  SERIAL_EOL;
   \                     ??report_70: (+1)
   \      0x5E6   0x7838             LDRB     R0,[R7, #+0]
   \      0x5E8   0x2800             CMP      R0,#+0
   \      0x5EA   0xD104             BNE.N    ??report_71
   \      0x5EC   0x210A             MOVS     R1,#+10
   \      0x5EE   0x4630             MOV      R0,R6
   \      0x5F0   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x5F4   0xE004             B.N      ??report_72
   \                     ??report_71: (+1)
   \      0x5F6   0x2200             MOVS     R2,#+0
   \      0x5F8   0x210A             MOVS     R1,#+10
   \      0x5FA   0x4628             MOV      R0,R5
   \      0x5FC   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1841          
   1842                  SERIAL_ECHOPAIR("EEPROM can hold ", (int)((UBL_LAST_EEPROM_INDEX - ubl.eeprom_start) / sizeof(ubl.z_values)));
   \                     ??report_72: (+1)
   \      0x600   0xF240 0x51FF      MOVW     R1,#+1535
   \      0x604   0x.... 0x....      LDR.W    R0,??DataTable96_45
   \      0x608   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \      0x60C   0x1A09             SUBS     R1,R1,R0
   \      0x60E   0x0A89             LSRS     R1,R1,#+10
   \      0x610   0x.... 0x....      ADR.W    R0,?_53
   \      0x614   0x.... 0x....      BL       _Z17serial_echopair_PPKci
   1843                  SERIAL_ECHOLNPGM(" meshes.\n");
   \      0x618   0x.... 0x....      ADR.W    R0,?_54
   \      0x61C   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1844          
   1845                  SERIAL_ECHOLNPAIR("GRID_MAX_POINTS_X  ", GRID_MAX_POINTS_X);
   \      0x620   0xF10B 0x0860      ADD      R8,R11,#+96
   \      0x624   0xF898 0x1000      LDRB     R1,[R8, #+0]
   \      0x628   0x.... 0x....      ADR.W    R0,?_55
   \      0x62C   0x.... 0x....      BL       _Z17serial_echopair_PPKch
   \      0x630   0x7838             LDRB     R0,[R7, #+0]
   \      0x632   0x2800             CMP      R0,#+0
   \      0x634   0xD104             BNE.N    ??report_73
   \      0x636   0x210A             MOVS     R1,#+10
   \      0x638   0x4630             MOV      R0,R6
   \      0x63A   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x63E   0xE004             B.N      ??report_74
   \                     ??report_73: (+1)
   \      0x640   0x2200             MOVS     R2,#+0
   \      0x642   0x210A             MOVS     R1,#+10
   \      0x644   0x4628             MOV      R0,R5
   \      0x646   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1846                  SERIAL_ECHOLNPAIR("GRID_MAX_POINTS_Y  ", GRID_MAX_POINTS_Y);
   \                     ??report_74: (+1)
   \      0x64A   0xF898 0x1001      LDRB     R1,[R8, #+1]
   \      0x64E   0x.... 0x....      ADR.W    R0,?_56
   \      0x652   0x.... 0x....      BL       _Z17serial_echopair_PPKch
   \      0x656   0x7838             LDRB     R0,[R7, #+0]
   \      0x658   0x2800             CMP      R0,#+0
   \      0x65A   0xD104             BNE.N    ??report_75
   \      0x65C   0x210A             MOVS     R1,#+10
   \      0x65E   0x4630             MOV      R0,R6
   \      0x660   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x664   0xE004             B.N      ??report_76
   \                     ??report_75: (+1)
   \      0x666   0x2200             MOVS     R2,#+0
   \      0x668   0x210A             MOVS     R1,#+10
   \      0x66A   0x4628             MOV      R0,R5
   \      0x66C   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1847          
   1848                  SERIAL_ECHOPGM("UBL_MESH_MIN_X  " STRINGIFY(UBL_MESH_MIN_X));
   \                     ??report_76: (+1)
   \      0x670   0x.... 0x....      ADR.W    R0,?_57
   \      0x674   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1849                  SERIAL_ECHOLNPAIR("=", UBL_MESH_MIN_X );
   \      0x678   0xF20F 0x29B0      ADR.W    R9,??report_3    ;; "="
   \      0x67C   0xF9B8 0x0054      LDRSH    R0,[R8, #+84]
   \      0x680   0x.... 0x....      BL       __aeabi_i2f
   \      0x684   0xF8DB 0x1008      LDR      R1,[R11, #+8]
   \      0x688   0x.... 0x....      BL       __aeabi_fadd
   \      0x68C   0x4601             MOV      R1,R0
   \      0x68E   0x4648             MOV      R0,R9
   \      0x690   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0x694   0x7838             LDRB     R0,[R7, #+0]
   \      0x696   0x2800             CMP      R0,#+0
   \      0x698   0xD10E             BNE.N    ??report_77
   \      0x69A   0x210A             MOVS     R1,#+10
   \      0x69C   0x4630             MOV      R0,R6
   \      0x69E   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x6A2   0xE00E             B.N      ??report_78
   \                     ??report_0:
   \      0x6A4   0x....'....        DC32     from_wifi_flag
   \      0x6A8   0x20 0x5A          DC8      0x20, 0x5A, 0x00, 0x00
   \              0x00 0x00    
   \      0x6AC   0x20 0x59          DC8      0x20, 0x59, 0x00, 0x00
   \              0x00 0x00    
   \      0x6B0   0x....'....        DC32     mksCfg
   \      0x6B4   0x49 0x6E          DC8      "Ina"
   \              0x61 0x00    
   \                     ??report_77: (+1)
   \      0x6B8   0x2200             MOVS     R2,#+0
   \      0x6BA   0x210A             MOVS     R1,#+10
   \      0x6BC   0x4628             MOV      R0,R5
   \      0x6BE   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1850                  SERIAL_ECHOPGM("UBL_MESH_MIN_Y  " STRINGIFY(UBL_MESH_MIN_Y));
   \                     ??report_78: (+1)
   \      0x6C2   0x.... 0x....      ADR.W    R0,?_59
   \      0x6C6   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1851                  SERIAL_ECHOLNPAIR("=", UBL_MESH_MIN_Y );
   \      0x6CA   0xF9B8 0x0054      LDRSH    R0,[R8, #+84]
   \      0x6CE   0x.... 0x....      BL       __aeabi_i2f
   \      0x6D2   0xF8DB 0x100C      LDR      R1,[R11, #+12]
   \      0x6D6   0x.... 0x....      BL       __aeabi_fadd
   \      0x6DA   0x4601             MOV      R1,R0
   \      0x6DC   0x4648             MOV      R0,R9
   \      0x6DE   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0x6E2   0x7838             LDRB     R0,[R7, #+0]
   \      0x6E4   0x2800             CMP      R0,#+0
   \      0x6E6   0xD104             BNE.N    ??report_79
   \      0x6E8   0x210A             MOVS     R1,#+10
   \      0x6EA   0x4630             MOV      R0,R6
   \      0x6EC   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x6F0   0xE004             B.N      ??report_80
   \                     ??report_79: (+1)
   \      0x6F2   0x2200             MOVS     R2,#+0
   \      0x6F4   0x210A             MOVS     R1,#+10
   \      0x6F6   0x4628             MOV      R0,R5
   \      0x6F8   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1852          
   1853                  SERIAL_ECHOPGM("UBL_MESH_MAX_X  " STRINGIFY(UBL_MESH_MAX_X));
   \                     ??report_80: (+1)
   \      0x6FC   0x.... 0x....      ADR.W    R0,?_60
   \      0x700   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1854                  SERIAL_ECHOLNPAIR("=", UBL_MESH_MAX_X);
   \      0x704   0xF9B8 0x0054      LDRSH    R0,[R8, #+84]
   \      0x708   0x.... 0x....      BL       __aeabi_i2f
   \      0x70C   0x4601             MOV      R1,R0
   \      0x70E   0xF8DB 0x0014      LDR      R0,[R11, #+20]
   \      0x712   0x.... 0x....      BL       __aeabi_fsub
   \      0x716   0x4601             MOV      R1,R0
   \      0x718   0x4648             MOV      R0,R9
   \      0x71A   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0x71E   0x7838             LDRB     R0,[R7, #+0]
   \      0x720   0x2800             CMP      R0,#+0
   \      0x722   0xD104             BNE.N    ??report_81
   \      0x724   0x210A             MOVS     R1,#+10
   \      0x726   0x4630             MOV      R0,R6
   \      0x728   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x72C   0xE004             B.N      ??report_82
   \                     ??report_81: (+1)
   \      0x72E   0x2200             MOVS     R2,#+0
   \      0x730   0x210A             MOVS     R1,#+10
   \      0x732   0x4628             MOV      R0,R5
   \      0x734   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1855                  SERIAL_ECHOPGM("UBL_MESH_MAX_Y  " STRINGIFY(UBL_MESH_MAX_Y));
   \                     ??report_82: (+1)
   \      0x738   0x.... 0x....      ADR.W    R0,?_61
   \      0x73C   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1856                  SERIAL_ECHOLNPAIR("=", UBL_MESH_MAX_Y);
   \      0x740   0xF9B8 0x0054      LDRSH    R0,[R8, #+84]
   \      0x744   0x.... 0x....      BL       __aeabi_i2f
   \      0x748   0x4601             MOV      R1,R0
   \      0x74A   0xF8DB 0x0018      LDR      R0,[R11, #+24]
   \      0x74E   0x.... 0x....      BL       __aeabi_fsub
   \      0x752   0x4601             MOV      R1,R0
   \      0x754   0x4648             MOV      R0,R9
   \      0x756   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0x75A   0x7838             LDRB     R0,[R7, #+0]
   \      0x75C   0x2800             CMP      R0,#+0
   \      0x75E   0xD104             BNE.N    ??report_83
   \      0x760   0x210A             MOVS     R1,#+10
   \      0x762   0x4630             MOV      R0,R6
   \      0x764   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x768   0xE004             B.N      ??report_84
   \                     ??report_83: (+1)
   \      0x76A   0x2200             MOVS     R2,#+0
   \      0x76C   0x210A             MOVS     R1,#+10
   \      0x76E   0x4628             MOV      R0,R5
   \      0x770   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1857          
   1858                  SERIAL_ECHOLNPAIR("MESH_X_DIST  ", MESH_X_DIST);
   \                     ??report_84: (+1)
   \      0x774   0xF9B8 0x0054      LDRSH    R0,[R8, #+84]
   \      0x778   0x.... 0x....      BL       __aeabi_i2f
   \      0x77C   0x4681             MOV      R9,R0
   \      0x77E   0xF8DB 0x0014      LDR      R0,[R11, #+20]
   \      0x782   0x4649             MOV      R1,R9
   \      0x784   0x.... 0x....      BL       __aeabi_fsub
   \      0x788   0x9000             STR      R0,[SP, #+0]
   \      0x78A   0xF8DB 0x0008      LDR      R0,[R11, #+8]
   \      0x78E   0x4649             MOV      R1,R9
   \      0x790   0x.... 0x....      BL       __aeabi_fadd
   \      0x794   0x4601             MOV      R1,R0
   \      0x796   0x9800             LDR      R0,[SP, #+0]
   \      0x798   0x.... 0x....      BL       __aeabi_fsub
   \      0x79C   0x4681             MOV      R9,R0
   \      0x79E   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \      0x7A2   0x1E40             SUBS     R0,R0,#+1
   \      0x7A4   0x.... 0x....      BL       __aeabi_i2f
   \      0x7A8   0x4601             MOV      R1,R0
   \      0x7AA   0x4648             MOV      R0,R9
   \      0x7AC   0x.... 0x....      BL       __aeabi_fdiv
   \      0x7B0   0x4601             MOV      R1,R0
   \      0x7B2   0x.... 0x....      ADR.W    R0,?_62
   \      0x7B6   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0x7BA   0x7838             LDRB     R0,[R7, #+0]
   \      0x7BC   0x2800             CMP      R0,#+0
   \      0x7BE   0xD104             BNE.N    ??report_85
   \      0x7C0   0x210A             MOVS     R1,#+10
   \      0x7C2   0x4630             MOV      R0,R6
   \      0x7C4   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x7C8   0xE004             B.N      ??report_86
   \                     ??report_85: (+1)
   \      0x7CA   0x2200             MOVS     R2,#+0
   \      0x7CC   0x210A             MOVS     R1,#+10
   \      0x7CE   0x4628             MOV      R0,R5
   \      0x7D0   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1859                  SERIAL_ECHOLNPAIR("MESH_Y_DIST  ", MESH_Y_DIST);
   \                     ??report_86: (+1)
   \      0x7D4   0xF9B8 0x0054      LDRSH    R0,[R8, #+84]
   \      0x7D8   0x.... 0x....      BL       __aeabi_i2f
   \      0x7DC   0x4681             MOV      R9,R0
   \      0x7DE   0xF8DB 0x0018      LDR      R0,[R11, #+24]
   \      0x7E2   0x4649             MOV      R1,R9
   \      0x7E4   0x.... 0x....      BL       __aeabi_fsub
   \      0x7E8   0x9000             STR      R0,[SP, #+0]
   \      0x7EA   0xF8DB 0x000C      LDR      R0,[R11, #+12]
   \      0x7EE   0x4649             MOV      R1,R9
   \      0x7F0   0x.... 0x....      BL       __aeabi_fadd
   \      0x7F4   0x4601             MOV      R1,R0
   \      0x7F6   0x9800             LDR      R0,[SP, #+0]
   \      0x7F8   0x.... 0x....      BL       __aeabi_fsub
   \      0x7FC   0x4681             MOV      R9,R0
   \      0x7FE   0xF898 0x0001      LDRB     R0,[R8, #+1]
   \      0x802   0x1E40             SUBS     R0,R0,#+1
   \      0x804   0x.... 0x....      BL       __aeabi_i2f
   \      0x808   0x4601             MOV      R1,R0
   \      0x80A   0x4648             MOV      R0,R9
   \      0x80C   0x.... 0x....      BL       __aeabi_fdiv
   \      0x810   0x4601             MOV      R1,R0
   \      0x812   0x.... 0x....      ADR.W    R0,?_63
   \      0x816   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0x81A   0x7838             LDRB     R0,[R7, #+0]
   \      0x81C   0x2800             CMP      R0,#+0
   \      0x81E   0xD104             BNE.N    ??report_87
   \      0x820   0x210A             MOVS     R1,#+10
   \      0x822   0x4630             MOV      R0,R6
   \      0x824   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x828   0xE004             B.N      ??report_88
   \                     ??report_87: (+1)
   \      0x82A   0x2200             MOVS     R2,#+0
   \      0x82C   0x210A             MOVS     R1,#+10
   \      0x82E   0x4628             MOV      R0,R5
   \      0x830   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1860                  SERIAL_EOL;
   \                     ??report_88: (+1)
   \      0x834   0x7838             LDRB     R0,[R7, #+0]
   \      0x836   0x2800             CMP      R0,#+0
   \      0x838   0xD104             BNE.N    ??report_89
   \      0x83A   0x210A             MOVS     R1,#+10
   \      0x83C   0x4630             MOV      R0,R6
   \      0x83E   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x842   0xE03F             B.N      ??report_51
   \                     ??report_89: (+1)
   \      0x844   0x2200             MOVS     R2,#+0
   \      0x846   0x210A             MOVS     R1,#+10
   \      0x848   0x4628             MOV      R0,R5
   \      0x84A   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   \      0x84E   0xE039             B.N      ??report_51
   1861                }
   1862          		}
   1863          //#elif HAS_ABL
   1864          	else if(BED_LEVELING_METHOD&HAS_ABL)	{
   \                     ??report_58: (+1)
   \      0x850   0xF010 0x0F1E      TST      R0,#0x1E
   \      0x854   0xD036             BEQ.N    ??report_51
   1865                if (!forReplay) {
   \      0x856   0x4650             MOV      R0,R10
   \      0x858   0x2800             CMP      R0,#+0
   \      0x85A   0xD106             BNE.N    ??report_90
   1866                  CONFIG_ECHO_START;
   \      0x85C   0x4620             MOV      R0,R4
   \      0x85E   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1867                  SERIAL_ECHOLNPGM("Auto Bed Leveling:");
   \      0x862   0x.... 0x....      ADR.W    R0,?_64
   \      0x866   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1868                }
   1869                CONFIG_ECHO_START;
   \                     ??report_90: (+1)
   \      0x86A   0x4650             MOV      R0,R10
   \      0x86C   0x2800             CMP      R0,#+0
   \      0x86E   0xD102             BNE.N    ??report_91
   \      0x870   0x4620             MOV      R0,R4
   \      0x872   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1870                SERIAL_ECHOPAIR("  M420 S", planner.abl_enabled ? 1 : 0);
   \                     ??report_91: (+1)
   \      0x876   0x.... 0x....      LDR.W    R0,??DataTable96_46
   \      0x87A   0x7800             LDRB     R0,[R0, #+0]
   \      0x87C   0x1E41             SUBS     R1,R0,#+1
   \      0x87E   0x4189             SBCS     R1,R1,R1
   \      0x880   0x43C9             MVNS     R1,R1
   \      0x882   0x0FC9             LSRS     R1,R1,#+31
   \      0x884   0x.... 0x....      ADR.W    R0,?_46
   \      0x888   0x.... 0x....      BL       _Z17serial_echopair_PPKci
   1871           // #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
   1872            	if((MACHINETPYE != DELTA) && (BED_LEVELING_METHOD&HAS_FADE))	//mks_delta
   \      0x88C   0x9801             LDR      R0,[SP, #+4]
   \      0x88E   0xF9B0 0x0024      LDRSH    R0,[R0, #+36]
   \      0x892   0x2802             CMP      R0,#+2
   \      0x894   0xD009             BEQ.N    ??report_92
   \      0x896   0x9801             LDR      R0,[SP, #+4]
   \      0x898   0x7B00             LDRB     R0,[R0, #+12]
   \      0x89A   0x06C0             LSLS     R0,R0,#+27
   \      0x89C   0xD505             BPL.N    ??report_92
   1873                  SERIAL_ECHOPAIR(" Z", LINEAR_UNIT(planner.z_fade_height));
   \      0x89E   0x.... 0x....      LDR.W    R0,??DataTable96_42
   \      0x8A2   0x6801             LDR      R1,[R0, #+0]
   \      0x8A4   0xA0C0             ADR.N    R0,??report_4    ;; 0x20, 0x5A, 0x00, 0x00
   \      0x8A6   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1874           // #endif
   1875                SERIAL_EOL;
   \                     ??report_92: (+1)
   \      0x8AA   0x7838             LDRB     R0,[R7, #+0]
   \      0x8AC   0x2800             CMP      R0,#+0
   \      0x8AE   0xD104             BNE.N    ??report_93
   \      0x8B0   0x210A             MOVS     R1,#+10
   \      0x8B2   0x4630             MOV      R0,R6
   \      0x8B4   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x8B8   0xE004             B.N      ??report_51
   \                     ??report_93: (+1)
   \      0x8BA   0x2200             MOVS     R2,#+0
   \      0x8BC   0x210A             MOVS     R1,#+10
   \      0x8BE   0x4628             MOV      R0,R5
   \      0x8C0   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1876          		}
   1877          //#endif
   1878          
   1879          	/*--mks cfg--end MESH_BED_LEVELING */
   1880          
   1881          
   1882          
   1883              //#if ENABLED(DELTA)
   1884          	if(MACHINETPYE == DELTA)	{
   \                     ??report_51: (+1)
   \      0x8C4   0x9801             LDR      R0,[SP, #+4]
   \      0x8C6   0xF9B0 0x0024      LDRSH    R0,[R0, #+36]
   \      0x8CA   0x2802             CMP      R0,#+2
   \      0x8CC   0xF040 0x8082      BNE.W    ??report_94
   1885                if (!forReplay) {
   \      0x8D0   0x4650             MOV      R0,R10
   \      0x8D2   0x2800             CMP      R0,#+0
   \      0x8D4   0xD106             BNE.N    ??report_95
   1886                  CONFIG_ECHO_START;
   \      0x8D6   0x4620             MOV      R0,R4
   \      0x8D8   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1887                  SERIAL_ECHOLNPGM("Endstop adjustment:");
   \      0x8DC   0x.... 0x....      ADR.W    R0,?_65
   \      0x8E0   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1888                }
   1889                CONFIG_ECHO_START;
   \                     ??report_95: (+1)
   \      0x8E4   0x4650             MOV      R0,R10
   \      0x8E6   0x2800             CMP      R0,#+0
   \      0x8E8   0xD102             BNE.N    ??report_96
   \      0x8EA   0x4620             MOV      R0,R4
   \      0x8EC   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1890                SERIAL_ECHOPAIR("  M666 X", LINEAR_UNIT(endstop_adj[X_AXIS]));
   \                     ??report_96: (+1)
   \      0x8F0   0x.... 0x....      LDR.W    R11,??DataTable96_47
   \      0x8F4   0xF8DB 0x1000      LDR      R1,[R11, #+0]
   \      0x8F8   0x.... 0x....      ADR.W    R0,?_66
   \      0x8FC   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1891                SERIAL_ECHOPAIR(" Y", LINEAR_UNIT(endstop_adj[Y_AXIS]));
   \      0x900   0xF20F 0x29A8      ADR.W    R9,??report_4+0x4  ;; 0x20, 0x59, 0x00, 0x00
   \      0x904   0xF8DB 0x1004      LDR      R1,[R11, #+4]
   \      0x908   0x4648             MOV      R0,R9
   \      0x90A   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1892                SERIAL_ECHOLNPAIR(" Z", LINEAR_UNIT(endstop_adj[Z_AXIS]));
   \      0x90E   0xF20F 0x2898      ADR.W    R8,??report_4    ;; 0x20, 0x5A, 0x00, 0x00
   \      0x912   0xF8DB 0x1008      LDR      R1,[R11, #+8]
   \      0x916   0x4640             MOV      R0,R8
   \      0x918   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0x91C   0x7838             LDRB     R0,[R7, #+0]
   \      0x91E   0x2800             CMP      R0,#+0
   \      0x920   0xD106             BNE.N    ??report_97
   \      0x922   0x210A             MOVS     R1,#+10
   \      0x924   0x4630             MOV      R0,R6
   \      0x926   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x92A   0xE006             B.N      ??report_98
   \                     ??report_3:
   \      0x92C   0x3D 0x00          DC8      "=",0x0,0x0
   \              0x00 0x00    
   \                     ??report_97: (+1)
   \      0x930   0x2200             MOVS     R2,#+0
   \      0x932   0x210A             MOVS     R1,#+10
   \      0x934   0x4628             MOV      R0,R5
   \      0x936   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1893                if (!forReplay) {
   \                     ??report_98: (+1)
   \      0x93A   0x4650             MOV      R0,R10
   \      0x93C   0x2800             CMP      R0,#+0
   \      0x93E   0xD106             BNE.N    ??report_99
   1894                  CONFIG_ECHO_START;
   \      0x940   0x4620             MOV      R0,R4
   \      0x942   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1895                  SERIAL_ECHOLNPGM("Delta settings: L<diagonal_rod> R<radius> H<height> S<segments_per_s> B<calibration radius> XYZ<tower angle corrections>");
   \      0x946   0x.... 0x....      ADR.W    R0,?_67
   \      0x94A   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1896                }
   1897                CONFIG_ECHO_START;
   \                     ??report_99: (+1)
   \      0x94E   0x4650             MOV      R0,R10
   \      0x950   0x2800             CMP      R0,#+0
   \      0x952   0xD102             BNE.N    ??report_100
   \      0x954   0x4620             MOV      R0,R4
   \      0x956   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1898                SERIAL_ECHOPAIR("  M665 L", LINEAR_UNIT(delta_diagonal_rod));
   \                     ??report_100: (+1)
   \      0x95A   0x....             LDR.N    R0,??DataTable96_48
   \      0x95C   0x6801             LDR      R1,[R0, #+0]
   \      0x95E   0x.... 0x....      ADR.W    R0,?_68
   \      0x962   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1899                SERIAL_ECHOPAIR(" R", LINEAR_UNIT(delta_radius));
   \      0x966   0x....             LDR.N    R0,??DataTable96_49
   \      0x968   0x6801             LDR      R1,[R0, #+0]
   \      0x96A   0x....             ADR.N    R0,??DataTable96_1  ;; 0x20, 0x52, 0x00, 0x00
   \      0x96C   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1900                SERIAL_ECHOPAIR(" H", LINEAR_UNIT(DELTA_HEIGHT + home_offset[Z_AXIS]));
   \      0x970   0x9801             LDR      R0,[SP, #+4]
   \      0x972   0x69C1             LDR      R1,[R0, #+28]
   \      0x974   0x....             LDR.N    R0,??DataTable96_40
   \      0x976   0x6880             LDR      R0,[R0, #+8]
   \      0x978   0x.... 0x....      BL       __aeabi_fadd
   \      0x97C   0x4601             MOV      R1,R0
   \      0x97E   0x....             ADR.N    R0,??DataTable96_2  ;; 0x20, 0x48, 0x00, 0x00
   \      0x980   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1901                SERIAL_ECHOPAIR(" S", delta_segments_per_second);
   \      0x984   0x....             LDR.N    R0,??DataTable96_50
   \      0x986   0x6801             LDR      R1,[R0, #+0]
   \      0x988   0x....             ADR.N    R0,??DataTable96_3  ;; 0x20, 0x53, 0x00, 0x00
   \      0x98A   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1902                SERIAL_ECHOPAIR(" B", LINEAR_UNIT(delta_calibration_radius));
   \      0x98E   0x....             LDR.N    R0,??DataTable96_51
   \      0x990   0x6801             LDR      R1,[R0, #+0]
   \      0x992   0x....             ADR.N    R0,??DataTable96_4  ;; 0x20, 0x42, 0x00, 0x00
   \      0x994   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1903                SERIAL_ECHOPAIR(" X", LINEAR_UNIT(delta_tower_angle_trim[A_AXIS]));
   \      0x998   0x.... 0x....      LDR.W    R11,??DataTable96_52
   \      0x99C   0xF8DB 0x1000      LDR      R1,[R11, #+0]
   \      0x9A0   0x....             ADR.N    R0,??DataTable96_5  ;; 0x20, 0x58, 0x00, 0x00
   \      0x9A2   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1904                SERIAL_ECHOPAIR(" Y", LINEAR_UNIT(delta_tower_angle_trim[B_AXIS]));
   \      0x9A6   0xF8DB 0x1004      LDR      R1,[R11, #+4]
   \      0x9AA   0x4648             MOV      R0,R9
   \      0x9AC   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1905                SERIAL_ECHOPAIR(" Z", 0.00);
   \      0x9B0   0x2200             MOVS     R2,#+0
   \      0x9B2   0x4613             MOV      R3,R2
   \      0x9B4   0x4640             MOV      R0,R8
   \      0x9B6   0x.... 0x....      BL       _Z17serial_echopair_PPKcd
   1906                SERIAL_EOL;		}
   \      0x9BA   0x7838             LDRB     R0,[R7, #+0]
   \      0x9BC   0x2800             CMP      R0,#+0
   \      0x9BE   0xD104             BNE.N    ??report_101
   \      0x9C0   0x210A             MOVS     R1,#+10
   \      0x9C2   0x4630             MOV      R0,R6
   \      0x9C4   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0x9C8   0xE004             B.N      ??report_94
   \                     ??report_101: (+1)
   \      0x9CA   0x2200             MOVS     R2,#+0
   \      0x9CC   0x210A             MOVS     R1,#+10
   \      0x9CE   0x4628             MOV      R0,R5
   \      0x9D0   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1907              /*#elif ENABLED(Z_DUAL_ENDSTOPS)
   1908                if (!forReplay) {
   1909                  CONFIG_ECHO_START;
   1910                  SERIAL_ECHOLNPGM("Z2 Endstop adjustment:");
   1911                }
   1912                CONFIG_ECHO_START;
   1913                SERIAL_ECHOLNPAIR("  M666 Z", LINEAR_UNIT(z_endstop_adj));
   1914              #endif // DELTA */
   1915          
   1916              #if ENABLED(ULTIPANEL)
   1917                if (!forReplay) {
   \                     ??report_94: (+1)
   \      0x9D4   0x4650             MOV      R0,R10
   \      0x9D6   0x2800             CMP      R0,#+0
   \      0x9D8   0xD106             BNE.N    ??report_102
   1918                  CONFIG_ECHO_START;
   \      0x9DA   0x4620             MOV      R0,R4
   \      0x9DC   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1919                  SERIAL_ECHOLNPGM("Material heatup parameters:");
   \      0x9E0   0x.... 0x....      ADR.W    R0,?_71
   \      0x9E4   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1920                }
   1921                CONFIG_ECHO_START;
   \                     ??report_102: (+1)
   \      0x9E8   0x4650             MOV      R0,R10
   \      0x9EA   0x2800             CMP      R0,#+0
   \      0x9EC   0xD102             BNE.N    ??report_103
   \      0x9EE   0x4620             MOV      R0,R4
   \      0x9F0   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1922                for (uint8_t i = 0; i < COUNT(lcd_preheat_hotend_temp); i++) {
   \                     ??report_103: (+1)
   \      0x9F4   0xF04F 0x0800      MOV      R8,#+0
   \                     ??report_104: (+1)
   \      0x9F8   0xF1B8 0x0F02      CMP      R8,#+2
   \      0x9FC   0xF080 0x808D      BCS.W    ??report_105
   1923                  SERIAL_ECHOPAIR("  M145 S", (int)i);
   \      0xA00   0x4641             MOV      R1,R8
   \      0xA02   0x.... 0x....      ADR.W    R0,?_72
   \      0xA06   0x.... 0x....      BL       _Z17serial_echopair_PPKci
   1924                  SERIAL_ECHOPAIR(" H", TEMP_UNIT(lcd_preheat_hotend_temp[i]));
   \      0xA0A   0x....             LDR.N    R0,??DataTable96_53
   \      0xA0C   0xF850 0x1028      LDR      R1,[R0, R8, LSL #+2]
   \      0xA10   0x....             ADR.N    R0,??DataTable96_2  ;; 0x20, 0x48, 0x00, 0x00
   \      0xA12   0x.... 0x....      BL       _Z17serial_echopair_PPKci
   1925                  SERIAL_ECHOPAIR(" B", TEMP_UNIT(lcd_preheat_bed_temp[i]));
   \      0xA16   0x....             LDR.N    R0,??DataTable96_54
   \      0xA18   0xF850 0x1028      LDR      R1,[R0, R8, LSL #+2]
   \      0xA1C   0x....             ADR.N    R0,??DataTable96_4  ;; 0x20, 0x42, 0x00, 0x00
   \      0xA1E   0x.... 0x....      BL       _Z17serial_echopair_PPKci
   1926                  SERIAL_ECHOLNPAIR(" F", lcd_preheat_fan_speed[i]);
   \      0xA22   0x....             LDR.N    R0,??DataTable96_55
   \      0xA24   0xF850 0x1028      LDR      R1,[R0, R8, LSL #+2]
   \      0xA28   0x....             ADR.N    R0,??DataTable96_7  ;; 0x20, 0x46, 0x00, 0x00
   \      0xA2A   0x.... 0x....      BL       _Z17serial_echopair_PPKci
   \      0xA2E   0x7838             LDRB     R0,[R7, #+0]
   \      0xA30   0x2800             CMP      R0,#+0
   \      0xA32   0xD005             BEQ.N    ??report_106
   \      0xA34   0x2200             MOVS     R2,#+0
   \      0xA36   0x210A             MOVS     R1,#+10
   \      0xA38   0x4628             MOV      R0,R5
   \      0xA3A   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   \      0xA3E   0xE003             B.N      ??report_107
   \                     ??report_106: (+1)
   \      0xA40   0x210A             MOVS     R1,#+10
   \      0xA42   0x4630             MOV      R0,R6
   \      0xA44   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   1927                }
   \                     ??report_107: (+1)
   \      0xA48   0xF108 0x0801      ADD      R8,R8,#+1
   \      0xA4C   0xE7D4             B.N      ??report_104
   1928              #endif // ULTIPANEL
   1929          
   1930              //#if HAS_PID_HEATING	/*--mks cfg--*/
   1931          	if(HAS_PID_HEATING) {
   1932                if (!forReplay) {
   1933                  CONFIG_ECHO_START;
   1934                  SERIAL_ECHOLNPGM("PID settings:");
   1935                }
   1936          
   1937          //#if ENABLED(PIDTEMP)	/*--mks cfg--*/
   1938          if(PIDTEMP){
   1939            #if HOTENDS > 1
   1940                    if (forReplay) {
   1941                      HOTEND_LOOP() {
   1942                        CONFIG_ECHO_START;
   1943                        SERIAL_ECHOPAIR("  M301 E", e);
   1944                        SERIAL_ECHOPAIR(" P", PID_PARAM(Kp, e));
   1945                        SERIAL_ECHOPAIR(" I", unscalePID_i(PID_PARAM(Ki, e)));
   1946                        SERIAL_ECHOPAIR(" D", unscalePID_d(PID_PARAM(Kd, e)));
   1947          		#if ENABLED(PID_EXTRUSION_SCALING)
   1948                          SERIAL_ECHOPAIR(" C", PID_PARAM(Kc, e));
   1949                          if (e == 0) SERIAL_ECHOPAIR(" L", lpq_len);
   1950          		#endif
   1951                        SERIAL_EOL;
   1952                      }
   1953                    }
   1954                    else
   1955            #endif // HOTENDS > 1
   1956                  // !forReplay || HOTENDS == 1
   1957                  {
   1958                    CONFIG_ECHO_START;
   1959                    SERIAL_ECHOPAIR("  M301 P", PID_PARAM(Kp, 0)); // for compatibility with hosts, only echo values for E0
   1960                    SERIAL_ECHOPAIR(" I", unscalePID_i(PID_PARAM(Ki, 0)));
   1961                    SERIAL_ECHOPAIR(" D", unscalePID_d(PID_PARAM(Kd, 0)));
   1962          	#if ENABLED(PID_EXTRUSION_SCALING)
   1963                      SERIAL_ECHOPAIR(" C", PID_PARAM(Kc, 0));
   1964                      SERIAL_ECHOPAIR(" L", lpq_len);
   1965          	#endif
   1966                    SERIAL_EOL;
   \                     ??report_108: (+1)
   \      0xA4E   0x2200             MOVS     R2,#+0
   \      0xA50   0x210A             MOVS     R1,#+10
   \      0xA52   0x4628             MOV      R0,R5
   \      0xA54   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1967                  }
   1968          }//#endif // PIDTEMP
   1969          
   1970          
   1971                //#if ENABLED(PIDTEMPBED) /*--mks cfg--*/
   1972                if(PIDTEMPBED) {
   \                     ??report_109: (+1)
   \      0xA58   0x9801             LDR      R0,[SP, #+4]
   \      0xA5A   0x7840             LDRB     R0,[R0, #+1]
   \      0xA5C   0x2800             CMP      R0,#+0
   \      0xA5E   0xD034             BEQ.N    ??report_110
   1973                  CONFIG_ECHO_START;
   \      0xA60   0x4650             MOV      R0,R10
   \      0xA62   0x2800             CMP      R0,#+0
   \      0xA64   0xD102             BNE.N    ??report_111
   \      0xA66   0x4620             MOV      R0,R4
   \      0xA68   0x.... 0x....      BL       _Z14serialprintPGMPKc
   1974                  SERIAL_ECHOPAIR("  M304 P", thermalManager.bedKp);
   \                     ??report_111: (+1)
   \      0xA6C   0x....             LDR.N    R0,??DataTable96_56
   \      0xA6E   0x6801             LDR      R1,[R0, #+0]
   \      0xA70   0x.... 0x....      ADR.W    R0,?_78
   \      0xA74   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   1975                  SERIAL_ECHOPAIR(" I", unscalePID_i(thermalManager.bedKi));
   \      0xA78   0x....             LDR.N    R0,??DataTable96_57
   \      0xA7A   0x6800             LDR      R0,[R0, #+0]
   \      0xA7C   0x.... 0x....      BL       __aeabi_f2d
   \      0xA80   0x....             LDR.N    R2,??DataTable96_58  ;; 0x88e368f1
   \      0xA82   0x....             LDR.N    R3,??DataTable96_59  ;; 0x3fc4f8b5
   \      0xA84   0x.... 0x....      BL       __aeabi_ddiv
   \      0xA88   0x4602             MOV      R2,R0
   \      0xA8A   0x460B             MOV      R3,R1
   \      0xA8C   0x....             ADR.N    R0,??DataTable96_12  ;; 0x20, 0x49, 0x00, 0x00
   \      0xA8E   0x.... 0x....      BL       _Z17serial_echopair_PPKcd
   1976                  SERIAL_ECHOPAIR(" D", unscalePID_d(thermalManager.bedKd));
   \      0xA92   0x....             LDR.N    R0,??DataTable96_60
   \      0xA94   0x6800             LDR      R0,[R0, #+0]
   \      0xA96   0x.... 0x....      BL       __aeabi_f2d
   \      0xA9A   0x4602             MOV      R2,R0
   \      0xA9C   0x460B             MOV      R3,R1
   \      0xA9E   0x....             LDR.N    R0,??DataTable96_58  ;; 0x88e368f1
   \      0xAA0   0x....             LDR.N    R1,??DataTable96_59  ;; 0x3fc4f8b5
   \      0xAA2   0x.... 0x....      BL       __aeabi_dmul
   \      0xAA6   0x4602             MOV      R2,R0
   \      0xAA8   0x460B             MOV      R3,R1
   \      0xAAA   0x....             ADR.N    R0,??DataTable96_15  ;; 0x20, 0x44, 0x00, 0x00
   \      0xAAC   0x.... 0x....      BL       _Z17serial_echopair_PPKcd
   1977                  SERIAL_EOL;
   \      0xAB0   0x7838             LDRB     R0,[R7, #+0]
   \      0xAB2   0x2800             CMP      R0,#+0
   \      0xAB4   0xD104             BNE.N    ??report_112
   \      0xAB6   0x210A             MOVS     R1,#+10
   \      0xAB8   0x4630             MOV      R0,R6
   \      0xABA   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0xABE   0xE004             B.N      ??report_110
   \                     ??report_112: (+1)
   \      0xAC0   0x2200             MOVS     R2,#+0
   \      0xAC2   0x210A             MOVS     R1,#+10
   \      0xAC4   0x4628             MOV      R0,R5
   \      0xAC6   0x.... 0x....      BL       _ZN12MarlinSerial5printEci
   1978                }//#endif
   1979          
   1980              }//#endif // PIDTEMP || PIDTEMPBED
   1981          
   1982              #if HAS_LCD_CONTRAST
   1983                if (!forReplay) {
   1984                  CONFIG_ECHO_START;
   1985                  SERIAL_ECHOLNPGM("LCD Contrast:");
   1986                }
   1987                CONFIG_ECHO_START;
   1988                SERIAL_ECHOLNPAIR("  M250 C", lcd_contrast);
   1989              #endif
   1990          
   1991              #if ENABLED(FWRETRACT)
   1992          
   1993                if (!forReplay) {
   1994                  CONFIG_ECHO_START;
   1995                  SERIAL_ECHOLNPGM("Retract: S<length> F<units/m> Z<lift>");
   1996                }
   1997                CONFIG_ECHO_START;
   1998                SERIAL_ECHOPAIR("  M207 S", LINEAR_UNIT(retract_length));
   1999                #if EXTRUDERS > 1
   2000                  SERIAL_ECHOPAIR(" W", LINEAR_UNIT(retract_length_swap));
   2001                #endif
   2002                SERIAL_ECHOPAIR(" F", MMS_TO_MMM(LINEAR_UNIT(retract_feedrate_mm_s)));
   2003                SERIAL_ECHOLNPAIR(" Z", LINEAR_UNIT(retract_zlift));
   2004          
   2005                if (!forReplay) {
   2006                  CONFIG_ECHO_START;
   2007                  SERIAL_ECHOLNPGM("Recover: S<length> F<units/m>");
   2008                }
   2009                CONFIG_ECHO_START;
   2010                SERIAL_ECHOPAIR("  M208 S", LINEAR_UNIT(retract_recover_length));
   2011                #if EXTRUDERS > 1
   2012                  SERIAL_ECHOPAIR(" W", LINEAR_UNIT(retract_recover_length_swap));
   2013                #endif
   2014                SERIAL_ECHOLNPAIR(" F", MMS_TO_MMM(LINEAR_UNIT(retract_recover_feedrate_mm_s)));
   2015          
   2016                if (!forReplay) {
   2017                  CONFIG_ECHO_START;
   2018                  SERIAL_ECHOLNPGM("Auto-Retract: S=0 to disable, 1 to interpret extrude-only moves as retracts or recoveries");
   2019                }
   2020                CONFIG_ECHO_START;
   2021                SERIAL_ECHOLNPAIR("  M209 S", autoretract_enabled ? 1 : 0);
   2022          
   2023              #endif // FWRETRACT
   2024          
   2025              /**
   2026               * Auto Bed Leveling
   2027               */
   2028              #if HAS_BED_PROBE
   2029                if (!forReplay) {
   \                     ??report_110: (+1)
   \      0xACA   0x4650             MOV      R0,R10
   \      0xACC   0x2800             CMP      R0,#+0
   \      0xACE   0xD106             BNE.N    ??report_113
   2030                  CONFIG_ECHO_START;
   \      0xAD0   0x4620             MOV      R0,R4
   \      0xAD2   0x.... 0x....      BL       _Z14serialprintPGMPKc
   2031                  SERIAL_ECHOLNPGM("Z-Probe Offset (mm):");
   \      0xAD6   0x.... 0x....      ADR.W    R0,?_79
   \      0xADA   0x.... 0x....      BL       _Z14serialprintPGMPKc
   2032                }
   2033                CONFIG_ECHO_START;
   \                     ??report_113: (+1)
   \      0xADE   0xF1BA 0x0F00      CMP      R10,#+0
   \      0xAE2   0xD102             BNE.N    ??report_114
   \      0xAE4   0x4620             MOV      R0,R4
   \      0xAE6   0x.... 0x....      BL       _Z14serialprintPGMPKc
   2034                SERIAL_ECHOLNPAIR("  M851 Z", LINEAR_UNIT(zprobe_zoffset));
   \                     ??report_114: (+1)
   \      0xAEA   0x....             LDR.N    R0,??DataTable96_61
   \      0xAEC   0x6801             LDR      R1,[R0, #+0]
   \      0xAEE   0x.... 0x....      ADR.W    R0,?_80
   \      0xAF2   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0xAF6   0x7838             LDRB     R0,[R7, #+0]
   \      0xAF8   0x2800             CMP      R0,#+0
   \      0xAFA   0xD106             BNE.N    ??report_115
   \      0xAFC   0x210A             MOVS     R1,#+10
   \      0xAFE   0x4630             MOV      R0,R6
   \      0xB00   0xB003             ADD      SP,SP,#+12
   \      0xB02   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \      0xB06   0x.... 0x....      B.W      _ZN12MarlinSerial5writeEh
   \                     ??report_115: (+1)
   \      0xB0A   0x2200             MOVS     R2,#+0
   \      0xB0C   0x210A             MOVS     R1,#+10
   \      0xB0E   0x4628             MOV      R0,R5
   \      0xB10   0xB003             ADD      SP,SP,#+12
   \      0xB12   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \      0xB16   0x.... 0x....      B.W      _ZN12MarlinSerial5printEci
   \                     ??report_105: (+1)
   \      0xB1A   0x9801             LDR      R0,[SP, #+4]
   \      0xB1C   0x7800             LDRB     R0,[R0, #+0]
   \      0xB1E   0x2800             CMP      R0,#+0
   \      0xB20   0xD103             BNE.N    ??report_116
   \      0xB22   0x9801             LDR      R0,[SP, #+4]
   \      0xB24   0x7840             LDRB     R0,[R0, #+1]
   \      0xB26   0x2800             CMP      R0,#+0
   \      0xB28   0xD0CF             BEQ.N    ??report_110
   \                     ??report_116: (+1)
   \      0xB2A   0x4650             MOV      R0,R10
   \      0xB2C   0x2800             CMP      R0,#+0
   \      0xB2E   0xD106             BNE.N    ??report_117
   \      0xB30   0x4620             MOV      R0,R4
   \      0xB32   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \      0xB36   0x.... 0x....      ADR.W    R0,?_74
   \      0xB3A   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \                     ??report_117: (+1)
   \      0xB3E   0x9801             LDR      R0,[SP, #+4]
   \      0xB40   0x7800             LDRB     R0,[R0, #+0]
   \      0xB42   0x2800             CMP      R0,#+0
   \      0xB44   0xD088             BEQ.N    ??report_109
   \      0xB46   0x4650             MOV      R0,R10
   \      0xB48   0x2800             CMP      R0,#+0
   \      0xB4A   0xD102             BNE.N    ??report_118
   \      0xB4C   0x4620             MOV      R0,R4
   \      0xB4E   0x.... 0x....      BL       _Z14serialprintPGMPKc
   \                     ??report_118: (+1)
   \      0xB52   0x....             LDR.N    R0,??DataTable96_62
   \      0xB54   0x6801             LDR      R1,[R0, #+0]
   \      0xB56   0x.... 0x....      ADR.W    R0,?_75
   \      0xB5A   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \      0xB5E   0x....             LDR.N    R0,??DataTable96_63
   \      0xB60   0x6800             LDR      R0,[R0, #+0]
   \      0xB62   0x.... 0x....      BL       __aeabi_f2d
   \      0xB66   0x....             LDR.N    R2,??DataTable96_58  ;; 0x88e368f1
   \      0xB68   0x....             LDR.N    R3,??DataTable96_59  ;; 0x3fc4f8b5
   \      0xB6A   0x.... 0x....      BL       __aeabi_ddiv
   \      0xB6E   0x4602             MOV      R2,R0
   \      0xB70   0x460B             MOV      R3,R1
   \      0xB72   0x....             ADR.N    R0,??DataTable96_12  ;; 0x20, 0x49, 0x00, 0x00
   \      0xB74   0x.... 0x....      BL       _Z17serial_echopair_PPKcd
   \      0xB78   0x....             LDR.N    R0,??DataTable96_64
   \      0xB7A   0x6800             LDR      R0,[R0, #+0]
   \      0xB7C   0x.... 0x....      BL       __aeabi_f2d
   \      0xB80   0x4602             MOV      R2,R0
   \      0xB82   0x460B             MOV      R3,R1
   \      0xB84   0x....             LDR.N    R0,??DataTable96_58  ;; 0x88e368f1
   \      0xB86   0x....             LDR.N    R1,??DataTable96_59  ;; 0x3fc4f8b5
   \      0xB88   0x.... 0x....      BL       __aeabi_dmul
   \      0xB8C   0x4602             MOV      R2,R0
   \      0xB8E   0x460B             MOV      R3,R1
   \      0xB90   0x....             ADR.N    R0,??DataTable96_15  ;; 0x20, 0x44, 0x00, 0x00
   \      0xB92   0x.... 0x....      BL       _Z17serial_echopair_PPKcd
   \      0xB96   0x7838             LDRB     R0,[R7, #+0]
   \      0xB98   0x2800             CMP      R0,#+0
   \      0xB9A   0xF47F 0xAF58      BNE.W    ??report_108
   \      0xB9E   0x210A             MOVS     R1,#+10
   \      0xBA0   0x4630             MOV      R0,R6
   \      0xBA2   0x.... 0x....      BL       _ZN12MarlinSerial5writeEh
   \      0xBA6   0xE757             B.N      ??report_109
   \                     ??report_4:
   \      0xBA8   0x20 0x5A          DC8      0x20, 0x5A, 0x00, 0x00
   \              0x00 0x00    
   \      0xBAC   0x20 0x59          DC8      0x20, 0x59, 0x00, 0x00
   \              0x00 0x00    
   2035              #endif
   2036          
   2037              /**
   2038               * TMC2130 stepper driver current
   2039               */
   2040              #if ENABLED(HAVE_TMC2130)
   2041                if (!forReplay) {
   2042                  CONFIG_ECHO_START;
   2043                  SERIAL_ECHOLNPGM("Stepper driver current:");
   2044                }
   2045                CONFIG_ECHO_START;
   2046                SERIAL_ECHO("  M906");
   2047                #if ENABLED(X_IS_TMC2130)
   2048                  SERIAL_ECHOPAIR(" X", stepperX.getCurrent());
   2049                #endif
   2050                #if ENABLED(Y_IS_TMC2130)
   2051                  SERIAL_ECHOPAIR(" Y", stepperY.getCurrent());
   2052                #endif
   2053                #if ENABLED(Z_IS_TMC2130)
   2054                  SERIAL_ECHOPAIR(" Z", stepperZ.getCurrent());
   2055                #endif
   2056                #if ENABLED(X2_IS_TMC2130)
   2057                  SERIAL_ECHOPAIR(" X2", stepperX2.getCurrent());
   2058                #endif
   2059                #if ENABLED(Y2_IS_TMC2130)
   2060                  SERIAL_ECHOPAIR(" Y2", stepperY2.getCurrent());
   2061                #endif
   2062                #if ENABLED(Z2_IS_TMC2130)
   2063                  SERIAL_ECHOPAIR(" Z2", stepperZ2.getCurrent());
   2064                #endif
   2065                #if ENABLED(E0_IS_TMC2130)
   2066                  SERIAL_ECHOPAIR(" E0", stepperE0.getCurrent());
   2067                #endif
   2068                #if ENABLED(E1_IS_TMC2130)
   2069                  SERIAL_ECHOPAIR(" E1", stepperE1.getCurrent());
   2070                #endif
   2071                #if ENABLED(E2_IS_TMC2130)
   2072                  SERIAL_ECHOPAIR(" E2", stepperE2.getCurrent());
   2073                #endif
   2074                #if ENABLED(E3_IS_TMC2130)
   2075                  SERIAL_ECHOPAIR(" E3", stepperE3.getCurrent());
   2076                #endif
   2077                SERIAL_EOL;
   2078              #endif
   2079          
   2080              /**
   2081               * Linear Advance
   2082               */
   2083              #if ENABLED(LIN_ADVANCE)
   2084                if (!forReplay) {
   2085                  CONFIG_ECHO_START;
   2086                  SERIAL_ECHOLNPGM("Linear Advance:");
   2087                }
   2088                CONFIG_ECHO_START;
   2089                SERIAL_ECHOPAIR("  M900 K", planner.extruder_advance_k);
   2090                SERIAL_ECHOLNPAIR(" R", planner.advance_ed_ratio);
   2091              #endif
   2092            }

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_20:
   \        0x0   0x20 0x20          DC8 "  G21 ; Units in mm\012\012"
   \              0x47 0x32    
   \              0x31 0x20    
   \              0x3B 0x20    
   \              0x55 0x6E    
   \              0x69 0x74    
   \              0x73 0x20    
   \              0x69 0x6E    
   \              0x20 0x6D    
   \              0x6D 0x0A    
   \              0x0A 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_21:
   \        0x0   0x20 0x20          DC8 "  M149 C ; Units in Celsius\012\012"
   \              0x4D 0x31    
   \              0x34 0x39    
   \              0x20 0x43    
   \              0x20 0x3B    
   \              0x20 0x55    
   \              0x6E 0x69    
   \              0x74 0x73    
   \              0x20 0x69    
   \              0x6E 0x20    
   \              0x43 0x65    
   \              0x6C 0x73    
   \              0x69 0x75    
   \              0x73 0x0A    
   \              0x0A 0x00    
   \       0x1E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_81:
   \        0x0   0x45 0x72          DC8 "Error writing to EEPROM!\012"
   \              0x72 0x6F    
   \              0x72 0x20    
   \              0x77 0x72    
   \              0x69 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x74 0x6F    
   \              0x20 0x45    
   \              0x45 0x50    
   \              0x52 0x4F    
   \              0x4D 0x21    
   \              0x0A 0x00    
   \       0x1A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93:
   \        0x0   0x....'....        DC32     mksCfg+0x34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_1:
   \        0x0   0x....'....        DC32     delta_diagonal_rod

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_2:
   \        0x0   0x....'....        DC32     delta_radius

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_3:
   \        0x0   0x....'....        DC32     _ZN7Planner13z_fade_heightE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_4:
   \        0x0   0x....'....        DC32     _ZN14MarlinSettings18eeprom_write_errorE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_5:
   \        0x0   0x....'....        DC32     echomagic

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_6:
   \        0x0   0x....'....        DC32     _ZN7Planner17axis_steps_per_mmE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_7:
   \        0x0   0x....'....        DC32     _ZN7Planner17max_feedrate_mm_sE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_8:
   \        0x0   0x....'....        DC32     _ZN7Planner26max_acceleration_mm_per_s2E

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_9:
   \        0x0   0x....'....        DC32     _ZN7Planner12accelerationE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_10:
   \        0x0   0x....'....        DC32     _ZN7Planner20retract_accelerationE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_11:
   \        0x0   0x....'....        DC32     _ZN7Planner19travel_accelerationE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_12:
   \        0x0   0x....'....        DC32     _ZN7Planner17min_feedrate_mm_sE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_13:
   \        0x0   0x....'....        DC32     _ZN7Planner24min_travel_feedrate_mm_sE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_14:
   \        0x0   0x....'....        DC32     _ZN7Planner16min_segment_timeE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_15:
   \        0x0   0x....'....        DC32     _ZN7Planner8max_jerkE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_16:
   \        0x0   0x....'....        DC32     mksCfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_17:
   \        0x0   0x....'....        DC32     home_offset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_18:
   \        0x0   0x4120'0000        DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_19:
   \        0x0   0x....'....        DC32     _ZN17mesh_bed_leveling6statusE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable93_20:
   \        0x0   0x....'....        DC32     _ZN17mesh_bed_leveling8z_offsetE

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \        0x0   0x30 0x30          DC8 "000"
   \              0x30 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_22:
   \        0x0   0x46 0x69          DC8 "Filament settings:"
   \              0x6C 0x61    
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x20 0x73    
   \              0x65 0x74    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x73 0x3A    
   \              0x00         
   \       0x13   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_23:
   \        0x0   0x20 0x44          DC8 " Disabled\012"
   \              0x69 0x73    
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x64 0x0A    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_24:
   \        0x0   0x20 0x20          DC8 "  M200 D"
   \              0x4D 0x32    
   \              0x30 0x30    
   \              0x20 0x44    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_25:
   \        0x0   0x20 0x20          DC8 "  M200 D0\012"
   \              0x4D 0x32    
   \              0x30 0x30    
   \              0x20 0x44    
   \              0x30 0x0A    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \        0x0   0x53 0x65          DC8 "Settings Stored ("
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x73    
   \              0x20 0x53    
   \              0x74 0x6F    
   \              0x72 0x65    
   \              0x64 0x20    
   \              0x28 0x00    
   \       0x12   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \        0x0   0x45 0x72          DC8 "Error!!! EEPROM OVERFLOW!\012"
   \              0x72 0x6F    
   \              0x72 0x21    
   \              0x21 0x21    
   \              0x20 0x45    
   \              0x45 0x50    
   \              0x52 0x4F    
   \              0x4D 0x20    
   \              0x4F 0x56    
   \              0x45 0x52    
   \              0x46 0x4C    
   \              0x4F 0x57    
   \              0x21 0x0A    
   \              0x00         
   \       0x1B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94:
   \        0x0   0x....'....        DC32     _ZN17mesh_bed_leveling8z_valuesE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_1:
   \        0x0   0x....'....        DC32     zprobe_zoffset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_2:
   \        0x0   0x....'....        DC32     _ZN7Planner16bed_level_matrixE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_3:
   \        0x0   0x....'....        DC32     bilinear_start

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_4:
   \        0x0   0x....'....        DC32     bilinear_grid_spacing

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_5:
   \        0x0   0x....'....        DC32     z_values

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_6:
   \        0x0   0x....'....        DC32     _ZN20unified_bed_leveling5stateE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_7:
   \        0x0   0x....'....        DC32     endstop_adj

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_8:
   \        0x0   0x....'....        DC32     delta_segments_per_second

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_9:
   \        0x0   0x....'....        DC32     delta_calibration_radius

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_10:
   \        0x0   0x....'....        DC32     delta_tower_angle_trim

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_11:
   \        0x0   0x....'....        DC32     _ZN11Temperature2KpE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_12:
   \        0x0   0x....'....        DC32     _ZN11Temperature2KiE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_13:
   \        0x0   0x....'....        DC32     _ZN11Temperature2KdE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_14:
   \        0x0   0x453B'8000        DC32     0x453b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_15:
   \        0x0   0x....'....        DC32     _ZN11Temperature5bedKpE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_16:
   \        0x0   0x....'....        DC32     _ZN11Temperature5bedKiE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_17:
   \        0x0   0x....'....        DC32     _ZN11Temperature5bedKdE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_18:
   \        0x0   0x....'....        DC32     volumetric_enabled

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_19:
   \        0x0   0x....'....        DC32     filament_size

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_20:
   \        0x0   0x....'....        DC32     ubl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_21:
   \        0x0   0x....'....        DC32     lcd_preheat_hotend_temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_22:
   \        0x0   0x....'....        DC32     lcd_preheat_bed_temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable94_23:
   \        0x0   0x....'....        DC32     echomagic

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \        0x0   0x45 0x45          DC8 "EEPROM version mismatch "
   \              0x50 0x52    
   \              0x4F 0x4D    
   \              0x20 0x76    
   \              0x65 0x72    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x20 0x6D    
   \              0x69 0x73    
   \              0x6D 0x61    
   \              0x74 0x63    
   \              0x68 0x20    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \        0x0   0x28 0x45          DC8 "(EEPROM="
   \              0x45 0x50    
   \              0x52 0x4F    
   \              0x4D 0x3D    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \        0x0   0x20 0x4D          DC8 " Marlin=V37)\012"
   \              0x61 0x72    
   \              0x6C 0x69    
   \              0x6E 0x3D    
   \              0x56 0x33    
   \              0x37 0x29    
   \              0x0A 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_26:
   \        0x0   0x53 0x74          DC8 "Steps per unit:\012"
   \              0x65 0x70    
   \              0x73 0x20    
   \              0x70 0x65    
   \              0x72 0x20    
   \              0x75 0x6E    
   \              0x69 0x74    
   \              0x3A 0x0A    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_27:
   \        0x0   0x20 0x20          DC8 "  M92 X"
   \              0x4D 0x39    
   \              0x32 0x20    
   \              0x58 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_28:
   \        0x0   0x20 0x59          DC8 " Y"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_29:
   \        0x0   0x20 0x5A          DC8 " Z"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_30:
   \        0x0   0x20 0x45          DC8 " E"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_31:
   \        0x0   0x4D 0x61          DC8 "Maximum feedrates (units/s):\012"
   \              0x78 0x69    
   \              0x6D 0x75    
   \              0x6D 0x20    
   \              0x66 0x65    
   \              0x65 0x64    
   \              0x72 0x61    
   \              0x74 0x65    
   \              0x73 0x20    
   \              0x28 0x75    
   \              0x6E 0x69    
   \              0x74 0x73    
   \              0x2F 0x73    
   \              0x29 0x3A    
   \              0x0A 0x00    
   \       0x1E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_32:
   \        0x0   0x20 0x20          DC8 "  M203 X"
   \              0x4D 0x32    
   \              0x30 0x33    
   \              0x20 0x58    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_33:
   \        0x0   0x4D 0x61          DC8 "Maximum Acceleration (units/s2):\012"
   \              0x78 0x69    
   \              0x6D 0x75    
   \              0x6D 0x20    
   \              0x41 0x63    
   \              0x63 0x65    
   \              0x6C 0x65    
   \              0x72 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x28    
   \              0x75 0x6E    
   \              0x69 0x74    
   \              0x73 0x2F    
   \              0x73 0x32    
   \              0x29 0x3A    
   \              0x0A 0x00    
   \       0x22   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_34:
   \        0x0   0x20 0x20          DC8 "  M201 X"
   \              0x4D 0x32    
   \              0x30 0x31    
   \              0x20 0x58    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_35:
   \        0x0   0x41 0x63          DC8 41H, 63H, 63H, 65H, 6CH, 65H, 72H, 61H
   \              0x63 0x65    
   \              0x6C 0x65    
   \              0x72 0x61    
   \        0x8   0x74 0x69          DC8 74H, 69H, 6FH, 6EH, 20H, 28H, 75H, 6EH
   \              0x6F 0x6E    
   \              0x20 0x28    
   \              0x75 0x6E    
   \       0x10   0x69 0x74          DC8 69H, 74H, 73H, 2FH, 73H, 32H, 29H, 3AH
   \              0x73 0x2F    
   \              0x73 0x32    
   \              0x29 0x3A    
   \       0x18   0x20 0x50          DC8 20H, 50H, 3CH, 70H, 72H, 69H, 6EH, 74H
   \              0x3C 0x70    
   \              0x72 0x69    
   \              0x6E 0x74    
   \       0x20   0x5F 0x61          DC8 5FH, 61H, 63H, 63H, 65H, 6CH, 3EH, 20H
   \              0x63 0x63    
   \              0x65 0x6C    
   \              0x3E 0x20    
   \       0x28   0x52 0x3C          DC8 52H, 3CH, 72H, 65H, 74H, 72H, 61H, 63H
   \              0x72 0x65    
   \              0x74 0x72    
   \              0x61 0x63    
   \       0x30   0x74 0x5F          DC8 74H, 5FH, 61H, 63H, 63H, 65H, 6CH, 3EH
   \              0x61 0x63    
   \              0x63 0x65    
   \              0x6C 0x3E    
   \       0x38   0x20 0x54          DC8 20H, 54H, 3CH, 74H, 72H, 61H, 76H, 65H
   \              0x3C 0x74    
   \              0x72 0x61    
   \              0x76 0x65    
   \       0x40   0x6C 0x5F          DC8 6CH, 5FH, 61H, 63H, 63H, 65H, 6CH, 3EH
   \              0x61 0x63    
   \              0x63 0x65    
   \              0x6C 0x3E    
   \       0x48   0x0A 0x00          DC8 0AH, 0
   \       0x4A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_36:
   \        0x0   0x20 0x20          DC8 "  M204 P"
   \              0x4D 0x32    
   \              0x30 0x34    
   \              0x20 0x50    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_37:
   \        0x0   0x20 0x52          DC8 " R"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_38:
   \        0x0   0x20 0x54          DC8 " T"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_39:
   \        0x0   0x41 0x64          DC8 41H, 64H, 76H, 61H, 6EH, 63H, 65H, 64H
   \              0x76 0x61    
   \              0x6E 0x63    
   \              0x65 0x64    
   \        0x8   0x3A 0x20          DC8 3AH, 20H, 53H, 3CH, 6DH, 69H, 6EH, 5FH
   \              0x53 0x3C    
   \              0x6D 0x69    
   \              0x6E 0x5F    
   \       0x10   0x66 0x65          DC8 66H, 65H, 65H, 64H, 72H, 61H, 74H, 65H
   \              0x65 0x64    
   \              0x72 0x61    
   \              0x74 0x65    
   \       0x18   0x3E 0x20          DC8 3EH, 20H, 54H, 3CH, 6DH, 69H, 6EH, 5FH
   \              0x54 0x3C    
   \              0x6D 0x69    
   \              0x6E 0x5F    
   \       0x20   0x74 0x72          DC8 74H, 72H, 61H, 76H, 65H, 6CH, 5FH, 66H
   \              0x61 0x76    
   \              0x65 0x6C    
   \              0x5F 0x66    
   \       0x28   0x65 0x65          DC8 65H, 65H, 64H, 72H, 61H, 74H, 65H, 3EH
   \              0x64 0x72    
   \              0x61 0x74    
   \              0x65 0x3E    
   \       0x30   0x20 0x42          DC8 20H, 42H, 3CH, 6DH, 69H, 6EH, 5FH, 73H
   \              0x3C 0x6D    
   \              0x69 0x6E    
   \              0x5F 0x73    
   \       0x38   0x65 0x67          DC8 65H, 67H, 6DH, 65H, 6EH, 74H, 5FH, 74H
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x5F 0x74    
   \       0x40   0x69 0x6D          DC8 69H, 6DH, 65H, 5FH, 6DH, 73H, 3EH, 20H
   \              0x65 0x5F    
   \              0x6D 0x73    
   \              0x3E 0x20    
   \       0x48   0x58 0x3C          DC8 58H, 3CH, 6DH, 61H, 78H, 5FH, 78H, 79H
   \              0x6D 0x61    
   \              0x78 0x5F    
   \              0x78 0x79    
   \       0x50   0x5F 0x6A          DC8 5FH, 6AH, 65H, 72H, 6BH, 3EH, 20H, 5AH
   \              0x65 0x72    
   \              0x6B 0x3E    
   \              0x20 0x5A    
   \       0x58   0x3C 0x6D          DC8 3CH, 6DH, 61H, 78H, 5FH, 7AH, 5FH, 6AH
   \              0x61 0x78    
   \              0x5F 0x7A    
   \              0x5F 0x6A    
   \       0x60   0x65 0x72          DC8 65H, 72H, 6BH, 3EH, 20H, 45H, 3CH, 6DH
   \              0x6B 0x3E    
   \              0x20 0x45    
   \              0x3C 0x6D    
   \       0x68   0x61 0x78          DC8 61H, 78H, 5FH, 65H, 5FH, 6AH, 65H, 72H
   \              0x5F 0x65    
   \              0x5F 0x6A    
   \              0x65 0x72    
   \       0x70   0x6B 0x3E          DC8 6BH, 3EH, 0AH, 0
   \              0x0A 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_40:
   \        0x0   0x20 0x20          DC8 "  M205 S"
   \              0x4D 0x32    
   \              0x30 0x35    
   \              0x20 0x53    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_41:
   \        0x0   0x20 0x42          DC8 " B"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_42:
   \        0x0   0x20 0x58          DC8 " X"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_43:
   \        0x0   0x48 0x6F          DC8 "Home offset:\012"
   \              0x6D 0x65    
   \              0x20 0x6F    
   \              0x66 0x66    
   \              0x73 0x65    
   \              0x74 0x3A    
   \              0x0A 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_44:
   \        0x0   0x20 0x20          DC8 "  M206 X"
   \              0x4D 0x32    
   \              0x30 0x36    
   \              0x20 0x58    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_50:
   \        0x0   0x49 0x6E          DC8 "Ina"
   \              0x61 0x00    

   \                                 In section .rodata, align 2, keep-with-next
   \                     ?_58:
   \        0x0   0x3D 0x00          DC8 "="

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_69:
   \        0x0   0x20 0x48          DC8 " H"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_70:
   \        0x0   0x20 0x53          DC8 " S"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_73:
   \        0x0   0x20 0x46          DC8 " F"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_76:
   \        0x0   0x20 0x49          DC8 " I"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_77:
   \        0x0   0x20 0x44          DC8 " D"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \        0x0   0x65 0x65          DC8 "eeprom_read_error"
   \              0x70 0x72    
   \              0x6F 0x6D    
   \              0x5F 0x72    
   \              0x65 0x61    
   \              0x64 0x5F    
   \              0x65 0x72    
   \              0x72 0x6F    
   \              0x72 0x00    
   \       0x12   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \        0x0   0x20 0x73          DC8 " stored settings retrieved ("
   \              0x74 0x6F    
   \              0x72 0x65    
   \              0x64 0x20    
   \              0x73 0x65    
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x73    
   \              0x20 0x72    
   \              0x65 0x74    
   \              0x72 0x69    
   \              0x65 0x76    
   \              0x65 0x64    
   \              0x20 0x28    
   \              0x00         
   \       0x1D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \        0x0   0x20 0x62          DC8 " bytes)\012"
   \              0x79 0x74    
   \              0x65 0x73    
   \              0x29 0x0A    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_10:
   \        0x0   0x45 0x45          DC8 "EEPROM checksum mismatch\012"
   \              0x50 0x52    
   \              0x4F 0x4D    
   \              0x20 0x63    
   \              0x68 0x65    
   \              0x63 0x6B    
   \              0x73 0x75    
   \              0x6D 0x20    
   \              0x6D 0x69    
   \              0x73 0x6D    
   \              0x61 0x74    
   \              0x63 0x68    
   \              0x0A 0x00    
   \       0x1A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_11:
   \        0x0   0x45 0x45          DC8 "EEPROM checksum mis!"
   \              0x50 0x52    
   \              0x4F 0x4D    
   \              0x20 0x63    
   \              0x68 0x65    
   \              0x63 0x6B    
   \              0x73 0x75    
   \              0x6D 0x20    
   \              0x6D 0x69    
   \              0x73 0x21    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_12:
   \        0x0   0x20 0x55          DC8 " UBL "
   \              0x42 0x4C    
   \              0x20 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_13:
   \        0x0   0x6E 0x6F          DC8 "not "
   \              0x74 0x20    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_14:
   \        0x0   0x61 0x63          DC8 "active!\012"
   \              0x74 0x69    
   \              0x76 0x65    
   \              0x21 0x0A    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_15:
   \        0x0   0x0A 0x55          DC8 "\012Unified Bed Leveling system initialized.\012\012"
   \              0x6E 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x42    
   \              0x65 0x64    
   \              0x20 0x4C    
   \              0x65 0x76    
   \              0x65 0x6C    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x73 0x79    
   \              0x73 0x74    
   \              0x65 0x6D    
   \              0x20 0x69    
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x61 0x6C    
   \              0x69 0x7A    
   \              0x65 0x64    
   \              0x2E 0x0A    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_16:
   \        0x0   0x3F 0x55          DC8 "?Unable to enable Unified Bed Leveling system.\012"
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x74 0x6F    
   \              0x20 0x65    
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x55 0x6E    
   \              0x69 0x66    
   \              0x69 0x65    
   \              0x64 0x20    
   \              0x42 0x65    
   \              0x64 0x20    
   \              0x4C 0x65    
   \              0x76 0x65    
   \              0x6C 0x69    
   \              0x6E 0x67    
   \              0x20 0x73    
   \              0x79 0x73    
   \              0x74 0x65    
   \              0x6D 0x2E    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_17:
   \        0x0   0x4D 0x65          DC8 "Mesh "
   \              0x73 0x68    
   \              0x20 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_18:
   \        0x0   0x20 0x6C          DC8 " loaded from storage.\012"
   \              0x6F 0x61    
   \              0x64 0x65    
   \              0x64 0x20    
   \              0x66 0x72    
   \              0x6F 0x6D    
   \              0x20 0x73    
   \              0x74 0x6F    
   \              0x72 0x61    
   \              0x67 0x65    
   \              0x2E 0x0A    
   \              0x00         
   \       0x17   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_19:
   \        0x0   0x55 0x42          DC8 "UBL System reset()\012"
   \              0x4C 0x20    
   \              0x53 0x79    
   \              0x73 0x74    
   \              0x65 0x6D    
   \              0x20 0x72    
   \              0x65 0x73    
   \              0x65 0x74    
   \              0x28 0x29    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95:
   \        0x0   0x....'....        DC32     lcd_preheat_fan_speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_1:
   \        0x0   0x....'....        DC32     _ZN14MarlinSettings18eeprom_write_errorE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_2:
   \        0x0   0x....'....        DC32     card

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_3:
   \        0x0   0x....'....        DC32     _ZN7Planner26max_acceleration_mm_per_s2E

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_4:
   \        0x0   0x....'....        DC32     _ZN7Planner17axis_steps_per_mmE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_5:
   \        0x0   0x....'....        DC32     _ZN7Planner17max_feedrate_mm_sE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_6:
   \        0x0   0x....'....        DC32     _ZN17mesh_bed_leveling6statusE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_7:
   \        0x0   0x....'....        DC32     _ZN17mesh_bed_leveling8z_offsetE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_8:
   \        0x0   0x....'....        DC32     delta_radius

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_9:
   \        0x0   0x....'....        DC32     delta_diagonal_rod

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_10:
   \        0x0   0x....'....        DC32     Running

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_11:
   \        0x0   0x....'....        DC32     customizedSerial

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_12:
   \        0x0   0x....'....        DC32     serial2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_13:
   \        0x0   0x....'....        DC32     errormagic

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_14:
   \        0x0   0x....'....        DC32     _ZN20unified_bed_leveling12eeprom_startE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_15:
   \        0x0   0x....'....        DC32     _ZN7Planner12accelerationE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_16:
   \        0x0   0x....'....        DC32     _ZN7Planner20retract_accelerationE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_17:
   \        0x0   0x....'....        DC32     _ZN7Planner19travel_accelerationE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_18:
   \        0x0   0x....'....        DC32     _ZN7Planner17min_feedrate_mm_sE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_19:
   \        0x0   0x....'....        DC32     _ZN7Planner24min_travel_feedrate_mm_sE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_20:
   \        0x0   0x....'....        DC32     _ZN7Planner16min_segment_timeE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_21:
   \        0x0   0x....'....        DC32     _ZN7Planner8max_jerkE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_22:
   \        0x0   0x....'....        DC32     home_offset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_23:
   \        0x0   0x....'....        DC32     _ZN7Planner13z_fade_heightE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_24:
   \        0x0   0x4040'0000        DC32     0x40400000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_25:
   \        0x0   0x....'....        DC32     ubl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_26:
   \        0x0   0x....'....        DC32     echomagic

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_27:
   \        0x0   0x447A'0000        DC32     0x447a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_28:
   \        0x0   0x3ECC'CCCD        DC32     0x3ecccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_29:
   \        0x0   0x....'....        DC32     mksCfg+0x34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_30:
   \        0x0   0x3F4C'CCCD        DC32     0x3f4ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_31:
   \        0x0   0x....'....        DC32     zprobe_zoffset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_32:
   \        0x0   0x....'....        DC32     endstop_adj

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_33:
   \        0x0   0x....'....        DC32     delta_segments_per_second

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_34:
   \        0x0   0x....'....        DC32     delta_calibration_radius

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_35:
   \        0x0   0x....'....        DC32     delta_tower_angle_trim

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_36:
   \        0x0   0x....'....        DC32     lcd_preheat_hotend_temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_37:
   \        0x0   0x....'....        DC32     lcd_preheat_bed_temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_38:
   \        0x0   0x41B1'999A        DC32     0x41b1999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_39:
   \        0x0   0x....'....        DC32     _ZN11Temperature2KpE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_40:
   \        0x0   0x3E35'31A6        DC32     0x3e3531a6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_41:
   \        0x0   0x....'....        DC32     _ZN11Temperature2KiE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_42:
   \        0x0   0x442D'F340        DC32     0x442df340

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_43:
   \        0x0   0x....'....        DC32     _ZN11Temperature2KdE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_44:
   \        0x0   0x4120'0000        DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_45:
   \        0x0   0x....'....        DC32     _ZN11Temperature5bedKpE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_46:
   \        0x0   0x3B76'F5EB        DC32     0x3b76f5eb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_47:
   \        0x0   0x....'....        DC32     _ZN11Temperature5bedKiE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_48:
   \        0x0   0x44E9'0070        DC32     0x44e90070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_49:
   \        0x0   0x....'....        DC32     _ZN11Temperature5bedKdE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable95_50:
   \        0x0   0x....'....        DC32     volumetric_enabled

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \        0x0   0x48 0x61          DC8 "Hardcoded Default Settings Loaded\012"
   \              0x72 0x64    
   \              0x63 0x6F    
   \              0x64 0x65    
   \              0x64 0x20    
   \              0x44 0x65    
   \              0x66 0x61    
   \              0x75 0x6C    
   \              0x74 0x20    
   \              0x53 0x65    
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x73    
   \              0x20 0x4C    
   \              0x6F 0x61    
   \              0x64 0x65    
   \              0x64 0x0A    
   \              0x00         
   \       0x23   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96:
   \        0x0   0x....'....        DC32     filament_size

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_1:
   \        0x0   0x20 0x52          DC8      0x20, 0x52, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_2:
   \        0x0   0x20 0x48          DC8      0x20, 0x48, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_3:
   \        0x0   0x20 0x53          DC8      0x20, 0x53, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_4:
   \        0x0   0x20 0x42          DC8      0x20, 0x42, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_5:
   \        0x0   0x20 0x58          DC8      0x20, 0x58, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_6:
   \        0x0   0x....'....        DC32     echomagic

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_7:
   \        0x0   0x20 0x46          DC8      0x20, 0x46, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_8:
   \        0x0   0x....'....        DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_9:
   \        0x0   0x....'....        DC32     serial2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_10:
   \        0x0   0x....'....        DC32     customizedSerial

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_11:
   \        0x0   0x....'....        DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_12:
   \        0x0   0x20 0x49          DC8      0x20, 0x49, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_13:
   \        0x0   0x....'....        DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_14:
   \        0x0   0x....'....        DC32     volumetric_enabled

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_15:
   \        0x0   0x20 0x44          DC8      0x20, 0x44, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_16:
   \        0x0   0x....'....        DC32     ?_23

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_17:
   \        0x0   0x....'....        DC32     ?_24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_18:
   \        0x0   0x....'....        DC32     ?_25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_19:
   \        0x0   0x....'....        DC32     ?_26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_20:
   \        0x0   0x....'....        DC32     _ZN7Planner17axis_steps_per_mmE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_21:
   \        0x0   0x....'....        DC32     ?_27

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_22:
   \        0x0   0x....'....        DC32     ?_31

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_23:
   \        0x0   0x....'....        DC32     _ZN7Planner17max_feedrate_mm_sE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_24:
   \        0x0   0x....'....        DC32     ?_32

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_25:
   \        0x0   0x....'....        DC32     ?_33

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_26:
   \        0x0   0x....'....        DC32     _ZN7Planner26max_acceleration_mm_per_s2E

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_27:
   \        0x0   0x....'....        DC32     ?_34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_28:
   \        0x0   0x....'....        DC32     ?_35

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_29:
   \        0x0   0x....'....        DC32     _ZN7Planner12accelerationE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_30:
   \        0x0   0x....'....        DC32     ?_36

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_31:
   \        0x0   0x....'....        DC32     _ZN7Planner20retract_accelerationE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_32:
   \        0x0   0x....'....        DC32     _ZN7Planner19travel_accelerationE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_33:
   \        0x0   0x....'....        DC32     ?_39

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_34:
   \        0x0   0x....'....        DC32     _ZN7Planner17min_feedrate_mm_sE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_35:
   \        0x0   0x....'....        DC32     ?_40

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_36:
   \        0x0   0x....'....        DC32     _ZN7Planner24min_travel_feedrate_mm_sE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_37:
   \        0x0   0x....'....        DC32     _ZN7Planner16min_segment_timeE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_38:
   \        0x0   0x....'....        DC32     _ZN7Planner8max_jerkE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_39:
   \        0x0   0x....'....        DC32     ?_43

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_40:
   \        0x0   0x....'....        DC32     home_offset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_41:
   \        0x0   0x....'....        DC32     ?_44

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_42:
   \        0x0   0x....'....        DC32     _ZN7Planner13z_fade_heightE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_43:
   \        0x0   0x....'....        DC32     _ZN17mesh_bed_leveling8z_valuesE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_44:
   \        0x0   0x....'....        DC32     _ZN20unified_bed_leveling5stateE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_45:
   \        0x0   0x....'....        DC32     _ZN20unified_bed_leveling12eeprom_startE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_46:
   \        0x0   0x....'....        DC32     _ZN7Planner11abl_enabledE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_47:
   \        0x0   0x....'....        DC32     endstop_adj

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_48:
   \        0x0   0x....'....        DC32     delta_diagonal_rod

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_49:
   \        0x0   0x....'....        DC32     delta_radius

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_50:
   \        0x0   0x....'....        DC32     delta_segments_per_second

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_51:
   \        0x0   0x....'....        DC32     delta_calibration_radius

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_52:
   \        0x0   0x....'....        DC32     delta_tower_angle_trim

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_53:
   \        0x0   0x....'....        DC32     lcd_preheat_hotend_temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_54:
   \        0x0   0x....'....        DC32     lcd_preheat_bed_temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_55:
   \        0x0   0x....'....        DC32     lcd_preheat_fan_speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_56:
   \        0x0   0x....'....        DC32     _ZN11Temperature5bedKpE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_57:
   \        0x0   0x....'....        DC32     _ZN11Temperature5bedKiE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_58:
   \        0x0   0x88E3'68F1        DC32     0x88e368f1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_59:
   \        0x0   0x3FC4'F8B5        DC32     0x3fc4f8b5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_60:
   \        0x0   0x....'....        DC32     _ZN11Temperature5bedKdE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_61:
   \        0x0   0x....'....        DC32     zprobe_zoffset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_62:
   \        0x0   0x....'....        DC32     _ZN11Temperature2KpE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_63:
   \        0x0   0x....'....        DC32     _ZN11Temperature2KiE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable96_64:
   \        0x0   0x....'....        DC32     _ZN11Temperature2KdE

   \                                 In section .text, align 4, keep-with-next
   \                     ?_45:
   \        0x0   0x4D 0x65          DC8 "Mesh Bed Leveling:\012"
   \              0x73 0x68    
   \              0x20 0x42    
   \              0x65 0x64    
   \              0x20 0x4C    
   \              0x65 0x76    
   \              0x65 0x6C    
   \              0x69 0x6E    
   \              0x67 0x3A    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_46:
   \        0x0   0x20 0x20          DC8 "  M420 S"
   \              0x4D 0x34    
   \              0x32 0x30    
   \              0x20 0x53    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_47:
   \        0x0   0x20 0x20          DC8 "  G29 S3 X"
   \              0x47 0x32    
   \              0x39 0x20    
   \              0x53 0x33    
   \              0x20 0x58    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_48:
   \        0x0   0x55 0x6E          DC8 "Unified Bed Leveling:\012"
   \              0x69 0x66    
   \              0x69 0x65    
   \              0x64 0x20    
   \              0x42 0x65    
   \              0x64 0x20    
   \              0x4C 0x65    
   \              0x76 0x65    
   \              0x6C 0x69    
   \              0x6E 0x67    
   \              0x3A 0x0A    
   \              0x00         
   \       0x17   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_49:
   \        0x0   0x0A 0x55          DC8 "\012UBL is "
   \              0x42 0x4C    
   \              0x20 0x69    
   \              0x73 0x20    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_51:
   \        0x0   0x63 0x74          DC8 "ctive\012\012Active Mesh Slot: "
   \              0x69 0x76    
   \              0x65 0x0A    
   \              0x0A 0x41    
   \              0x63 0x74    
   \              0x69 0x76    
   \              0x65 0x20    
   \              0x4D 0x65    
   \              0x73 0x68    
   \              0x20 0x53    
   \              0x6C 0x6F    
   \              0x74 0x3A    
   \              0x20 0x00    
   \       0x1A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_52:
   \        0x0   0x7A 0x5F          DC8 "z_offset: "
   \              0x6F 0x66    
   \              0x66 0x73    
   \              0x65 0x74    
   \              0x3A 0x20    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_53:
   \        0x0   0x45 0x45          DC8 "EEPROM can hold "
   \              0x50 0x52    
   \              0x4F 0x4D    
   \              0x20 0x63    
   \              0x61 0x6E    
   \              0x20 0x68    
   \              0x6F 0x6C    
   \              0x64 0x20    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_54:
   \        0x0   0x20 0x6D          DC8 " meshes.\012\012"
   \              0x65 0x73    
   \              0x68 0x65    
   \              0x73 0x2E    
   \              0x0A 0x0A    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_55:
   \        0x0   0x47 0x52          DC8 "GRID_MAX_POINTS_X  "
   \              0x49 0x44    
   \              0x5F 0x4D    
   \              0x41 0x58    
   \              0x5F 0x50    
   \              0x4F 0x49    
   \              0x4E 0x54    
   \              0x53 0x5F    
   \              0x58 0x20    
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_56:
   \        0x0   0x47 0x52          DC8 "GRID_MAX_POINTS_Y  "
   \              0x49 0x44    
   \              0x5F 0x4D    
   \              0x41 0x58    
   \              0x5F 0x50    
   \              0x4F 0x49    
   \              0x4E 0x54    
   \              0x53 0x5F    
   \              0x59 0x20    
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_57:
   \        0x0   0x55 0x42          DC8 55H, 42H, 4CH, 5FH, 4DH, 45H, 53H, 48H
   \              0x4C 0x5F    
   \              0x4D 0x45    
   \              0x53 0x48    
   \        0x8   0x5F 0x4D          DC8 5FH, 4DH, 49H, 4EH, 5FH, 58H, 20H, 20H
   \              0x49 0x4E    
   \              0x5F 0x58    
   \              0x20 0x20    
   \       0x10   0x28 0x6D          DC8 28H, 6DH, 6BH, 73H, 43H, 66H, 67H, 2EH
   \              0x6B 0x73    
   \              0x43 0x66    
   \              0x67 0x2E    
   \       0x18   0x78 0x5F          DC8 78H, 5FH, 6DH, 69H, 6EH, 5FH, 70H, 6FH
   \              0x6D 0x69    
   \              0x6E 0x5F    
   \              0x70 0x6F    
   \       0x20   0x73 0x20          DC8 73H, 20H, 2BH, 20H, 6DH, 6BH, 73H, 43H
   \              0x2B 0x20    
   \              0x6D 0x6B    
   \              0x73 0x43    
   \       0x28   0x66 0x67          DC8 66H, 67H, 2EH, 75H, 62H, 6CH, 5FH, 6DH
   \              0x2E 0x75    
   \              0x62 0x6C    
   \              0x5F 0x6D    
   \       0x30   0x65 0x73          DC8 65H, 73H, 68H, 5FH, 69H, 6EH, 73H, 65H
   \              0x68 0x5F    
   \              0x69 0x6E    
   \              0x73 0x65    
   \       0x38   0x74 0x29          DC8 74H, 29H, 0
   \              0x00         
   \       0x3B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_59:
   \        0x0   0x55 0x42          DC8 55H, 42H, 4CH, 5FH, 4DH, 45H, 53H, 48H
   \              0x4C 0x5F    
   \              0x4D 0x45    
   \              0x53 0x48    
   \        0x8   0x5F 0x4D          DC8 5FH, 4DH, 49H, 4EH, 5FH, 59H, 20H, 20H
   \              0x49 0x4E    
   \              0x5F 0x59    
   \              0x20 0x20    
   \       0x10   0x28 0x6D          DC8 28H, 6DH, 6BH, 73H, 43H, 66H, 67H, 2EH
   \              0x6B 0x73    
   \              0x43 0x66    
   \              0x67 0x2E    
   \       0x18   0x79 0x5F          DC8 79H, 5FH, 6DH, 69H, 6EH, 5FH, 70H, 6FH
   \              0x6D 0x69    
   \              0x6E 0x5F    
   \              0x70 0x6F    
   \       0x20   0x73 0x20          DC8 73H, 20H, 2BH, 20H, 6DH, 6BH, 73H, 43H
   \              0x2B 0x20    
   \              0x6D 0x6B    
   \              0x73 0x43    
   \       0x28   0x66 0x67          DC8 66H, 67H, 2EH, 75H, 62H, 6CH, 5FH, 6DH
   \              0x2E 0x75    
   \              0x62 0x6C    
   \              0x5F 0x6D    
   \       0x30   0x65 0x73          DC8 65H, 73H, 68H, 5FH, 69H, 6EH, 73H, 65H
   \              0x68 0x5F    
   \              0x69 0x6E    
   \              0x73 0x65    
   \       0x38   0x74 0x29          DC8 74H, 29H, 0
   \              0x00         
   \       0x3B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_60:
   \        0x0   0x55 0x42          DC8 55H, 42H, 4CH, 5FH, 4DH, 45H, 53H, 48H
   \              0x4C 0x5F    
   \              0x4D 0x45    
   \              0x53 0x48    
   \        0x8   0x5F 0x4D          DC8 5FH, 4DH, 41H, 58H, 5FH, 58H, 20H, 20H
   \              0x41 0x58    
   \              0x5F 0x58    
   \              0x20 0x20    
   \       0x10   0x28 0x6D          DC8 28H, 6DH, 6BH, 73H, 43H, 66H, 67H, 2EH
   \              0x6B 0x73    
   \              0x43 0x66    
   \              0x67 0x2E    
   \       0x18   0x78 0x5F          DC8 78H, 5FH, 6DH, 61H, 78H, 5FH, 70H, 6FH
   \              0x6D 0x61    
   \              0x78 0x5F    
   \              0x70 0x6F    
   \       0x20   0x73 0x20          DC8 73H, 20H, 2DH, 20H, 28H, 6DH, 6BH, 73H
   \              0x2D 0x20    
   \              0x28 0x6D    
   \              0x6B 0x73    
   \       0x28   0x43 0x66          DC8 43H, 66H, 67H, 2EH, 75H, 62H, 6CH, 5FH
   \              0x67 0x2E    
   \              0x75 0x62    
   \              0x6C 0x5F    
   \       0x30   0x6D 0x65          DC8 6DH, 65H, 73H, 68H, 5FH, 69H, 6EH, 73H
   \              0x73 0x68    
   \              0x5F 0x69    
   \              0x6E 0x73    
   \       0x38   0x65 0x74          DC8 65H, 74H, 29H, 29H, 0
   \              0x29 0x29    
   \              0x00         
   \       0x3D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_61:
   \        0x0   0x55 0x42          DC8 55H, 42H, 4CH, 5FH, 4DH, 45H, 53H, 48H
   \              0x4C 0x5F    
   \              0x4D 0x45    
   \              0x53 0x48    
   \        0x8   0x5F 0x4D          DC8 5FH, 4DH, 41H, 58H, 5FH, 59H, 20H, 20H
   \              0x41 0x58    
   \              0x5F 0x59    
   \              0x20 0x20    
   \       0x10   0x28 0x6D          DC8 28H, 6DH, 6BH, 73H, 43H, 66H, 67H, 2EH
   \              0x6B 0x73    
   \              0x43 0x66    
   \              0x67 0x2E    
   \       0x18   0x79 0x5F          DC8 79H, 5FH, 6DH, 61H, 78H, 5FH, 70H, 6FH
   \              0x6D 0x61    
   \              0x78 0x5F    
   \              0x70 0x6F    
   \       0x20   0x73 0x20          DC8 73H, 20H, 2DH, 20H, 28H, 6DH, 6BH, 73H
   \              0x2D 0x20    
   \              0x28 0x6D    
   \              0x6B 0x73    
   \       0x28   0x43 0x66          DC8 43H, 66H, 67H, 2EH, 75H, 62H, 6CH, 5FH
   \              0x67 0x2E    
   \              0x75 0x62    
   \              0x6C 0x5F    
   \       0x30   0x6D 0x65          DC8 6DH, 65H, 73H, 68H, 5FH, 69H, 6EH, 73H
   \              0x73 0x68    
   \              0x5F 0x69    
   \              0x6E 0x73    
   \       0x38   0x65 0x74          DC8 65H, 74H, 29H, 29H, 0
   \              0x29 0x29    
   \              0x00         
   \       0x3D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_62:
   \        0x0   0x4D 0x45          DC8 "MESH_X_DIST  "
   \              0x53 0x48    
   \              0x5F 0x58    
   \              0x5F 0x44    
   \              0x49 0x53    
   \              0x54 0x20    
   \              0x20 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_63:
   \        0x0   0x4D 0x45          DC8 "MESH_Y_DIST  "
   \              0x53 0x48    
   \              0x5F 0x59    
   \              0x5F 0x44    
   \              0x49 0x53    
   \              0x54 0x20    
   \              0x20 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_64:
   \        0x0   0x41 0x75          DC8 "Auto Bed Leveling:\012"
   \              0x74 0x6F    
   \              0x20 0x42    
   \              0x65 0x64    
   \              0x20 0x4C    
   \              0x65 0x76    
   \              0x65 0x6C    
   \              0x69 0x6E    
   \              0x67 0x3A    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_65:
   \        0x0   0x45 0x6E          DC8 "Endstop adjustment:\012"
   \              0x64 0x73    
   \              0x74 0x6F    
   \              0x70 0x20    
   \              0x61 0x64    
   \              0x6A 0x75    
   \              0x73 0x74    
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x3A 0x0A    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_66:
   \        0x0   0x20 0x20          DC8 "  M666 X"
   \              0x4D 0x36    
   \              0x36 0x36    
   \              0x20 0x58    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_67:
   \        0x0   0x44 0x65          DC8 44H, 65H, 6CH, 74H, 61H, 20H, 73H, 65H
   \              0x6C 0x74    
   \              0x61 0x20    
   \              0x73 0x65    
   \        0x8   0x74 0x74          DC8 74H, 74H, 69H, 6EH, 67H, 73H, 3AH, 20H
   \              0x69 0x6E    
   \              0x67 0x73    
   \              0x3A 0x20    
   \       0x10   0x4C 0x3C          DC8 4CH, 3CH, 64H, 69H, 61H, 67H, 6FH, 6EH
   \              0x64 0x69    
   \              0x61 0x67    
   \              0x6F 0x6E    
   \       0x18   0x61 0x6C          DC8 61H, 6CH, 5FH, 72H, 6FH, 64H, 3EH, 20H
   \              0x5F 0x72    
   \              0x6F 0x64    
   \              0x3E 0x20    
   \       0x20   0x52 0x3C          DC8 52H, 3CH, 72H, 61H, 64H, 69H, 75H, 73H
   \              0x72 0x61    
   \              0x64 0x69    
   \              0x75 0x73    
   \       0x28   0x3E 0x20          DC8 3EH, 20H, 48H, 3CH, 68H, 65H, 69H, 67H
   \              0x48 0x3C    
   \              0x68 0x65    
   \              0x69 0x67    
   \       0x30   0x68 0x74          DC8 68H, 74H, 3EH, 20H, 53H, 3CH, 73H, 65H
   \              0x3E 0x20    
   \              0x53 0x3C    
   \              0x73 0x65    
   \       0x38   0x67 0x6D          DC8 67H, 6DH, 65H, 6EH, 74H, 73H, 5FH, 70H
   \              0x65 0x6E    
   \              0x74 0x73    
   \              0x5F 0x70    
   \       0x40   0x65 0x72          DC8 65H, 72H, 5FH, 73H, 3EH, 20H, 42H, 3CH
   \              0x5F 0x73    
   \              0x3E 0x20    
   \              0x42 0x3C    
   \       0x48   0x63 0x61          DC8 63H, 61H, 6CH, 69H, 62H, 72H, 61H, 74H
   \              0x6C 0x69    
   \              0x62 0x72    
   \              0x61 0x74    
   \       0x50   0x69 0x6F          DC8 69H, 6FH, 6EH, 20H, 72H, 61H, 64H, 69H
   \              0x6E 0x20    
   \              0x72 0x61    
   \              0x64 0x69    
   \       0x58   0x75 0x73          DC8 75H, 73H, 3EH, 20H, 58H, 59H, 5AH, 3CH
   \              0x3E 0x20    
   \              0x58 0x59    
   \              0x5A 0x3C    
   \       0x60   0x74 0x6F          DC8 74H, 6FH, 77H, 65H, 72H, 20H, 61H, 6EH
   \              0x77 0x65    
   \              0x72 0x20    
   \              0x61 0x6E    
   \       0x68   0x67 0x6C          DC8 67H, 6CH, 65H, 20H, 63H, 6FH, 72H, 72H
   \              0x65 0x20    
   \              0x63 0x6F    
   \              0x72 0x72    
   \       0x70   0x65 0x63          DC8 65H, 63H, 74H, 69H, 6FH, 6EH, 73H, 3EH
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x73 0x3E    
   \       0x78   0x0A 0x00          DC8 0AH, 0
   \       0x7A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_68:
   \        0x0   0x20 0x20          DC8 "  M665 L"
   \              0x4D 0x36    
   \              0x36 0x35    
   \              0x20 0x4C    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_71:
   \        0x0   0x4D 0x61          DC8 "Material heatup parameters:\012"
   \              0x74 0x65    
   \              0x72 0x69    
   \              0x61 0x6C    
   \              0x20 0x68    
   \              0x65 0x61    
   \              0x74 0x75    
   \              0x70 0x20    
   \              0x70 0x61    
   \              0x72 0x61    
   \              0x6D 0x65    
   \              0x74 0x65    
   \              0x72 0x73    
   \              0x3A 0x0A    
   \              0x00         
   \       0x1D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_72:
   \        0x0   0x20 0x20          DC8 "  M145 S"
   \              0x4D 0x31    
   \              0x34 0x35    
   \              0x20 0x53    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_74:
   \        0x0   0x50 0x49          DC8 "PID settings:\012"
   \              0x44 0x20    
   \              0x73 0x65    
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x73    
   \              0x3A 0x0A    
   \              0x00         
   \        0xF   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_75:
   \        0x0   0x20 0x20          DC8 "  M301 P"
   \              0x4D 0x33    
   \              0x30 0x31    
   \              0x20 0x50    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_78:
   \        0x0   0x20 0x20          DC8 "  M304 P"
   \              0x4D 0x33    
   \              0x30 0x34    
   \              0x20 0x50    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_79:
   \        0x0   0x5A 0x2D          DC8 "Z-Probe Offset (mm):\012"
   \              0x50 0x72    
   \              0x6F 0x62    
   \              0x65 0x20    
   \              0x4F 0x66    
   \              0x66 0x73    
   \              0x65 0x74    
   \              0x20 0x28    
   \              0x6D 0x6D    
   \              0x29 0x3A    
   \              0x0A 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_80:
   \        0x0   0x20 0x20          DC8 "  M851 Z"
   \              0x4D 0x38    
   \              0x35 0x31    
   \              0x20 0x5A    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         
   2093          
   2094          #endif // !DISABLE_M503

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Endstops::enable_globally(bool)
      16   MarlinSerial::print(char const *)
         0   -> MarlinSerial::write(char const *)
         0   -> package_to_wifi
        16   -> strlen
      16   MarlinSerial::write(char const *)
         0   -> BSP_UartIfQueueTxData
        16   -> strlen
       8   MarlinSerial::write(uint8_t)
         8   -> BSP_UartIfQueueTxData
      88   MarlinSettings::load()
        88   -> AT24CXX_Write
        88   -> CardReader::mksLoad()
        88   -> CardReader::mksReset()
        88   -> MarlinSerial::print(char const *)
        88   -> MarlinSettings::postprocess()
        88   -> MarlinSettings::read_data(int &, uint8_t *, uint16_t)
        88   -> MarlinSettings::report(bool)
        88   -> MarlinSettings::reset()
        88   -> __aeabi_fsub
        88   -> free
        88   -> kill(char const *)
        88   -> malloc
        88   -> mesh_bed_leveling::reset()
        88   -> serial_echopair_P(char const *, char const *)
        88   -> serial_echopair_P(char const *, int)
        88   -> serialprintPGM(char const *)
        88   -> set_bed_leveling_enabled(bool)
        88   -> strncmp
        88   -> unified_bed_leveling::load_mesh(int16_t)
        88   -> unified_bed_leveling::reset()
        88   -> unified_bed_leveling::sanity_check()
        88 __aeabi_cfcmpeq
      16   MarlinSettings::postprocess()
        16   -> Planner::refresh_positioning()
        16   -> Planner::reset_acceleration_rates()
        16   -> Temperature::updatePID()
        16   -> calculate_volumetric_multipliers()
        16   -> recalc_delta_settings(float, float)
         0   -> refresh_bed_level()
        16   -> refresh_zprobe_zoffset(bool)
        16   -> set_z_fade_height(float)
        16   -> update_software_endstops(AxisEnum)
      24   MarlinSettings::read_data(int &, uint8_t *, uint16_t)
        24   -> AT24CXX_Read
      48   MarlinSettings::report(bool)
         0   -> MarlinSerial::print(char, int)
        48   -> MarlinSerial::print(char, int)
        48   -> MarlinSerial::print(double, int)
         0   -> MarlinSerial::write(uint8_t)
        48   -> MarlinSerial::write(uint8_t)
        48   -> __aeabi_ddiv
        48   -> __aeabi_dmul
        48   -> __aeabi_f2d
        48   -> __aeabi_fadd
        48   -> __aeabi_fdiv
        48   -> __aeabi_fsub
        48   -> __aeabi_i2f
        48   -> mesh_bed_leveling::has_mesh()
        48   -> serial_echopair_P(char const *, double)
        48   -> serial_echopair_P(char const *, float)
        48   -> serial_echopair_P(char const *, int)
        48   -> serial_echopair_P(char const *, uint8_t)
        48   -> serial_echopair_P(char const *, unsigned long)
        48   -> serialprintPGM(char const *)
      16   MarlinSettings::reset()
        16   -> Endstops::enable_globally(bool)
        16   -> MarlinSettings::postprocess()
        16   -> __aeabi_memcpy4
        16   -> __aeabi_memset4
        16   -> reset_bed_level()
         0   -> serialprintPGM(char const *)
        16   -> serialprintPGM(char const *)
        16   -> unified_bed_leveling::reset()
      56   MarlinSettings::save()
        56   -> MarlinSettings::write_data(int &, uint8_t const *, uint16_t)
        56   -> __aeabi_fadd
        56   -> serial_echopair_P(char const *, int)
        56   -> serialprintPGM(char const *)
        56   -> unified_bed_leveling::store_mesh(int16_t)
      24   MarlinSettings::write_data(int &, uint8_t const *, uint16_t)
        24   -> AT24CXX_Read
        24   -> AT24CXX_Write
        24   -> serialprintPGM(char const *)
       0   mesh_bed_leveling::has_mesh()
       0   serial_echopair_P(char const *, uint8_t)
         0   -> serial_echopair_P(char const *, int)
       0   serialprintPGM(char const *)
         0   -> MarlinSerial::print(char const *)
         0   -> MarlinSerial::write(char const *)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable93
       4  ??DataTable93_1
       4  ??DataTable93_10
       4  ??DataTable93_11
       4  ??DataTable93_12
       4  ??DataTable93_13
       4  ??DataTable93_14
       4  ??DataTable93_15
       4  ??DataTable93_16
       4  ??DataTable93_17
       4  ??DataTable93_18
       4  ??DataTable93_19
       4  ??DataTable93_2
       4  ??DataTable93_20
       4  ??DataTable93_3
       4  ??DataTable93_4
       4  ??DataTable93_5
       4  ??DataTable93_6
       4  ??DataTable93_7
       4  ??DataTable93_8
       4  ??DataTable93_9
       4  ??DataTable94
       4  ??DataTable94_1
       4  ??DataTable94_10
       4  ??DataTable94_11
       4  ??DataTable94_12
       4  ??DataTable94_13
       4  ??DataTable94_14
       4  ??DataTable94_15
       4  ??DataTable94_16
       4  ??DataTable94_17
       4  ??DataTable94_18
       4  ??DataTable94_19
       4  ??DataTable94_2
       4  ??DataTable94_20
       4  ??DataTable94_21
       4  ??DataTable94_22
       4  ??DataTable94_23
       4  ??DataTable94_3
       4  ??DataTable94_4
       4  ??DataTable94_5
       4  ??DataTable94_6
       4  ??DataTable94_7
       4  ??DataTable94_8
       4  ??DataTable94_9
       4  ??DataTable95
       4  ??DataTable95_1
       4  ??DataTable95_10
       4  ??DataTable95_11
       4  ??DataTable95_12
       4  ??DataTable95_13
       4  ??DataTable95_14
       4  ??DataTable95_15
       4  ??DataTable95_16
       4  ??DataTable95_17
       4  ??DataTable95_18
       4  ??DataTable95_19
       4  ??DataTable95_2
       4  ??DataTable95_20
       4  ??DataTable95_21
       4  ??DataTable95_22
       4  ??DataTable95_23
       4  ??DataTable95_24
       4  ??DataTable95_25
       4  ??DataTable95_26
       4  ??DataTable95_27
       4  ??DataTable95_28
       4  ??DataTable95_29
       4  ??DataTable95_3
       4  ??DataTable95_30
       4  ??DataTable95_31
       4  ??DataTable95_32
       4  ??DataTable95_33
       4  ??DataTable95_34
       4  ??DataTable95_35
       4  ??DataTable95_36
       4  ??DataTable95_37
       4  ??DataTable95_38
       4  ??DataTable95_39
       4  ??DataTable95_4
       4  ??DataTable95_40
       4  ??DataTable95_41
       4  ??DataTable95_42
       4  ??DataTable95_43
       4  ??DataTable95_44
       4  ??DataTable95_45
       4  ??DataTable95_46
       4  ??DataTable95_47
       4  ??DataTable95_48
       4  ??DataTable95_49
       4  ??DataTable95_5
       4  ??DataTable95_50
       4  ??DataTable95_6
       4  ??DataTable95_7
       4  ??DataTable95_8
       4  ??DataTable95_9
       4  ??DataTable96
       4  ??DataTable96_1
       4  ??DataTable96_10
       4  ??DataTable96_11
       4  ??DataTable96_12
       4  ??DataTable96_13
       4  ??DataTable96_14
       4  ??DataTable96_15
       4  ??DataTable96_16
       4  ??DataTable96_17
       4  ??DataTable96_18
       4  ??DataTable96_19
       4  ??DataTable96_2
       4  ??DataTable96_20
       4  ??DataTable96_21
       4  ??DataTable96_22
       4  ??DataTable96_23
       4  ??DataTable96_24
       4  ??DataTable96_25
       4  ??DataTable96_26
       4  ??DataTable96_27
       4  ??DataTable96_28
       4  ??DataTable96_29
       4  ??DataTable96_3
       4  ??DataTable96_30
       4  ??DataTable96_31
       4  ??DataTable96_32
       4  ??DataTable96_33
       4  ??DataTable96_34
       4  ??DataTable96_35
       4  ??DataTable96_36
       4  ??DataTable96_37
       4  ??DataTable96_38
       4  ??DataTable96_39
       4  ??DataTable96_4
       4  ??DataTable96_40
       4  ??DataTable96_41
       4  ??DataTable96_42
       4  ??DataTable96_43
       4  ??DataTable96_44
       4  ??DataTable96_45
       4  ??DataTable96_46
       4  ??DataTable96_47
       4  ??DataTable96_48
       4  ??DataTable96_49
       4  ??DataTable96_5
       4  ??DataTable96_50
       4  ??DataTable96_51
       4  ??DataTable96_52
       4  ??DataTable96_53
       4  ??DataTable96_54
       4  ??DataTable96_55
       4  ??DataTable96_56
       4  ??DataTable96_57
       4  ??DataTable96_58
       4  ??DataTable96_59
       4  ??DataTable96_6
       4  ??DataTable96_60
       4  ??DataTable96_61
       4  ??DataTable96_62
       4  ??DataTable96_63
       4  ??DataTable96_64
       4  ??DataTable96_7
       4  ??DataTable96_8
       4  ??DataTable96_9
      36  ?_0
       4  ?_1
      28  ?_10
      24  ?_11
       8  ?_12
       8  ?_13
      12  ?_14
      44  ?_15
      48  ?_16
       8  ?_17
      24  ?_18
      20  ?_19
      20  ?_2
      24  ?_20
      32  ?_21
      20  ?_22
      12  ?_23
      12  ?_24
      12  ?_25
      20  ?_26
       8  ?_27
       4  ?_28
       4  ?_29
      12  ?_3
       4  ?_30
      32  ?_31
      12  ?_32
      36  ?_33
      12  ?_34
      76  ?_35
      12  ?_36
       4  ?_37
       4  ?_38
     116  ?_39
      28  ?_4
      12  ?_40
       4  ?_41
       4  ?_42
      16  ?_43
      12  ?_44
      20  ?_45
      12  ?_46
      12  ?_47
      24  ?_48
      12  ?_49
      28  ?_5
       4  ?_50
      28  ?_51
      12  ?_52
      20  ?_53
      12  ?_54
      20  ?_55
      20  ?_56
      60  ?_57
       2  ?_58
      60  ?_59
      12  ?_6
      64  ?_60
      64  ?_61
      16  ?_62
      16  ?_63
      20  ?_64
      24  ?_65
      12  ?_66
     124  ?_67
      12  ?_68
       4  ?_69
      16  ?_7
       4  ?_70
      32  ?_71
      12  ?_72
       4  ?_73
      16  ?_74
      12  ?_75
       4  ?_76
       4  ?_77
      12  ?_78
      24  ?_79
      20  ?_8
      12  ?_80
      28  ?_81
      32  ?_9
      20  Endstops::enable_globally(bool)
      64  MarlinSerial::print(char const *)
      28  MarlinSerial::write(char const *)
      12  MarlinSerial::write(uint8_t)
       4  MarlinSettings::eeprom_write_error
          MarlinSettings::eeprom_read_error
          MarlinSettings::eeprom_checksum
    2002  MarlinSettings::load()
     112  MarlinSettings::postprocess()
      66  MarlinSettings::read_data(int &, uint8_t *, uint16_t)
    2992  MarlinSettings::report(bool)
     374  MarlinSettings::reset()
    1426  MarlinSettings::save()
     140  MarlinSettings::write_data(int &, uint8_t const *, uint16_t)
      12  adj
      16  def1
      16  def2
      16  def3
      16  mesh_bed_leveling::has_mesh()
       4  serial_echopair_P(char const *, uint8_t)
      36  serialprintPGM(char const *)
       1  settings
      16  tmp1
      16  tmp2
      16  tmp3
       4  version

 
     5 bytes in section .bss
   530 bytes in section .rodata
 9 292 bytes in section .text
 
 9 112 bytes of CODE  memory (+ 180 bytes shared)
   530 bytes of CONST memory
     5 bytes of DATA  memory

Errors: none
Warnings: 22
