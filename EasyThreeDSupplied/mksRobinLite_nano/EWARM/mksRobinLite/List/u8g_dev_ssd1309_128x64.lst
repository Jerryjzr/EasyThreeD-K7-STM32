###############################################################################
#
# IAR ANSI C/C++ Compiler V8.22.1.15669/W32 for ARM       28/Dec/2020  21:37:07
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\nano\Middlewares\Third_Party\u8glib_arm_v1.17\src\u8g_dev_ssd1309_128x64.c
#    Command line =  
#        -f C:\Users\ADMINI~1\AppData\Local\Temp\EW453F.tmp
#        (F:\nano\Middlewares\Third_Party\u8glib_arm_v1.17\src\u8g_dev_ssd1309_128x64.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D MKS_ROBIN -D MARLIN -D __arm__ -D
#        USE_MKS_WIFI --preprocess=s F:\nano\EWARM\mksRobinLite\List -lC
#        F:\nano\EWARM\mksRobinLite\List -lA F:\nano\EWARM\mksRobinLite\List
#        --diag_suppress Pa050 -o F:\nano\EWARM\mksRobinLite\Obj --no_unroll
#        --no_inline --no_tbaa --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --char_is_signed --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Full.h" -I F:\nano\EWARM/../Inc\ -I
#        F:\nano\EWARM/../Src\ -I
#        F:\nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\ -I
#        F:\nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\ -I
#        F:\nano\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/Inc\ -I
#        F:\nano\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\ -I
#        F:\nano\EWARM/../Drivers/CMSIS/Include\ -I
#        F:\nano\EWARM/../Drivers/BSP/STM32MKS-3dPrinter\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/Common\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/l6474\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/at24cxx\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/w25qxx\ -I
#        F:\nano\EWARM/../Drivers/BSP/MotorControl\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/FatFs/src\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/Marlin\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/u8glib_arm_v1.17/src\ -I
#        F:\nano\EWARM/../Middlewares/arduino\ -I
#        F:\nano\EWARM/../Middlewares/arduino/avr\ -I
#        F:\nano\EWARM/../Inc/Logo\ -Om --use_c++_inline -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.0\arm\CMSIS\Core\Include\" -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  F:\nano\EWARM\mksRobinLite\List\u8g_dev_ssd1309_128x64.lst
#    Object file  =  F:\nano\EWARM\mksRobinLite\Obj\u8g_dev_ssd1309_128x64.o
#
###############################################################################

F:\nano\Middlewares\Third_Party\u8glib_arm_v1.17\src\u8g_dev_ssd1309_128x64.c
      1          /*
      2          
      3            u8g_dev_ssd1309_128x64.c
      4          
      5            Universal 8bit Graphics Library
      6            
      7            Copyright (c) 2012, olikraus@gmail.com
      8            All rights reserved.
      9          
     10            Redistribution and use in source and binary forms, with or without modification, 
     11            are permitted provided that the following conditions are met:
     12          
     13            * Redistributions of source code must retain the above copyright notice, this list 
     14              of conditions and the following disclaimer.
     15              
     16            * Redistributions in binary form must reproduce the above copyright notice, this 
     17              list of conditions and the following disclaimer in the documentation and/or other 
     18              materials provided with the distribution.
     19          
     20            THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
     21            CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
     22            INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
     23            MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
     24            DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
     25            CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
     26            SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
     27            NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
     28            LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
     29            CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
     30            STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
     31            ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
     32            ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
     33            
     34            
     35          */
     36          
     37          #include "u8g.h"
     38          
     39          #define WIDTH 128
     40          #define HEIGHT 64
     41          #define PAGE_HEIGHT 8
     42          
     43          
     44          /* ssd1309 ini sequence*/

   \                                 In section .text, align 4, keep-with-next
     45          static const uint8_t u8g_dev_ssd1309_128x64_init_seq[] PROGMEM={
   \                     u8g_dev_ssd1309_128x64_init_seq:
   \   00000000   0xFF 0xD0          DC8 255, 208, 255, 224, 255, 193, 255, 209, 253, 18, 174, 213, 160, 168
   \              0xFF 0xE0    
   \              0xFF 0xC1    
   \              0xFF 0xD1    
   \              0xFD 0x12    
   \              0xAE 0xD5    
   \              0xA0 0xA8    
   \   0000000E   0x3F 0x3D          DC8 63, 61, 0, 64, 161, 200, 218, 18, 129, 223, 217, 130, 219, 52, 164
   \              0x00 0x40    
   \              0xA1 0xC8    
   \              0xDA 0x12    
   \              0x81 0xDF    
   \              0xD9 0x82    
   \              0xDB 0x34    
   \              0xA4         
   \   0000001D   0xA6 0xFF          DC8 166, 255, 191, 255, 50, 175, 255, 50, 255, 208, 255, 254, 0, 0, 0
   \              0xBF 0xFF    
   \              0x32 0xAF    
   \              0xFF 0x32    
   \              0xFF 0xD0    
   \              0xFF 0xFE    
   \              0x00 0x00    
   \              0x00         
     46          	U8G_ESC_CS(0),             /* disable chip */
     47          	U8G_ESC_ADR(0),           /* instruction mode */
     48          	U8G_ESC_RST(1),           /* do reset low pulse with (1*16)+2 milliseconds */
     49          	U8G_ESC_CS(1),             /* enable chip */
     50          	
     51          	0xfd,0x12,		/*Command Lock */
     52          	0xae,			/*Set Display Off */
     53          	0xd5,0xa0,		/*set Display Clock Divide Ratio/Oscillator Frequency */
     54          	0xa8,0x3f,		/*Set Multiplex Ratio */
     55          	0x3d,0x00,		/*Set Display Offset*/
     56          	0x40,			/*Set Display Start Line*/
     57          	0xa1,			/*Set Segment Re-Map*/
     58          	0xc8,			/*Set COM Output Scan Direction*/
     59          	0xda,0x12,		/*Set COM Pins Hardware Configuration*/
     60          	0x81,0xdf,		/*Set Current Control */
     61          	0xd9,0x82,		/*Set Pre-Charge Period */
     62          	0xdb,0x34,		/*Set VCOMH Deselect Level */
     63          	0xa4,			/*Set Entire Display On/Off */
     64          	0xa6,			/*Set Normal/Inverse Display*/
     65          	U8G_ESC_VCC(1),	/*Power up VCC & Stabilized */
     66          	U8G_ESC_DLY(50),
     67          	0xaf,			/*Set Display On */
     68          	U8G_ESC_DLY(50),
     69          	U8G_ESC_CS(0),             /* disable chip */
     70          	U8G_ESC_END                /* end of sequence */
     71          };
     72          
     73          /* select one init sequence here */
     74            #define u8g_dev_ssd1309_128x64_init_seq u8g_dev_ssd1309_128x64_init_seq
     75            
     76            

   \                                 In section .text, align 4, keep-with-next
     77           static const uint8_t u8g_dev_ssd1309_128x64_data_start[] PROGMEM = {
   \                     u8g_dev_ssd1309_128x64_data_start:
   \   00000000   0xFF 0xE0          DC8 255, 224, 255, 209, 16, 0, 255, 254
   \              0xFF 0xD1    
   \              0x10 0x00    
   \              0xFF 0xFE    
     78            U8G_ESC_ADR(0),           /* instruction mode */
     79            U8G_ESC_CS(1),             /* enable chip */
     80            0x010,		/* set upper 4 bit of the col adr to 0 */
     81            0x000,		/* set lower 4 bit of the col adr to 4  */
     82            U8G_ESC_END                /* end of sequence */
     83          };
     84          

   \                                 In section .text, align 4, keep-with-next
     85          static const uint8_t u8g_dev_ssd13xx_sleep_on[] PROGMEM = {
   \                     u8g_dev_ssd13xx_sleep_on:
   \   00000000   0xFF 0xE0          DC8 255, 224, 255, 209, 174, 255, 208, 255, 254, 0, 0, 0
   \              0xFF 0xD1    
   \              0xAE 0xFF    
   \              0xD0 0xFF    
   \              0xFE 0x00    
   \              0x00 0x00    
     86            U8G_ESC_ADR(0),           /* instruction mode */
     87            U8G_ESC_CS(1),             /* enable chip */
     88            0x0ae,		/* display off */      
     89            U8G_ESC_CS(0),             /* disable chip */
     90            U8G_ESC_END                /* end of sequence */
     91          };
     92          

   \                                 In section .text, align 4, keep-with-next
     93          static const uint8_t u8g_dev_ssd13xx_sleep_off[] PROGMEM = {
   \                     u8g_dev_ssd13xx_sleep_off:
   \   00000000   0xFF 0xE0          DC8 255, 224, 255, 209, 175, 255, 50, 255, 208, 255, 254, 0
   \              0xFF 0xD1    
   \              0xAF 0xFF    
   \              0x32 0xFF    
   \              0xD0 0xFF    
   \              0xFE 0x00    
     94            U8G_ESC_ADR(0),           /* instruction mode */
     95            U8G_ESC_CS(1),             /* enable chip */
     96            0x0af,		/* display on */      
     97            U8G_ESC_DLY(50),       /* delay 50 ms */
     98            U8G_ESC_CS(0),             /* disable chip */
     99            U8G_ESC_END                /* end of sequence */
    100          };
    101          

   \                                 In section .text, align 4, keep-with-next
    102          uint8_t u8g_dev_ssd1309_128x64_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg)
    103          {
   \                     u8g_dev_ssd1309_128x64_fn: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
   \   00000008   0x4616             MOV      R6,R2
   \   0000000A   0x461F             MOV      R7,R3
    104            switch(msg)
   \   0000000C   0x4630             MOV      R0,R6
   \   0000000E   0x280A             CMP      R0,#+10
   \   00000010   0xD008             BEQ.N    ??u8g_dev_ssd1309_128x64_fn_0
   \   00000012   0x280F             CMP      R0,#+15
   \   00000014   0xD03C             BEQ.N    ??u8g_dev_ssd1309_128x64_fn_1
   \   00000016   0x2810             CMP      R0,#+16
   \   00000018   0xD055             BEQ.N    ??u8g_dev_ssd1309_128x64_fn_2
   \   0000001A   0x2811             CMP      R0,#+17
   \   0000001C   0xD05A             BEQ.N    ??u8g_dev_ssd1309_128x64_fn_3
   \   0000001E   0x2815             CMP      R0,#+21
   \   00000020   0xD013             BEQ.N    ??u8g_dev_ssd1309_128x64_fn_4
   \   00000022   0xE008             B.N      ??u8g_dev_ssd1309_128x64_fn_5
    105            {
    106              case U8G_DEV_MSG_INIT:
    107                u8g_InitCom(u8g, dev, U8G_SPI_CLK_CYCLE_300NS);
   \                     ??u8g_dev_ssd1309_128x64_fn_0: (+1)
   \   00000024   0x2202             MOVS     R2,#+2
   \   00000026   0x4620             MOV      R0,R4
   \   00000028   0x.... 0x....      BL       u8g_InitCom
    108                u8g_WriteEscSeqP(u8g, dev, u8g_dev_ssd1309_128x64_init_seq);
   \   0000002C   0x....             ADR.N    R2,u8g_dev_ssd1309_128x64_init_seq
   \   0000002E   0x4629             MOV      R1,R5
   \   00000030   0x4620             MOV      R0,R4
   \   00000032   0x.... 0x....      BL       u8g_WriteEscSeqP
    109                break;
    110              case U8G_DEV_MSG_STOP:
    111                break;
    112              case U8G_DEV_MSG_PAGE_NEXT:
    113                {
    114                  u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
    115                  u8g_WriteEscSeqP(u8g, dev, u8g_dev_ssd1309_128x64_data_start);    
    116                  u8g_WriteByte(u8g, dev, 0x0b0 | pb->p.page); /* select current page (SSD1306) */
    117                  u8g_SetAddress(u8g, dev, 1);           /* data mode */
    118                  if ( u8g_pb_WriteBuffer(pb, u8g, dev) == 0 )
    119                    return 0;
    120                  u8g_SetChipSelect(u8g, dev, 0);
    121                }
    122                break;
    123              case U8G_DEV_MSG_CONTRAST:
    124                u8g_SetChipSelect(u8g, dev, 1);
    125                u8g_SetAddress(u8g, dev, 0);          /* instruction mode */
    126                u8g_WriteByte(u8g, dev, 0x081);
    127                u8g_WriteByte(u8g, dev, (*(uint8_t *)arg) >> 2);
    128                u8g_SetChipSelect(u8g, dev, 0);      
    129                return 1; 
    130              case U8G_DEV_MSG_SLEEP_ON:
    131                u8g_WriteEscSeqP(u8g, dev, u8g_dev_ssd13xx_sleep_on);    
    132                return 1;
    133              case U8G_DEV_MSG_SLEEP_OFF:
    134                u8g_WriteEscSeqP(u8g, dev, u8g_dev_ssd13xx_sleep_off);    
    135                return 1;
    136            }
    137            return u8g_dev_pb8v1_base_fn(u8g, dev, msg, arg);
   \                     ??u8g_dev_ssd1309_128x64_fn_5: (+1)
   \   00000036   0x463B             MOV      R3,R7
   \   00000038   0x4632             MOV      R2,R6
   \   0000003A   0x4629             MOV      R1,R5
   \   0000003C   0x4620             MOV      R0,R4
   \   0000003E   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000042   0x.... 0x....      B.W      u8g_dev_pb8v1_base_fn
   \                     ??u8g_dev_ssd1309_128x64_fn_6: (+1)
   \   00000046   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
   \                     ??u8g_dev_ssd1309_128x64_fn_4: (+1)
   \   0000004A   0xF8D5 0x8004      LDR      R8,[R5, #+4]
   \   0000004E   0xBF00             Nop      
   \   00000050   0x....             ADR.N    R2,u8g_dev_ssd1309_128x64_data_start
   \   00000052   0x4620             MOV      R0,R4
   \   00000054   0x.... 0x....      BL       u8g_WriteEscSeqP
   \   00000058   0xF898 0x2004      LDRB     R2,[R8, #+4]
   \   0000005C   0xF042 0x02B0      ORR      R2,R2,#0xB0
   \   00000060   0x4629             MOV      R1,R5
   \   00000062   0x4620             MOV      R0,R4
   \   00000064   0x.... 0x....      BL       u8g_WriteByte
   \   00000068   0x2201             MOVS     R2,#+1
   \   0000006A   0x4629             MOV      R1,R5
   \   0000006C   0x4620             MOV      R0,R4
   \   0000006E   0x.... 0x....      BL       u8g_SetAddress
   \   00000072   0x462A             MOV      R2,R5
   \   00000074   0x4621             MOV      R1,R4
   \   00000076   0x4640             MOV      R0,R8
   \   00000078   0x.... 0x....      BL       u8g_pb_WriteBuffer
   \   0000007C   0x2800             CMP      R0,#+0
   \   0000007E   0xD101             BNE.N    ??u8g_dev_ssd1309_128x64_fn_7
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0xE7E0             B.N      ??u8g_dev_ssd1309_128x64_fn_6
   \                     ??u8g_dev_ssd1309_128x64_fn_7: (+1)
   \   00000084   0x2200             MOVS     R2,#+0
   \   00000086   0x4629             MOV      R1,R5
   \   00000088   0x4620             MOV      R0,R4
   \   0000008A   0x.... 0x....      BL       u8g_SetChipSelect
   \   0000008E   0xE7D2             B.N      ??u8g_dev_ssd1309_128x64_fn_5
   \                     ??u8g_dev_ssd1309_128x64_fn_1: (+1)
   \   00000090   0x2201             MOVS     R2,#+1
   \   00000092   0x4620             MOV      R0,R4
   \   00000094   0x.... 0x....      BL       u8g_SetChipSelect
   \   00000098   0x2200             MOVS     R2,#+0
   \   0000009A   0x4629             MOV      R1,R5
   \   0000009C   0x4620             MOV      R0,R4
   \   0000009E   0x.... 0x....      BL       u8g_SetAddress
   \   000000A2   0x2281             MOVS     R2,#+129
   \   000000A4   0x4629             MOV      R1,R5
   \   000000A6   0x4620             MOV      R0,R4
   \   000000A8   0x.... 0x....      BL       u8g_WriteByte
   \   000000AC   0x783A             LDRB     R2,[R7, #+0]
   \   000000AE   0x0892             LSRS     R2,R2,#+2
   \   000000B0   0x4629             MOV      R1,R5
   \   000000B2   0x4620             MOV      R0,R4
   \   000000B4   0x.... 0x....      BL       u8g_WriteByte
   \   000000B8   0x2200             MOVS     R2,#+0
   \   000000BA   0x4629             MOV      R1,R5
   \   000000BC   0x4620             MOV      R0,R4
   \   000000BE   0x.... 0x....      BL       u8g_SetChipSelect
   \   000000C2   0x2001             MOVS     R0,#+1
   \   000000C4   0xE7BF             B.N      ??u8g_dev_ssd1309_128x64_fn_6
   \                     ??u8g_dev_ssd1309_128x64_fn_2: (+1)
   \   000000C6   0xBF00             Nop      
   \   000000C8   0x....             ADR.N    R2,u8g_dev_ssd13xx_sleep_on
   \   000000CA   0x4620             MOV      R0,R4
   \   000000CC   0x.... 0x....      BL       u8g_WriteEscSeqP
   \   000000D0   0x2001             MOVS     R0,#+1
   \   000000D2   0xE7B8             B.N      ??u8g_dev_ssd1309_128x64_fn_6
   \                     ??u8g_dev_ssd1309_128x64_fn_3: (+1)
   \   000000D4   0x....             ADR.N    R2,u8g_dev_ssd13xx_sleep_off
   \   000000D6   0x4620             MOV      R0,R4
   \   000000D8   0x.... 0x....      BL       u8g_WriteEscSeqP
   \   000000DC   0x2001             MOVS     R0,#+1
   \   000000DE   0xE7B2             B.N      ??u8g_dev_ssd1309_128x64_fn_6
    138          }
    139          

   \                                 In section .bss, align 4
    140          U8G_PB_DEV(u8g_dev_ssd1309_128x64_hw_spi, WIDTH, HEIGHT, PAGE_HEIGHT, u8g_dev_ssd1309_128x64_fn, U8G_COM_HW_SPI);
   \                     u8g_dev_ssd1309_128x64_hw_spi_buf:
   \   00000000                      DS8 128

   \                                 In section .data, align 4
   \   __absolute u8g_pb_t u8g_dev_ssd1309_128x64_hw_spi_pb
   \                     u8g_dev_ssd1309_128x64_hw_spi_pb:
   \   00000000   0x08 0x40          DC8 8, 64, 0, 0, 0, 128, 0, 0
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x00 0x00    
   \   00000008   0x........         DC32 u8g_dev_ssd1309_128x64_hw_spi_buf

   \                                 In section .data, align 4
   \   __absolute u8g_dev_t u8g_dev_ssd1309_128x64_hw_spi
   \                     u8g_dev_ssd1309_128x64_hw_spi:
   \   00000000   0x........         DC32 u8g_dev_ssd1309_128x64_fn, u8g_dev_ssd1309_128x64_hw_spi_pb
   \              0x........   
   \   00000008   0x........         DC32 u8g_com_null_fn

   \                                 In section .bss, align 4
    141          U8G_PB_DEV(u8g_dev_ssd1309_128x64_sw_spi, WIDTH, HEIGHT, PAGE_HEIGHT, u8g_dev_ssd1309_128x64_fn, U8G_COM_SW_SPI);
   \                     u8g_dev_ssd1309_128x64_sw_spi_buf:
   \   00000000                      DS8 128

   \                                 In section .data, align 4
   \   __absolute u8g_pb_t u8g_dev_ssd1309_128x64_sw_spi_pb
   \                     u8g_dev_ssd1309_128x64_sw_spi_pb:
   \   00000000   0x08 0x40          DC8 8, 64, 0, 0, 0, 128, 0, 0
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x00 0x00    
   \   00000008   0x........         DC32 u8g_dev_ssd1309_128x64_sw_spi_buf

   \                                 In section .data, align 4
   \   __absolute u8g_dev_t u8g_dev_ssd1309_128x64_sw_spi
   \                     u8g_dev_ssd1309_128x64_sw_spi:
   \   00000000   0x........         DC32 u8g_dev_ssd1309_128x64_fn, u8g_dev_ssd1309_128x64_sw_spi_pb
   \              0x........   
   \   00000008   0x........         DC32 u8g_com_null_fn

   \                                 In section .bss, align 4
    142          U8G_PB_DEV(u8g_dev_ssd1309_128x64_i2c, WIDTH, HEIGHT, PAGE_HEIGHT, u8g_dev_ssd1309_128x64_fn, U8G_COM_SSD_I2C);
   \                     u8g_dev_ssd1309_128x64_i2c_buf:
   \   00000000                      DS8 128

   \                                 In section .data, align 4
   \   __absolute u8g_pb_t u8g_dev_ssd1309_128x64_i2c_pb
   \                     u8g_dev_ssd1309_128x64_i2c_pb:
   \   00000000   0x08 0x40          DC8 8, 64, 0, 0, 0, 128, 0, 0
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x00 0x00    
   \   00000008   0x........         DC32 u8g_dev_ssd1309_128x64_i2c_buf

   \                                 In section .data, align 4
   \   __absolute u8g_dev_t u8g_dev_ssd1309_128x64_i2c
   \                     u8g_dev_ssd1309_128x64_i2c:
   \   00000000   0x........         DC32 u8g_dev_ssd1309_128x64_fn, u8g_dev_ssd1309_128x64_i2c_pb
   \              0x........   
   \   00000008   0x........         DC32 u8g_com_null_fn
    143           
    144            

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   u8g_dev_ssd1309_128x64_fn
        24   -> u8g_InitCom
        24   -> u8g_SetAddress
        24   -> u8g_SetChipSelect
        24   -> u8g_WriteByte
        24   -> u8g_WriteEscSeqP
         0   -> u8g_dev_pb8v1_base_fn
        24   -> u8g_pb_WriteBuffer


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  u8g_dev_ssd1309_128x64_data_start
     224  u8g_dev_ssd1309_128x64_fn
      12  u8g_dev_ssd1309_128x64_hw_spi
     128  u8g_dev_ssd1309_128x64_hw_spi_buf
      12  u8g_dev_ssd1309_128x64_hw_spi_pb
      12  u8g_dev_ssd1309_128x64_i2c
     128  u8g_dev_ssd1309_128x64_i2c_buf
      12  u8g_dev_ssd1309_128x64_i2c_pb
      44  u8g_dev_ssd1309_128x64_init_seq
      12  u8g_dev_ssd1309_128x64_sw_spi
     128  u8g_dev_ssd1309_128x64_sw_spi_buf
      12  u8g_dev_ssd1309_128x64_sw_spi_pb
      12  u8g_dev_ssd13xx_sleep_off
      12  u8g_dev_ssd13xx_sleep_on

 
 384 bytes in section .bss
  72 bytes in section .data
 300 bytes in section .text
 
 300 bytes of CODE memory
 456 bytes of DATA memory

Errors: none
Warnings: none
