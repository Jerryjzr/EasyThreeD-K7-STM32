###############################################################################
#
# IAR ANSI C/C++ Compiler V8.22.1.15669/W32 for ARM       28/Dec/2020  21:37:08
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\nano\Middlewares\Third_Party\u8glib_arm_v1.17\src\u8g_dev_ssd1351_128x128.c
#    Command line =  
#        -f C:\Users\ADMINI~1\AppData\Local\Temp\EW46EA.tmp
#        (F:\nano\Middlewares\Third_Party\u8glib_arm_v1.17\src\u8g_dev_ssd1351_128x128.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D MKS_ROBIN -D MARLIN -D __arm__ -D
#        USE_MKS_WIFI --preprocess=s F:\nano\EWARM\mksRobinLite\List -lC
#        F:\nano\EWARM\mksRobinLite\List -lA F:\nano\EWARM\mksRobinLite\List
#        --diag_suppress Pa050 -o F:\nano\EWARM\mksRobinLite\Obj --no_unroll
#        --no_inline --no_tbaa --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --char_is_signed --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Full.h" -I F:\nano\EWARM/../Inc\ -I
#        F:\nano\EWARM/../Src\ -I
#        F:\nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\ -I
#        F:\nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\ -I
#        F:\nano\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/Inc\ -I
#        F:\nano\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\ -I
#        F:\nano\EWARM/../Drivers/CMSIS/Include\ -I
#        F:\nano\EWARM/../Drivers/BSP/STM32MKS-3dPrinter\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/Common\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/l6474\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/at24cxx\ -I
#        F:\nano\EWARM/../Drivers/BSP/Components/w25qxx\ -I
#        F:\nano\EWARM/../Drivers/BSP/MotorControl\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/FatFs/src\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/Marlin\ -I
#        F:\nano\EWARM/../Middlewares/Third_Party/u8glib_arm_v1.17/src\ -I
#        F:\nano\EWARM/../Middlewares/arduino\ -I
#        F:\nano\EWARM/../Middlewares/arduino/avr\ -I
#        F:\nano\EWARM/../Inc/Logo\ -Om --use_c++_inline -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.0\arm\CMSIS\Core\Include\" -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  
#        F:\nano\EWARM\mksRobinLite\List\u8g_dev_ssd1351_128x128.lst
#    Object file  =  F:\nano\EWARM\mksRobinLite\Obj\u8g_dev_ssd1351_128x128.o
#
###############################################################################

F:\nano\Middlewares\Third_Party\u8glib_arm_v1.17\src\u8g_dev_ssd1351_128x128.c
      1          /*
      2          
      3            u8g_dev_ssd1351_128x128.c
      4          
      5            Universal 8bit Graphics Library
      6            
      7            Copyright (c) 2013, jamjardavies@gmail.com
      8            Copyright (c) 2013, olikraus@gmail.com
      9            All rights reserved.
     10          
     11            Redistribution and use in source and binary forms, with or without modification, 
     12            are permitted provided that the following conditions are met:
     13          
     14            * Redistributions of source code must retain the above copyright notice, this list 
     15              of conditions and the following disclaimer.
     16              
     17            * Redistributions in binary form must reproduce the above copyright notice, this 
     18              list of conditions and the following disclaimer in the documentation and/or other 
     19              materials provided with the distribution.
     20          
     21            THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
     22            CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
     23            INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
     24            MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
     25            DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
     26            CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
     27            SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
     28            NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
     29            LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
     30            CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
     31            STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
     32            ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
     33            ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
     34            
     35            History:
     36            Initial version	20 May 2013 jamjardavies@gmail.com	
     37            indexed device	22 May 2013 olikraus@gmail.com
     38            
     39          */
     40          
     41          #include "u8g.h"
     42          
     43          #define WIDTH		128
     44          #define HEIGHT		128
     45          #define PAGE_HEIGHT	8
     46          

   \                                 In section .text, align 4, keep-with-next
     47          static const uint8_t u8g_dev_ssd1351_128x128_init_seq[] PROGMEM = {
   \                     u8g_dev_ssd1351_128x128_init_seq:
   \   00000000   0xFF 0xD0          DC8 255, 208, 255, 50, 255, 224, 255, 193, 255, 209, 255, 50, 253, 255
   \              0xFF 0x32    
   \              0xFF 0xE0    
   \              0xFF 0xC1    
   \              0xFF 0xD1    
   \              0xFF 0x32    
   \              0xFD 0xFF    
   \   0000000E   0xE1 0x12          DC8 225, 18, 255, 224, 253, 255, 225, 177, 255, 224, 174, 255, 224, 179
   \              0xFF 0xE0    
   \              0xFD 0xFF    
   \              0xE1 0xB1    
   \              0xFF 0xE0    
   \              0xAE 0xFF    
   \              0xE0 0xB3    
   \   0000001C   0xFF 0xE1          DC8 255, 225, 241, 255, 224, 202, 255, 225, 127, 255, 224, 160, 255
   \              0xF1 0xFF    
   \              0xE0 0xCA    
   \              0xFF 0xE1    
   \              0x7F 0xFF    
   \              0xE0 0xA0    
   \              0xFF         
   \   00000029   0xE1 0xB4          DC8 225, 180, 255, 224, 21, 255, 225, 0, 127, 255, 224, 117, 255, 225
   \              0xFF 0xE0    
   \              0x15 0xFF    
   \              0xE1 0x00    
   \              0x7F 0xFF    
   \              0xE0 0x75    
   \              0xFF 0xE1    
   \   00000037   0x00 0x7F          DC8 0, 127, 255, 224, 161, 255, 225, 0, 255, 224, 162, 255, 225, 0, 255
   \              0xFF 0xE0    
   \              0xA1 0xFF    
   \              0xE1 0x00    
   \              0xFF 0xE0    
   \              0xA2 0xFF    
   \              0xE1 0x00    
   \              0xFF         
   \   00000046   0xE0 0xB5          DC8 224, 181, 255, 225, 0, 255, 224, 171, 255, 225, 1, 255, 224, 177
   \              0xFF 0xE1    
   \              0x00 0xFF    
   \              0xE0 0xAB    
   \              0xFF 0xE1    
   \              0x01 0xFF    
   \              0xE0 0xB1    
   \   00000054   0xFF 0xE1          DC8 255, 225, 50, 255, 224, 180, 255, 225, 160, 181, 85, 255, 224, 187
   \              0x32 0xFF    
   \              0xE0 0xB4    
   \              0xFF 0xE1    
   \              0xA0 0xB5    
   \              0x55 0xFF    
   \              0xE0 0xBB    
   \   00000062   0xFF 0xE1          DC8 255, 225, 23, 255, 224, 190, 255, 225, 5, 255, 224, 193, 255, 225
   \              0x17 0xFF    
   \              0xE0 0xBE    
   \              0xFF 0xE1    
   \              0x05 0xFF    
   \              0xE0 0xC1    
   \              0xFF 0xE1    
   \   00000070   0xC8 0x80          DC8 200, 128, 200, 255, 224, 199, 255, 225, 15, 255, 224, 182, 255, 225
   \              0xC8 0xFF    
   \              0xE0 0xC7    
   \              0xFF 0xE1    
   \              0x0F 0xFF    
   \              0xE0 0xB6    
   \              0xFF 0xE1    
   \   0000007E   0x01 0xFF          DC8 1, 255, 224, 166, 255, 224, 184, 255, 225, 5, 6, 7, 8, 9, 10, 11
   \              0xE0 0xA6    
   \              0xFF 0xE0    
   \              0xB8 0xFF    
   \              0xE1 0x05    
   \              0x06 0x07    
   \              0x08 0x09    
   \              0x0A 0x0B    
   \   0000008E   0x0C 0x0D          DC8 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 31
   \              0x0E 0x0F    
   \              0x10 0x11    
   \              0x12 0x13    
   \              0x14 0x15    
   \              0x16 0x18    
   \              0x1A 0x1B    
   \              0x1C 0x1D    
   \              0x1F         
   \   0000009F   0x21 0x23          DC8 33, 35, 37, 39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 76, 80
   \              0x25 0x27    
   \              0x2A 0x2D    
   \              0x30 0x33    
   \              0x36 0x39    
   \              0x3C 0x3F    
   \              0x42 0x45    
   \              0x48 0x4C    
   \              0x50         
   \   000000B0   0x54 0x58          DC8 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 125, 130, 135, 140
   \              0x5C 0x60    
   \              0x64 0x68    
   \              0x6C 0x70    
   \              0x74 0x78    
   \              0x7D 0x82    
   \              0x87 0x8C    
   \   000000BE   0x91 0x96          DC8 145, 150, 155, 160, 165, 170, 175, 180, 255, 224, 175, 92, 255, 50
   \              0x9B 0xA0    
   \              0xA5 0xAA    
   \              0xAF 0xB4    
   \              0xFF 0xE0    
   \              0xAF 0x5C    
   \              0xFF 0x32    
   \   000000CC   0xFF 0xD0          DC8 255, 208, 255, 225, 255, 254, 0, 0
   \              0xFF 0xE1    
   \              0xFF 0xFE    
   \              0x00 0x00    
     48          	U8G_ESC_CS(0),					/* disable chip */
     49          	U8G_ESC_DLY(50),
     50          	U8G_ESC_ADR(0),					/* instruction mode */
     51          	U8G_ESC_RST(1),					/* do reset low pulse with (1*16)+2 milliseconds */
     52          	U8G_ESC_CS(1),					/* enable chip */
     53          	U8G_ESC_DLY(50),
     54          
     55          	0xfd,							/* Command Lock */
     56          	U8G_ESC_ADR(1),
     57          	0x12,						
     58          
     59          	U8G_ESC_ADR(0),					/* instruction mode */
     60          	0xfd,
     61          	U8G_ESC_ADR(1),
     62          	0xb1,							/* Command Lock */
     63          
     64          	U8G_ESC_ADR(0),					/* instruction mode */
     65          	0xae,							/* Set Display Off */
     66          
     67          	U8G_ESC_ADR(0),					/* instruction mode */
     68          	0xb3,
     69          	U8G_ESC_ADR(1),
     70          	0xf1,							/* Front Clock Div */
     71          
     72          	U8G_ESC_ADR(0),					/* instruction mode */
     73          	0xca,
     74          	U8G_ESC_ADR(1),
     75          	0x7f,							/* Set Multiplex Ratio */
     76          
     77          	U8G_ESC_ADR(0),					/* instruction mode */
     78          	0xa0,
     79          	U8G_ESC_ADR(1),
     80          	0xb4,							/* Set Colour Depth */
     81          
     82          	U8G_ESC_ADR(0),					/* instruction mode */
     83          	0x15,
     84          	U8G_ESC_ADR(1),
     85          	0x00, 0x7f,						/* Set Column Address */
     86          
     87          	U8G_ESC_ADR(0),					/* instruction mode */
     88          	0x75,
     89          	U8G_ESC_ADR(1),
     90          	0x00, 0x7f,						/* Set Row Address */
     91          
     92          	U8G_ESC_ADR(0),					/* instruction mode */
     93          	0xa1,
     94          	U8G_ESC_ADR(1),
     95          	0x00,							/* Set Display Start Line */
     96          
     97          	U8G_ESC_ADR(0),					/* instruction mode */
     98          	0xa2,
     99          	U8G_ESC_ADR(1),
    100          	0x00,							/* Set Display Offset */
    101          
    102          	U8G_ESC_ADR(0),					/* instruction mode */
    103          	0xb5,
    104          	U8G_ESC_ADR(1),
    105          	0x00,							/* Set GPIO */
    106          
    107          	U8G_ESC_ADR(0),					/* instruction mode */
    108          	0xab,
    109          	U8G_ESC_ADR(1),
    110          	0x01,							/* Set Function Selection */
    111          
    112          	U8G_ESC_ADR(0),					/* instruction mode */
    113          	0xb1,
    114          	U8G_ESC_ADR(1),
    115          	0x32,							/* Set Phase Length */
    116          
    117          	U8G_ESC_ADR(0),					/* instruction mode */
    118          	0xb4,
    119          	U8G_ESC_ADR(1),
    120          	0xa0, 0xb5, 0x55,				/* Set Segment Low Voltage */
    121          
    122          	U8G_ESC_ADR(0),					/* instruction mode */
    123          	0xbb,
    124          	U8G_ESC_ADR(1),
    125          	0x17,							/* Set Precharge Voltage */
    126          
    127          	U8G_ESC_ADR(0),					/* instruction mode */
    128          	0xbe,
    129          	U8G_ESC_ADR(1),
    130          	0x05,							/* Set VComH Voltage */
    131          
    132          	U8G_ESC_ADR(0),					/* instruction mode */
    133          	0xc1,
    134          	U8G_ESC_ADR(1),
    135          	0xc8, 0x80, 0xc8,				/* Set Contrast */
    136          
    137          	U8G_ESC_ADR(0),					/* instruction mode */
    138          	0xc7,
    139          	U8G_ESC_ADR(1),
    140          	0x0f,							/* Set Master Contrast */
    141          
    142          	U8G_ESC_ADR(0),					/* instruction mode */
    143          	0xb6,
    144          	U8G_ESC_ADR(1),
    145          	0x01,							/* Set Second Precharge Period */
    146          
    147          	U8G_ESC_ADR(0),					/* instruction mode */
    148          	0xa6,							/* Set Display Mode Reset */
    149          
    150          
    151          	U8G_ESC_ADR(0),					/* instruction mode */
    152          	0xb8,							/* Set CMD Grayscale Lookup */
    153          	U8G_ESC_ADR(1),
    154          	0x05,
    155          	0x06,
    156          	0x07,
    157          	0x08,
    158          	0x09,
    159          	0x0a,
    160          	0x0b,
    161          	0x0c,
    162          	0x0D,
    163          	0x0E,
    164          	0x0F,
    165          	0x10,
    166          	0x11,
    167          	0x12,
    168          	0x13,
    169          	0x14,
    170          	0x15,
    171          	0x16,
    172          	0x18,
    173          	0x1a,
    174          	0x1b,
    175          	0x1C,
    176          	0x1D,
    177          	0x1F,
    178          	0x21,
    179          	0x23,
    180          	0x25,
    181          	0x27,
    182          	0x2A,
    183          	0x2D,
    184          	0x30,
    185          	0x33,
    186          	0x36,
    187          	0x39,
    188          	0x3C,
    189          	0x3F,
    190          	0x42,
    191          	0x45,
    192          	0x48,
    193          	0x4C,
    194          	0x50,
    195          	0x54,
    196          	0x58,
    197          	0x5C,
    198          	0x60,
    199          	0x64,
    200          	0x68,
    201          	0x6C,
    202          	0x70,
    203          	0x74,
    204          	0x78,
    205          	0x7D,
    206          	0x82,
    207          	0x87,
    208          	0x8C,
    209          	0x91,
    210          	0x96,
    211          	0x9B,
    212          	0xA0,
    213          	0xA5,
    214          	0xAA,
    215          	0xAF,
    216          	0xB4,
    217          
    218          	U8G_ESC_ADR(0),
    219          	0xaf,							/* Set Display On */
    220          	0x5c,
    221          	U8G_ESC_DLY(50),
    222          	U8G_ESC_CS(0),					/* disable chip */
    223          	U8G_ESC_ADR(1),
    224          	U8G_ESC_END						/* end of sequence */
    225          };
    226          
    227          
    228          /* set gpio to high */

   \                                 In section .text, align 4, keep-with-next
    229          static const uint8_t u8g_dev_ssd1351_128x128gh_init_seq[] PROGMEM = {
   \                     u8g_dev_ssd1351_128x128gh_init_seq:
   \   00000000   0xFF 0xD0          DC8 255, 208, 255, 50, 255, 224, 255, 193, 255, 209, 255, 50, 253, 255
   \              0xFF 0x32    
   \              0xFF 0xE0    
   \              0xFF 0xC1    
   \              0xFF 0xD1    
   \              0xFF 0x32    
   \              0xFD 0xFF    
   \   0000000E   0xE1 0x12          DC8 225, 18, 255, 224, 253, 255, 225, 177, 255, 224, 174, 255, 224, 179
   \              0xFF 0xE0    
   \              0xFD 0xFF    
   \              0xE1 0xB1    
   \              0xFF 0xE0    
   \              0xAE 0xFF    
   \              0xE0 0xB3    
   \   0000001C   0xFF 0xE1          DC8 255, 225, 241, 255, 224, 202, 255, 225, 127, 255, 224, 160, 255
   \              0xF1 0xFF    
   \              0xE0 0xCA    
   \              0xFF 0xE1    
   \              0x7F 0xFF    
   \              0xE0 0xA0    
   \              0xFF         
   \   00000029   0xE1 0xB4          DC8 225, 180, 255, 224, 21, 255, 225, 0, 127, 255, 224, 117, 255, 225
   \              0xFF 0xE0    
   \              0x15 0xFF    
   \              0xE1 0x00    
   \              0x7F 0xFF    
   \              0xE0 0x75    
   \              0xFF 0xE1    
   \   00000037   0x00 0x7F          DC8 0, 127, 255, 224, 161, 255, 225, 0, 255, 224, 162, 255, 225, 0, 255
   \              0xFF 0xE0    
   \              0xA1 0xFF    
   \              0xE1 0x00    
   \              0xFF 0xE0    
   \              0xA2 0xFF    
   \              0xE1 0x00    
   \              0xFF         
   \   00000046   0xE0 0xB5          DC8 224, 181, 255, 225, 3, 255, 224, 171, 255, 225, 1, 255, 224, 177
   \              0xFF 0xE1    
   \              0x03 0xFF    
   \              0xE0 0xAB    
   \              0xFF 0xE1    
   \              0x01 0xFF    
   \              0xE0 0xB1    
   \   00000054   0xFF 0xE1          DC8 255, 225, 50, 255, 224, 180, 255, 225, 160, 181, 85, 255, 224, 187
   \              0x32 0xFF    
   \              0xE0 0xB4    
   \              0xFF 0xE1    
   \              0xA0 0xB5    
   \              0x55 0xFF    
   \              0xE0 0xBB    
   \   00000062   0xFF 0xE1          DC8 255, 225, 23, 255, 224, 190, 255, 225, 5, 255, 224, 193, 255, 225
   \              0x17 0xFF    
   \              0xE0 0xBE    
   \              0xFF 0xE1    
   \              0x05 0xFF    
   \              0xE0 0xC1    
   \              0xFF 0xE1    
   \   00000070   0xC8 0x80          DC8 200, 128, 200, 255, 224, 199, 255, 225, 15, 255, 224, 182, 255, 225
   \              0xC8 0xFF    
   \              0xE0 0xC7    
   \              0xFF 0xE1    
   \              0x0F 0xFF    
   \              0xE0 0xB6    
   \              0xFF 0xE1    
   \   0000007E   0x01 0xFF          DC8 1, 255, 224, 166, 255, 224, 184, 255, 225, 5, 6, 7, 8, 9, 10, 11
   \              0xE0 0xA6    
   \              0xFF 0xE0    
   \              0xB8 0xFF    
   \              0xE1 0x05    
   \              0x06 0x07    
   \              0x08 0x09    
   \              0x0A 0x0B    
   \   0000008E   0x0C 0x0D          DC8 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 31
   \              0x0E 0x0F    
   \              0x10 0x11    
   \              0x12 0x13    
   \              0x14 0x15    
   \              0x16 0x18    
   \              0x1A 0x1B    
   \              0x1C 0x1D    
   \              0x1F         
   \   0000009F   0x21 0x23          DC8 33, 35, 37, 39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 76, 80
   \              0x25 0x27    
   \              0x2A 0x2D    
   \              0x30 0x33    
   \              0x36 0x39    
   \              0x3C 0x3F    
   \              0x42 0x45    
   \              0x48 0x4C    
   \              0x50         
   \   000000B0   0x54 0x58          DC8 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 125, 130, 135, 140
   \              0x5C 0x60    
   \              0x64 0x68    
   \              0x6C 0x70    
   \              0x74 0x78    
   \              0x7D 0x82    
   \              0x87 0x8C    
   \   000000BE   0x91 0x96          DC8 145, 150, 155, 160, 165, 170, 175, 180, 255, 224, 175, 92, 255, 50
   \              0x9B 0xA0    
   \              0xA5 0xAA    
   \              0xAF 0xB4    
   \              0xFF 0xE0    
   \              0xAF 0x5C    
   \              0xFF 0x32    
   \   000000CC   0xFF 0xD0          DC8 255, 208, 255, 225, 255, 254, 0, 0
   \              0xFF 0xE1    
   \              0xFF 0xFE    
   \              0x00 0x00    
    230          	U8G_ESC_CS(0),					/* disable chip */
    231          	U8G_ESC_DLY(50),
    232          	U8G_ESC_ADR(0),					/* instruction mode */
    233          	U8G_ESC_RST(1),					/* do reset low pulse with (1*16)+2 milliseconds */
    234          	U8G_ESC_CS(1),					/* enable chip */
    235          	U8G_ESC_DLY(50),
    236          
    237          	0xfd,							/* Command Lock */
    238          	U8G_ESC_ADR(1),
    239          	0x12,						
    240          
    241          	U8G_ESC_ADR(0),					/* instruction mode */
    242          	0xfd,
    243          	U8G_ESC_ADR(1),
    244          	0xb1,							/* Command Lock */
    245          
    246          	U8G_ESC_ADR(0),					/* instruction mode */
    247          	0xae,							/* Set Display Off */
    248          
    249          	U8G_ESC_ADR(0),					/* instruction mode */
    250          	0xb3,
    251          	U8G_ESC_ADR(1),
    252          	0xf1,							/* Front Clock Div */
    253          
    254          	U8G_ESC_ADR(0),					/* instruction mode */
    255          	0xca,
    256          	U8G_ESC_ADR(1),
    257          	0x7f,							/* Set Multiplex Ratio */
    258          
    259          	U8G_ESC_ADR(0),					/* instruction mode */
    260          	0xa0,
    261          	U8G_ESC_ADR(1),
    262          	0xb4,							/* Set Colour Depth */
    263          
    264          	U8G_ESC_ADR(0),					/* instruction mode */
    265          	0x15,
    266          	U8G_ESC_ADR(1),
    267          	0x00, 0x7f,						/* Set Column Address */
    268          
    269          	U8G_ESC_ADR(0),					/* instruction mode */
    270          	0x75,
    271          	U8G_ESC_ADR(1),
    272          	0x00, 0x7f,						/* Set Row Address */
    273          
    274          	U8G_ESC_ADR(0),					/* instruction mode */
    275          	0xa1,
    276          	U8G_ESC_ADR(1),
    277          	0x00,							/* Set Display Start Line */
    278          
    279          	U8G_ESC_ADR(0),					/* instruction mode */
    280          	0xa2,
    281          	U8G_ESC_ADR(1),
    282          	0x00,							/* Set Display Offset */
    283          
    284          	U8G_ESC_ADR(0),					/* instruction mode */
    285          	0xb5,
    286          	U8G_ESC_ADR(1),
    287          	0x03,							/* Set GPIO to High Level */
    288          
    289          	U8G_ESC_ADR(0),					/* instruction mode */
    290          	0xab,
    291          	U8G_ESC_ADR(1),
    292          	0x01,							/* Set Function Selection */
    293          
    294          	U8G_ESC_ADR(0),					/* instruction mode */
    295          	0xb1,
    296          	U8G_ESC_ADR(1),
    297          	0x32,							/* Set Phase Length */
    298          
    299          	U8G_ESC_ADR(0),					/* instruction mode */
    300          	0xb4,
    301          	U8G_ESC_ADR(1),
    302          	0xa0, 0xb5, 0x55,				/* Set Segment Low Voltage */
    303          
    304          	U8G_ESC_ADR(0),					/* instruction mode */
    305          	0xbb,
    306          	U8G_ESC_ADR(1),
    307          	0x17,							/* Set Precharge Voltage */
    308          
    309          	U8G_ESC_ADR(0),					/* instruction mode */
    310          	0xbe,
    311          	U8G_ESC_ADR(1),
    312          	0x05,							/* Set VComH Voltage */
    313          
    314          	U8G_ESC_ADR(0),					/* instruction mode */
    315          	0xc1,
    316          	U8G_ESC_ADR(1),
    317          	0xc8, 0x80, 0xc8,				/* Set Contrast */
    318          
    319          	U8G_ESC_ADR(0),					/* instruction mode */
    320          	0xc7,
    321          	U8G_ESC_ADR(1),
    322          	0x0f,							/* Set Master Contrast */
    323          
    324          	U8G_ESC_ADR(0),					/* instruction mode */
    325          	0xb6,
    326          	U8G_ESC_ADR(1),
    327          	0x01,							/* Set Second Precharge Period */
    328          
    329          	U8G_ESC_ADR(0),					/* instruction mode */
    330          	0xa6,							/* Set Display Mode Reset */
    331          
    332          
    333          	U8G_ESC_ADR(0),					/* instruction mode */
    334          	0xb8,							/* Set CMD Grayscale Lookup */
    335          	U8G_ESC_ADR(1),
    336          	0x05,
    337          	0x06,
    338          	0x07,
    339          	0x08,
    340          	0x09,
    341          	0x0a,
    342          	0x0b,
    343          	0x0c,
    344          	0x0D,
    345          	0x0E,
    346          	0x0F,
    347          	0x10,
    348          	0x11,
    349          	0x12,
    350          	0x13,
    351          	0x14,
    352          	0x15,
    353          	0x16,
    354          	0x18,
    355          	0x1a,
    356          	0x1b,
    357          	0x1C,
    358          	0x1D,
    359          	0x1F,
    360          	0x21,
    361          	0x23,
    362          	0x25,
    363          	0x27,
    364          	0x2A,
    365          	0x2D,
    366          	0x30,
    367          	0x33,
    368          	0x36,
    369          	0x39,
    370          	0x3C,
    371          	0x3F,
    372          	0x42,
    373          	0x45,
    374          	0x48,
    375          	0x4C,
    376          	0x50,
    377          	0x54,
    378          	0x58,
    379          	0x5C,
    380          	0x60,
    381          	0x64,
    382          	0x68,
    383          	0x6C,
    384          	0x70,
    385          	0x74,
    386          	0x78,
    387          	0x7D,
    388          	0x82,
    389          	0x87,
    390          	0x8C,
    391          	0x91,
    392          	0x96,
    393          	0x9B,
    394          	0xA0,
    395          	0xA5,
    396          	0xAA,
    397          	0xAF,
    398          	0xB4,
    399          
    400          	U8G_ESC_ADR(0),
    401          	0xaf,							/* Set Display On */
    402          	0x5c,
    403          	U8G_ESC_DLY(50),
    404          	U8G_ESC_CS(0),					/* disable chip */
    405          	U8G_ESC_ADR(1),
    406          	U8G_ESC_END						/* end of sequence */
    407          };
    408          
    409          #define u8g_dev_ssd1351_128x128_init_seq u8g_dev_ssd1351_128x128_init_seq
    410          

   \                                 In section .text, align 4, keep-with-next
    411          static const uint8_t u8g_dev_ssd1351_128x128_column_seq[] PROGMEM = {
   \                     u8g_dev_ssd1351_128x128_column_seq:
   \   00000000   0xFF 0xD1          DC8 255, 209, 255, 224, 21, 255, 225, 0, 127, 255, 224, 117, 255, 225
   \              0xFF 0xE0    
   \              0x15 0xFF    
   \              0xE1 0x00    
   \              0x7F 0xFF    
   \              0xE0 0x75    
   \              0xFF 0xE1    
   \   0000000E   0x00 0x7F          DC8 0, 127, 255, 224, 92, 255, 225, 255, 208, 255, 254, 0, 0, 0
   \              0xFF 0xE0    
   \              0x5C 0xFF    
   \              0xE1 0xFF    
   \              0xD0 0xFF    
   \              0xFE 0x00    
   \              0x00 0x00    
    412          	U8G_ESC_CS(1),
    413          	U8G_ESC_ADR(0), 0x15,
    414          	U8G_ESC_ADR(1), 0x00, 0x7f,
    415          	U8G_ESC_ADR(0), 0x75,
    416          	U8G_ESC_ADR(1), 0x00, 0x7f,
    417          	U8G_ESC_ADR(0), 0x5c,
    418          	U8G_ESC_ADR(1),
    419          	U8G_ESC_CS(0),
    420          	U8G_ESC_END
    421          };
    422          
    423          #define RGB332_STREAM_BYTES 8

   \                                 In section .bss, align 4
    424          static uint8_t u8g_ssd1351_stream_bytes[RGB332_STREAM_BYTES*3];
   \                     u8g_ssd1351_stream_bytes:
   \   00000000                      DS8 24
    425          

   \                                 In section .text, align 2, keep-with-next
    426          void u8g_ssd1351_to_stream(uint8_t *ptr)
    427          {
   \                     u8g_ssd1351_to_stream: (+1)
   \   00000000   0xB410             PUSH     {R4}
    428            uint8_t cnt = RGB332_STREAM_BYTES;
    429            uint8_t val;
    430            uint8_t *dest = u8g_ssd1351_stream_bytes;
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable9
    431            for( cnt = 0; cnt < RGB332_STREAM_BYTES; cnt++ )
   \   00000006   0x2200             MOVS     R2,#+0
   \   00000008   0xE010             B.N      ??u8g_ssd1351_to_stream_0
    432            {
    433                val = *ptr++;
   \                     ??u8g_ssd1351_to_stream_1: (+1)
   \   0000000A   0xF810 0x3B01      LDRB     R3,[R0], #+1
    434                *dest++ = ((val & 0xe0) >> 2);
   \   0000000E   0x461C             MOV      R4,R3
   \   00000010   0x10A4             ASRS     R4,R4,#+2
   \   00000012   0xF004 0x0438      AND      R4,R4,#0x38
   \   00000016   0x700C             STRB     R4,[R1, #+0]
    435                *dest++ = ((val & 0x1c) << 1);
   \   00000018   0x005C             LSLS     R4,R3,#+1
   \   0000001A   0xF004 0x0438      AND      R4,R4,#0x38
   \   0000001E   0x704C             STRB     R4,[R1, #+1]
    436                *dest++ = ((val & 0x03) << 4);
   \   00000020   0x011B             LSLS     R3,R3,#+4
   \   00000022   0xF003 0x0330      AND      R3,R3,#0x30
   \   00000026   0x708B             STRB     R3,[R1, #+2]
   \   00000028   0x1CC9             ADDS     R1,R1,#+3
    437            } 
   \   0000002A   0x1C52             ADDS     R2,R2,#+1
   \                     ??u8g_ssd1351_to_stream_0: (+1)
   \   0000002C   0x4613             MOV      R3,R2
   \   0000002E   0xB2DB             UXTB     R3,R3
   \   00000030   0x2B08             CMP      R3,#+8
   \   00000032   0xDBEA             BLT.N    ??u8g_ssd1351_to_stream_1
    438          }
   \   00000034   0xBC10             POP      {R4}
   \   00000036   0x4770             BX       LR               ;; return
    439          
    440          
    441          #ifdef OBSOLETE
    442          // Convert the internal RGB 332 to R
    443          static uint8_t u8g_ssd1351_get_r(uint8_t colour)
    444          {
    445          	//return ((colour & 0xe0) >> 5) * 9;
    446          	//return ((colour & 0xe0) >> 5) * 8;
    447          	return ((colour & 0xe0) >> 2) ;
    448          }
    449          
    450          // Convert the internal RGB 332 to G
    451          static uint8_t u8g_ssd1351_get_g(uint8_t colour)
    452          {
    453          	//return ((colour & 0x1c) >> 2) * 9;
    454          	//return ((colour & 0x1c) >> 2) * 8;
    455          	return ((colour & 0x1c) << 1);
    456          }
    457          
    458          // Convert the internal RGB 332 to B
    459          static uint8_t u8g_ssd1351_get_b(uint8_t colour)
    460          {
    461          	//return (colour & 0x03) * 21;
    462          	return (colour & 0x03) * 16;
    463          }
    464          #endif
    465          
    466          

   \                                 In section .text, align 2, keep-with-next
    467          uint8_t u8g_dev_ssd1351_128x128_332_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg)
    468          {
   \                     u8g_dev_ssd1351_128x128_332_fn: (+1)
   \   00000000   0xE92D 0x4FF4      PUSH     {R2,R4-R11,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x468A             MOV      R10,R1
   \   00000008   0x461D             MOV      R5,R3
    469          //	u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
    470          
    471          	switch(msg)
   \   0000000A   0x4610             MOV      R0,R2
   \   0000000C   0x280A             CMP      R0,#+10
   \   0000000E   0xD006             BEQ.N    ??u8g_dev_ssd1351_128x128_332_fn_0
   \   00000010   0x2814             CMP      R0,#+20
   \   00000012   0xD01A             BEQ.N    ??u8g_dev_ssd1351_128x128_332_fn_1
   \   00000014   0x2815             CMP      R0,#+21
   \   00000016   0xD01E             BEQ.N    ??u8g_dev_ssd1351_128x128_332_fn_2
   \   00000018   0x2848             CMP      R0,#+72
   \   0000001A   0xD04F             BEQ.N    ??u8g_dev_ssd1351_128x128_332_fn_3
   \   0000001C   0xE009             B.N      ??u8g_dev_ssd1351_128x128_332_fn_4
    472          	{
    473          	case U8G_DEV_MSG_INIT:
    474          		u8g_InitCom(u8g, dev, U8G_SPI_CLK_CYCLE_50NS);
   \                     ??u8g_dev_ssd1351_128x128_332_fn_0: (+1)
   \   0000001E   0x2201             MOVS     R2,#+1
   \   00000020   0x4620             MOV      R0,R4
   \   00000022   0x.... 0x....      BL       u8g_InitCom
    475          		u8g_WriteEscSeqP(u8g, dev, u8g_dev_ssd1351_128x128_init_seq);
   \   00000026   0x.... 0x....      ADR.W    R2,u8g_dev_ssd1351_128x128_init_seq
   \   0000002A   0x4651             MOV      R1,R10
   \   0000002C   0x4620             MOV      R0,R4
   \   0000002E   0x.... 0x....      BL       u8g_WriteEscSeqP
    476          		break;
   \                     ??u8g_dev_ssd1351_128x128_332_fn_4: (+1)
   \   00000032   0x462B             MOV      R3,R5
    477          
    478          	case U8G_DEV_MSG_STOP:
    479          		break;
    480          
    481          	case U8G_DEV_MSG_PAGE_FIRST:
    482          		u8g_WriteEscSeqP(u8g, dev, u8g_dev_ssd1351_128x128_column_seq);
    483          		break;
    484          
    485          	case U8G_DEV_MSG_PAGE_NEXT:
    486          		{
    487          			u8g_uint_t x;
    488          			uint8_t page_height;
    489          			uint8_t i;
    490          			u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
    491          			uint8_t *ptr = pb->buf;
    492          
    493          			u8g_SetChipSelect(u8g, dev, 1);
    494          
    495          			page_height = pb->p.page_y1;
    496          			page_height -= pb->p.page_y0;
    497          			page_height++;
    498          			for( i = 0; i < page_height; i++ )
    499          			{
    500          			  
    501          			  for (x = 0; x < pb->width; x+=RGB332_STREAM_BYTES)
    502          			  {
    503          			    u8g_ssd1351_to_stream(ptr);
    504          			    u8g_WriteSequence(u8g, dev, RGB332_STREAM_BYTES*3, u8g_ssd1351_stream_bytes);
    505          			    ptr += RGB332_STREAM_BYTES;
    506          			  }
    507          			}
    508          			u8g_SetChipSelect(u8g, dev, 0);
    509          		}
    510          
    511          		break;
    512          	case U8G_DEV_MSG_GET_MODE:
    513          	  return U8G_MODE_R3G3B2;
    514          	}
    515          
    516          	return u8g_dev_pb8h8_base_fn(u8g, dev, msg, arg);
   \   00000034   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   00000038   0x4651             MOV      R1,R10
   \   0000003A   0x4620             MOV      R0,R4
   \   0000003C   0xB001             ADD      SP,SP,#+4
   \   0000003E   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   00000042   0x.... 0x....      B.W      u8g_dev_pb8h8_base_fn
   \                     ??u8g_dev_ssd1351_128x128_332_fn_5: (+1)
   \   00000046   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}   ;; return
   \                     ??u8g_dev_ssd1351_128x128_332_fn_1: (+1)
   \   0000004A   0x.... 0x....      ADR.W    R2,u8g_dev_ssd1351_128x128_column_seq
   \   0000004E   0x4620             MOV      R0,R4
   \   00000050   0x.... 0x....      BL       u8g_WriteEscSeqP
   \   00000054   0xE7ED             B.N      ??u8g_dev_ssd1351_128x128_332_fn_4
   \                     ??u8g_dev_ssd1351_128x128_332_fn_2: (+1)
   \   00000056   0xF8DA 0x8004      LDR      R8,[R10, #+4]
   \   0000005A   0xF8D8 0x9008      LDR      R9,[R8, #+8]
   \   0000005E   0x2201             MOVS     R2,#+1
   \   00000060   0x4620             MOV      R0,R4
   \   00000062   0x.... 0x....      BL       u8g_SetChipSelect
   \   00000066   0xF898 0x0003      LDRB     R0,[R8, #+3]
   \   0000006A   0xF898 0x6002      LDRB     R6,[R8, #+2]
   \   0000006E   0x1B86             SUBS     R6,R0,R6
   \   00000070   0x1C76             ADDS     R6,R6,#+1
   \   00000072   0xB2F6             UXTB     R6,R6
   \   00000074   0x2700             MOVS     R7,#+0
   \   00000076   0xE014             B.N      ??u8g_dev_ssd1351_128x128_332_fn_6
   \                     ??u8g_dev_ssd1351_128x128_332_fn_7: (+1)
   \   00000078   0x4648             MOV      R0,R9
   \   0000007A   0x.... 0x....      BL       u8g_ssd1351_to_stream
   \   0000007E   0x.... 0x....      LDR.W    R3,??DataTable9
   \   00000082   0x2218             MOVS     R2,#+24
   \   00000084   0x4651             MOV      R1,R10
   \   00000086   0x4620             MOV      R0,R4
   \   00000088   0x.... 0x....      BL       u8g_WriteSequence
   \   0000008C   0xF109 0x0908      ADD      R9,R9,#+8
   \   00000090   0xF10B 0x0B08      ADD      R11,R11,#+8
   \                     ??u8g_dev_ssd1351_128x128_332_fn_8: (+1)
   \   00000094   0x4658             MOV      R0,R11
   \   00000096   0xF898 0x1005      LDRB     R1,[R8, #+5]
   \   0000009A   0xB2C0             UXTB     R0,R0
   \   0000009C   0x4288             CMP      R0,R1
   \   0000009E   0xD3EB             BCC.N    ??u8g_dev_ssd1351_128x128_332_fn_7
   \   000000A0   0x1C7F             ADDS     R7,R7,#+1
   \                     ??u8g_dev_ssd1351_128x128_332_fn_6: (+1)
   \   000000A2   0x4638             MOV      R0,R7
   \   000000A4   0xB2C0             UXTB     R0,R0
   \   000000A6   0x42B0             CMP      R0,R6
   \   000000A8   0xDA02             BGE.N    ??u8g_dev_ssd1351_128x128_332_fn_9
   \   000000AA   0xF04F 0x0B00      MOV      R11,#+0
   \   000000AE   0xE7F1             B.N      ??u8g_dev_ssd1351_128x128_332_fn_8
   \                     ??u8g_dev_ssd1351_128x128_332_fn_9: (+1)
   \   000000B0   0x2200             MOVS     R2,#+0
   \   000000B2   0x4651             MOV      R1,R10
   \   000000B4   0x4620             MOV      R0,R4
   \   000000B6   0x.... 0x....      BL       u8g_SetChipSelect
   \   000000BA   0xE7BA             B.N      ??u8g_dev_ssd1351_128x128_332_fn_4
   \                     ??u8g_dev_ssd1351_128x128_332_fn_3: (+1)
   \   000000BC   0x2028             MOVS     R0,#+40
   \   000000BE   0xE7C2             B.N      ??u8g_dev_ssd1351_128x128_332_fn_5
    517          }
    518          

   \                                 In section .text, align 2, keep-with-next
    519          uint8_t u8g_dev_ssd1351_128x128gh_332_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg)
    520          {
   \                     u8g_dev_ssd1351_128x128gh_332_fn: (+1)
   \   00000000   0xE92D 0x4FF4      PUSH     {R2,R4-R11,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x468A             MOV      R10,R1
   \   00000008   0x461D             MOV      R5,R3
    521          //	u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
    522          
    523          	switch(msg)
   \   0000000A   0x4610             MOV      R0,R2
   \   0000000C   0x280A             CMP      R0,#+10
   \   0000000E   0xD006             BEQ.N    ??u8g_dev_ssd1351_128x128gh_332_fn_0
   \   00000010   0x2814             CMP      R0,#+20
   \   00000012   0xD01A             BEQ.N    ??u8g_dev_ssd1351_128x128gh_332_fn_1
   \   00000014   0x2815             CMP      R0,#+21
   \   00000016   0xD01E             BEQ.N    ??u8g_dev_ssd1351_128x128gh_332_fn_2
   \   00000018   0x2848             CMP      R0,#+72
   \   0000001A   0xD04E             BEQ.N    ??u8g_dev_ssd1351_128x128gh_332_fn_3
   \   0000001C   0xE009             B.N      ??u8g_dev_ssd1351_128x128gh_332_fn_4
    524          	{
    525          	case U8G_DEV_MSG_INIT:
    526          		u8g_InitCom(u8g, dev, U8G_SPI_CLK_CYCLE_50NS);
   \                     ??u8g_dev_ssd1351_128x128gh_332_fn_0: (+1)
   \   0000001E   0x2201             MOVS     R2,#+1
   \   00000020   0x4620             MOV      R0,R4
   \   00000022   0x.... 0x....      BL       u8g_InitCom
    527          		u8g_WriteEscSeqP(u8g, dev, u8g_dev_ssd1351_128x128gh_init_seq);
   \   00000026   0x.... 0x....      ADR.W    R2,u8g_dev_ssd1351_128x128gh_init_seq
   \   0000002A   0x4651             MOV      R1,R10
   \   0000002C   0x4620             MOV      R0,R4
   \   0000002E   0x.... 0x....      BL       u8g_WriteEscSeqP
    528          		break;
   \                     ??u8g_dev_ssd1351_128x128gh_332_fn_4: (+1)
   \   00000032   0x462B             MOV      R3,R5
    529          
    530          	case U8G_DEV_MSG_STOP:
    531          		break;
    532          
    533          	case U8G_DEV_MSG_PAGE_FIRST:
    534          		u8g_WriteEscSeqP(u8g, dev, u8g_dev_ssd1351_128x128_column_seq);
    535          		break;
    536          
    537          	case U8G_DEV_MSG_PAGE_NEXT:
    538          		{
    539          			u8g_uint_t x;
    540          			uint8_t page_height;
    541          			uint8_t i;
    542          			u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
    543          			uint8_t *ptr = pb->buf;
    544          
    545          			u8g_SetChipSelect(u8g, dev, 1);
    546          
    547          			page_height = pb->p.page_y1;
    548          			page_height -= pb->p.page_y0;
    549          			page_height++;
    550          			for( i = 0; i < page_height; i++ )
    551          			{
    552          			  
    553          			  for (x = 0; x < pb->width; x+=RGB332_STREAM_BYTES)
    554          			  {
    555          			    u8g_ssd1351_to_stream(ptr);
    556          			    u8g_WriteSequence(u8g, dev, RGB332_STREAM_BYTES*3, u8g_ssd1351_stream_bytes);
    557          			    ptr += RGB332_STREAM_BYTES;
    558          			  }
    559          			}
    560          			u8g_SetChipSelect(u8g, dev, 0);
    561          		}
    562          
    563          		break;
    564          	case U8G_DEV_MSG_GET_MODE:
    565          	  return U8G_MODE_R3G3B2;
    566          	}
    567          
    568          	return u8g_dev_pb8h8_base_fn(u8g, dev, msg, arg);
   \   00000034   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   00000038   0x4651             MOV      R1,R10
   \   0000003A   0x4620             MOV      R0,R4
   \   0000003C   0xB001             ADD      SP,SP,#+4
   \   0000003E   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   00000042   0x.... 0x....      B.W      u8g_dev_pb8h8_base_fn
   \                     ??u8g_dev_ssd1351_128x128gh_332_fn_5: (+1)
   \   00000046   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}   ;; return
   \                     ??u8g_dev_ssd1351_128x128gh_332_fn_1: (+1)
   \   0000004A   0x.... 0x....      ADR.W    R2,u8g_dev_ssd1351_128x128_column_seq
   \   0000004E   0x4620             MOV      R0,R4
   \   00000050   0x.... 0x....      BL       u8g_WriteEscSeqP
   \   00000054   0xE7ED             B.N      ??u8g_dev_ssd1351_128x128gh_332_fn_4
   \                     ??u8g_dev_ssd1351_128x128gh_332_fn_2: (+1)
   \   00000056   0xF8DA 0x8004      LDR      R8,[R10, #+4]
   \   0000005A   0xF8D8 0x9008      LDR      R9,[R8, #+8]
   \   0000005E   0x2201             MOVS     R2,#+1
   \   00000060   0x4620             MOV      R0,R4
   \   00000062   0x.... 0x....      BL       u8g_SetChipSelect
   \   00000066   0xF898 0x0003      LDRB     R0,[R8, #+3]
   \   0000006A   0xF898 0x6002      LDRB     R6,[R8, #+2]
   \   0000006E   0x1B86             SUBS     R6,R0,R6
   \   00000070   0x1C76             ADDS     R6,R6,#+1
   \   00000072   0xB2F6             UXTB     R6,R6
   \   00000074   0x2700             MOVS     R7,#+0
   \   00000076   0xE013             B.N      ??u8g_dev_ssd1351_128x128gh_332_fn_6
   \                     ??u8g_dev_ssd1351_128x128gh_332_fn_7: (+1)
   \   00000078   0x4648             MOV      R0,R9
   \   0000007A   0x.... 0x....      BL       u8g_ssd1351_to_stream
   \   0000007E   0x....             LDR.N    R3,??DataTable9
   \   00000080   0x2218             MOVS     R2,#+24
   \   00000082   0x4651             MOV      R1,R10
   \   00000084   0x4620             MOV      R0,R4
   \   00000086   0x.... 0x....      BL       u8g_WriteSequence
   \   0000008A   0xF109 0x0908      ADD      R9,R9,#+8
   \   0000008E   0xF10B 0x0B08      ADD      R11,R11,#+8
   \                     ??u8g_dev_ssd1351_128x128gh_332_fn_8: (+1)
   \   00000092   0x4658             MOV      R0,R11
   \   00000094   0xF898 0x1005      LDRB     R1,[R8, #+5]
   \   00000098   0xB2C0             UXTB     R0,R0
   \   0000009A   0x4288             CMP      R0,R1
   \   0000009C   0xD3EC             BCC.N    ??u8g_dev_ssd1351_128x128gh_332_fn_7
   \   0000009E   0x1C7F             ADDS     R7,R7,#+1
   \                     ??u8g_dev_ssd1351_128x128gh_332_fn_6: (+1)
   \   000000A0   0x4638             MOV      R0,R7
   \   000000A2   0xB2C0             UXTB     R0,R0
   \   000000A4   0x42B0             CMP      R0,R6
   \   000000A6   0xDA02             BGE.N    ??u8g_dev_ssd1351_128x128gh_332_fn_9
   \   000000A8   0xF04F 0x0B00      MOV      R11,#+0
   \   000000AC   0xE7F1             B.N      ??u8g_dev_ssd1351_128x128gh_332_fn_8
   \                     ??u8g_dev_ssd1351_128x128gh_332_fn_9: (+1)
   \   000000AE   0x2200             MOVS     R2,#+0
   \   000000B0   0x4651             MOV      R1,R10
   \   000000B2   0x4620             MOV      R0,R4
   \   000000B4   0x.... 0x....      BL       u8g_SetChipSelect
   \   000000B8   0xE7BB             B.N      ??u8g_dev_ssd1351_128x128gh_332_fn_4
   \                     ??u8g_dev_ssd1351_128x128gh_332_fn_3: (+1)
   \   000000BA   0x2028             MOVS     R0,#+40
   \   000000BC   0xE7C3             B.N      ??u8g_dev_ssd1351_128x128gh_332_fn_5
    569          }
    570          

   \                                 In section .bss, align 4
    571          static uint8_t u8g_dev_ssd1351_128x128_r[256];
   \                     u8g_dev_ssd1351_128x128_r:
   \   00000000                      DS8 256
   \   00000100                      DS8 256
   \   00000200                      DS8 256
    572          static uint8_t u8g_dev_ssd1351_128x128_g[256];
    573          static uint8_t u8g_dev_ssd1351_128x128_b[256];
    574          

   \                                 In section .text, align 4, keep-with-next
    575          uint8_t u8g_dev_ssd1351_128x128_idx_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg)
    576          {
   \                     u8g_dev_ssd1351_128x128_idx_fn: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
   \   00000008   0x4617             MOV      R7,R2
   \   0000000A   0x4698             MOV      R8,R3
    577          //	u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
    578          
    579          	switch(msg)
   \   0000000C   0x4638             MOV      R0,R7
   \   0000000E   0x280A             CMP      R0,#+10
   \   00000010   0xD008             BEQ.N    ??u8g_dev_ssd1351_128x128_idx_fn_0
   \   00000012   0x2814             CMP      R0,#+20
   \   00000014   0xD02F             BEQ.N    ??u8g_dev_ssd1351_128x128_idx_fn_1
   \   00000016   0x2815             CMP      R0,#+21
   \   00000018   0xD033             BEQ.N    ??u8g_dev_ssd1351_128x128_idx_fn_2
   \   0000001A   0x283C             CMP      R0,#+60
   \   0000001C   0xD016             BEQ.N    ??u8g_dev_ssd1351_128x128_idx_fn_3
   \   0000001E   0x2848             CMP      R0,#+72
   \   00000020   0xD063             BEQ.N    ??u8g_dev_ssd1351_128x128_idx_fn_4
   \   00000022   0xE008             B.N      ??u8g_dev_ssd1351_128x128_idx_fn_5
    580          	{
    581          	case U8G_DEV_MSG_INIT:
    582          		u8g_InitCom(u8g, dev, U8G_SPI_CLK_CYCLE_50NS);
   \                     ??u8g_dev_ssd1351_128x128_idx_fn_0: (+1)
   \   00000024   0x2201             MOVS     R2,#+1
   \   00000026   0x4620             MOV      R0,R4
   \   00000028   0x.... 0x....      BL       u8g_InitCom
    583          		u8g_WriteEscSeqP(u8g, dev, u8g_dev_ssd1351_128x128_init_seq);
   \   0000002C   0x....             ADR.N    R2,u8g_dev_ssd1351_128x128_init_seq
   \   0000002E   0x4629             MOV      R1,R5
   \   00000030   0x4620             MOV      R0,R4
   \   00000032   0x.... 0x....      BL       u8g_WriteEscSeqP
    584          		break;
    585          
    586          	case U8G_DEV_MSG_STOP:
    587          		break;
    588          	
    589          	case U8G_DEV_MSG_SET_COLOR_ENTRY:
    590          		  u8g_dev_ssd1351_128x128_r[ ((u8g_dev_arg_irgb_t *)arg)->idx ] = ((u8g_dev_arg_irgb_t *)arg)->r;
    591          		  u8g_dev_ssd1351_128x128_g[ ((u8g_dev_arg_irgb_t *)arg)->idx ] = ((u8g_dev_arg_irgb_t *)arg)->g;
    592          		  u8g_dev_ssd1351_128x128_b[ ((u8g_dev_arg_irgb_t *)arg)->idx ] = ((u8g_dev_arg_irgb_t *)arg)->b;
    593          		  break;
    594          	
    595          	case U8G_DEV_MSG_PAGE_FIRST:
    596          		u8g_WriteEscSeqP(u8g, dev, u8g_dev_ssd1351_128x128_column_seq);
    597          		break;
    598          
    599          	case U8G_DEV_MSG_PAGE_NEXT:
    600          		{
    601          			int x;
    602          			u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
    603          			uint8_t *ptr = pb->buf;
    604          
    605          			u8g_SetChipSelect(u8g, dev, 1);
    606          
    607          			for (x = 0; x < pb->width; x++)
    608          			{
    609          				u8g_WriteByte(u8g, dev, u8g_dev_ssd1351_128x128_r[(*ptr)>>2]);
    610          				u8g_WriteByte(u8g, dev, u8g_dev_ssd1351_128x128_g[(*ptr)>>2]);
    611          				u8g_WriteByte(u8g, dev, u8g_dev_ssd1351_128x128_b[(*ptr)>>2]);
    612          
    613          				ptr++;
    614          			}
    615          
    616          			u8g_SetChipSelect(u8g, dev, 0);
    617          		}
    618          
    619          		break;
    620          	case U8G_DEV_MSG_GET_MODE:
    621          	  return U8G_MODE_INDEX;
    622          	}
    623          
    624          	return u8g_dev_pb8h8_base_fn(u8g, dev, msg, arg);
   \                     ??u8g_dev_ssd1351_128x128_idx_fn_5: (+1)
   \   00000036   0x4643             MOV      R3,R8
   \   00000038   0x463A             MOV      R2,R7
   \   0000003A   0x4629             MOV      R1,R5
   \   0000003C   0x4620             MOV      R0,R4
   \   0000003E   0xB001             ADD      SP,SP,#+4
   \   00000040   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   00000044   0x.... 0x....      B.W      u8g_dev_pb8h8_base_fn
   \                     ??u8g_dev_ssd1351_128x128_idx_fn_6: (+1)
   \   00000048   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}   ;; return
   \                     ??u8g_dev_ssd1351_128x128_idx_fn_3: (+1)
   \   0000004C   0x....             LDR.N    R0,??DataTable9_1
   \   0000004E   0xF898 0x1001      LDRB     R1,[R8, #+1]
   \   00000052   0xF898 0x2000      LDRB     R2,[R8, #+0]
   \   00000056   0x5481             STRB     R1,[R0, R2]
   \   00000058   0xF898 0x1002      LDRB     R1,[R8, #+2]
   \   0000005C   0xF500 0x7280      ADD      R2,R0,#+256
   \   00000060   0xF898 0x3000      LDRB     R3,[R8, #+0]
   \   00000064   0x54D1             STRB     R1,[R2, R3]
   \   00000066   0xF898 0x1003      LDRB     R1,[R8, #+3]
   \   0000006A   0xF500 0x7000      ADD      R0,R0,#+512
   \   0000006E   0xF898 0x2000      LDRB     R2,[R8, #+0]
   \   00000072   0x5481             STRB     R1,[R0, R2]
   \   00000074   0xE7DF             B.N      ??u8g_dev_ssd1351_128x128_idx_fn_5
   \                     ??u8g_dev_ssd1351_128x128_idx_fn_1: (+1)
   \   00000076   0x.... 0x....      ADR.W    R2,u8g_dev_ssd1351_128x128_column_seq
   \   0000007A   0x4620             MOV      R0,R4
   \   0000007C   0x.... 0x....      BL       u8g_WriteEscSeqP
   \   00000080   0xE7D9             B.N      ??u8g_dev_ssd1351_128x128_idx_fn_5
   \                     ??u8g_dev_ssd1351_128x128_idx_fn_2: (+1)
   \   00000082   0xF8D5 0x9004      LDR      R9,[R5, #+4]
   \   00000086   0xF8D9 0x6008      LDR      R6,[R9, #+8]
   \   0000008A   0x2201             MOVS     R2,#+1
   \   0000008C   0x4620             MOV      R0,R4
   \   0000008E   0x.... 0x....      BL       u8g_SetChipSelect
   \   00000092   0xF04F 0x0B00      MOV      R11,#+0
   \   00000096   0x.... 0x....      LDR.W    R10,??DataTable9_1
   \   0000009A   0xE01C             B.N      ??u8g_dev_ssd1351_128x128_idx_fn_7
   \                     ??u8g_dev_ssd1351_128x128_idx_fn_8: (+1)
   \   0000009C   0x7830             LDRB     R0,[R6, #+0]
   \   0000009E   0x1080             ASRS     R0,R0,#+2
   \   000000A0   0xF81A 0x2000      LDRB     R2,[R10, R0]
   \   000000A4   0x4629             MOV      R1,R5
   \   000000A6   0x4620             MOV      R0,R4
   \   000000A8   0x.... 0x....      BL       u8g_WriteByte
   \   000000AC   0xF50A 0x7080      ADD      R0,R10,#+256
   \   000000B0   0x7831             LDRB     R1,[R6, #+0]
   \   000000B2   0x1089             ASRS     R1,R1,#+2
   \   000000B4   0x5C42             LDRB     R2,[R0, R1]
   \   000000B6   0x4629             MOV      R1,R5
   \   000000B8   0x4620             MOV      R0,R4
   \   000000BA   0x.... 0x....      BL       u8g_WriteByte
   \   000000BE   0xF50A 0x7000      ADD      R0,R10,#+512
   \   000000C2   0xF816 0x1B01      LDRB     R1,[R6], #+1
   \   000000C6   0x1089             ASRS     R1,R1,#+2
   \   000000C8   0x5C42             LDRB     R2,[R0, R1]
   \   000000CA   0x4629             MOV      R1,R5
   \   000000CC   0x4620             MOV      R0,R4
   \   000000CE   0x.... 0x....      BL       u8g_WriteByte
   \   000000D2   0xF10B 0x0B01      ADD      R11,R11,#+1
   \                     ??u8g_dev_ssd1351_128x128_idx_fn_7: (+1)
   \   000000D6   0xF899 0x0005      LDRB     R0,[R9, #+5]
   \   000000DA   0x4583             CMP      R11,R0
   \   000000DC   0xDBDE             BLT.N    ??u8g_dev_ssd1351_128x128_idx_fn_8
   \   000000DE   0x2200             MOVS     R2,#+0
   \   000000E0   0x4629             MOV      R1,R5
   \   000000E2   0x4620             MOV      R0,R4
   \   000000E4   0x.... 0x....      BL       u8g_SetChipSelect
   \   000000E8   0xE7A5             B.N      ??u8g_dev_ssd1351_128x128_idx_fn_5
   \                     ??u8g_dev_ssd1351_128x128_idx_fn_4: (+1)
   \   000000EA   0x2068             MOVS     R0,#+104
   \   000000EC   0xE7AC             B.N      ??u8g_dev_ssd1351_128x128_idx_fn_6
    625          }
    626          

   \                                 In section .text, align 2, keep-with-next
    627          void u8g_ssd1351_hicolor_to_stream(uint8_t *ptr)
    628          {
   \                     u8g_ssd1351_hicolor_to_stream: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
    629            register uint8_t cnt = RGB332_STREAM_BYTES;
    630            register uint8_t low, high, r, g, b;
    631            uint8_t *dest = u8g_ssd1351_stream_bytes;
   \   00000002   0x....             LDR.N    R1,??DataTable9
    632            for( cnt = 0; cnt < RGB332_STREAM_BYTES; cnt++ )
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0xE014             B.N      ??u8g_ssd1351_hicolor_to_stream_0
    633            {
    634              low = *ptr++;
   \                     ??u8g_ssd1351_hicolor_to_stream_1: (+1)
   \   00000008   0x7803             LDRB     R3,[R0, #+0]
    635              high = *ptr++;
   \   0000000A   0x7844             LDRB     R4,[R0, #+1]
   \   0000000C   0x1C80             ADDS     R0,R0,#+2
    636              
    637              r = high & ~7;
    638              r >>= 2;
    639              b = low & 31;
    640              b <<= 1;
    641              g = high & 7;
    642              g <<= 3;
    643              g |= (low>>5)&7;
    644              
    645              *dest++ = r;
   \   0000000E   0x4625             MOV      R5,R4
   \   00000010   0x08AD             LSRS     R5,R5,#+2
   \   00000012   0xF005 0x053E      AND      R5,R5,#0x3E
   \   00000016   0x700D             STRB     R5,[R1, #+0]
    646              *dest++ = g;
   \   00000018   0x00E4             LSLS     R4,R4,#+3
   \   0000001A   0xF004 0x0438      AND      R4,R4,#0x38
   \   0000001E   0x461D             MOV      R5,R3
   \   00000020   0xEA44 0x1455      ORR      R4,R4,R5, LSR #+5
   \   00000024   0x704C             STRB     R4,[R1, #+1]
    647              *dest++ = b;
   \   00000026   0x005B             LSLS     R3,R3,#+1
   \   00000028   0xF003 0x033E      AND      R3,R3,#0x3E
   \   0000002C   0x708B             STRB     R3,[R1, #+2]
   \   0000002E   0x1CC9             ADDS     R1,R1,#+3
    648            } 
   \   00000030   0x1C52             ADDS     R2,R2,#+1
   \                     ??u8g_ssd1351_hicolor_to_stream_0: (+1)
   \   00000032   0x4613             MOV      R3,R2
   \   00000034   0xB2DB             UXTB     R3,R3
   \   00000036   0x2B08             CMP      R3,#+8
   \   00000038   0xDBE6             BLT.N    ??u8g_ssd1351_hicolor_to_stream_1
    649          }
   \   0000003A   0xBC30             POP      {R4,R5}
   \   0000003C   0x4770             BX       LR               ;; return
    650          
    651          

   \                                 In section .text, align 4, keep-with-next
    652          uint8_t u8g_dev_ssd1351_128x128_hicolor_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg)
    653          {
   \                     u8g_dev_ssd1351_128x128_hicolor_fn: (+1)
   \   00000000   0xE92D 0x4FF4      PUSH     {R2,R4-R11,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x468A             MOV      R10,R1
   \   00000008   0x461D             MOV      R5,R3
    654            switch(msg)
   \   0000000A   0x4610             MOV      R0,R2
   \   0000000C   0x280A             CMP      R0,#+10
   \   0000000E   0xD006             BEQ.N    ??u8g_dev_ssd1351_128x128_hicolor_fn_0
   \   00000010   0x2814             CMP      R0,#+20
   \   00000012   0xD01A             BEQ.N    ??u8g_dev_ssd1351_128x128_hicolor_fn_1
   \   00000014   0x2815             CMP      R0,#+21
   \   00000016   0xD01E             BEQ.N    ??u8g_dev_ssd1351_128x128_hicolor_fn_2
   \   00000018   0x2848             CMP      R0,#+72
   \   0000001A   0xD04E             BEQ.N    ??u8g_dev_ssd1351_128x128_hicolor_fn_3
   \   0000001C   0xE009             B.N      ??u8g_dev_ssd1351_128x128_hicolor_fn_4
    655            {
    656              case U8G_DEV_MSG_INIT:
    657                u8g_InitCom(u8g, dev, U8G_SPI_CLK_CYCLE_50NS);
   \                     ??u8g_dev_ssd1351_128x128_hicolor_fn_0: (+1)
   \   0000001E   0x2201             MOVS     R2,#+1
   \   00000020   0x4620             MOV      R0,R4
   \   00000022   0x.... 0x....      BL       u8g_InitCom
    658                u8g_WriteEscSeqP(u8g, dev, u8g_dev_ssd1351_128x128_init_seq);
   \   00000026   0xBF00             Nop      
   \   00000028   0x....             ADR.N    R2,u8g_dev_ssd1351_128x128_init_seq
   \   0000002A   0x4651             MOV      R1,R10
   \   0000002C   0x4620             MOV      R0,R4
   \   0000002E   0x.... 0x....      BL       u8g_WriteEscSeqP
    659                break;
   \                     ??u8g_dev_ssd1351_128x128_hicolor_fn_4: (+1)
   \   00000032   0x462B             MOV      R3,R5
    660              case U8G_DEV_MSG_STOP:
    661                break;
    662              case U8G_DEV_MSG_PAGE_FIRST:
    663                u8g_WriteEscSeqP(u8g, dev, u8g_dev_ssd1351_128x128_column_seq);
    664                break;
    665              case U8G_DEV_MSG_PAGE_NEXT:
    666                {
    667                  u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
    668                  uint8_t i, j;
    669                  uint8_t page_height;
    670          	uint8_t *ptr = pb->buf;
    671          
    672          	u8g_SetChipSelect(u8g, dev, 1);
    673          
    674                  page_height = pb->p.page_y1;
    675                  page_height -= pb->p.page_y0;
    676                  page_height++;
    677                  for( j = 0; j < page_height; j++ )
    678                  {
    679          	    for (i = 0; i < pb->width; i+=RGB332_STREAM_BYTES)
    680          	    {
    681          	      u8g_ssd1351_hicolor_to_stream(ptr);
    682          	      u8g_WriteSequence(u8g, dev, RGB332_STREAM_BYTES*3, u8g_ssd1351_stream_bytes);
    683          	      ptr += RGB332_STREAM_BYTES*2;
    684          	    }
    685          	  
    686                  }
    687          
    688          	u8g_SetChipSelect(u8g, dev, 0);
    689          	
    690                }
    691                break;    /* continue to base fn */
    692              case U8G_DEV_MSG_GET_MODE:
    693               return U8G_MODE_HICOLOR;
    694            }
    695            return u8g_dev_pbxh16_base_fn(u8g, dev, msg, arg);
   \   00000034   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   00000038   0x4651             MOV      R1,R10
   \   0000003A   0x4620             MOV      R0,R4
   \   0000003C   0xB001             ADD      SP,SP,#+4
   \   0000003E   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   00000042   0x.... 0x....      B.W      u8g_dev_pbxh16_base_fn
   \                     ??u8g_dev_ssd1351_128x128_hicolor_fn_5: (+1)
   \   00000046   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}   ;; return
   \                     ??u8g_dev_ssd1351_128x128_hicolor_fn_1: (+1)
   \   0000004A   0xBF00             Nop      
   \   0000004C   0x....             ADR.N    R2,u8g_dev_ssd1351_128x128_column_seq
   \   0000004E   0x4620             MOV      R0,R4
   \   00000050   0x.... 0x....      BL       u8g_WriteEscSeqP
   \   00000054   0xE7ED             B.N      ??u8g_dev_ssd1351_128x128_hicolor_fn_4
   \                     ??u8g_dev_ssd1351_128x128_hicolor_fn_2: (+1)
   \   00000056   0xF8DA 0x8004      LDR      R8,[R10, #+4]
   \   0000005A   0xF8D8 0x9008      LDR      R9,[R8, #+8]
   \   0000005E   0x2201             MOVS     R2,#+1
   \   00000060   0x4620             MOV      R0,R4
   \   00000062   0x.... 0x....      BL       u8g_SetChipSelect
   \   00000066   0xF898 0x0003      LDRB     R0,[R8, #+3]
   \   0000006A   0xF898 0x6002      LDRB     R6,[R8, #+2]
   \   0000006E   0x1B86             SUBS     R6,R0,R6
   \   00000070   0x1C76             ADDS     R6,R6,#+1
   \   00000072   0xB2F6             UXTB     R6,R6
   \   00000074   0x2700             MOVS     R7,#+0
   \   00000076   0xE013             B.N      ??u8g_dev_ssd1351_128x128_hicolor_fn_6
   \                     ??u8g_dev_ssd1351_128x128_hicolor_fn_7: (+1)
   \   00000078   0x4648             MOV      R0,R9
   \   0000007A   0x.... 0x....      BL       u8g_ssd1351_hicolor_to_stream
   \   0000007E   0x....             LDR.N    R3,??DataTable9
   \   00000080   0x2218             MOVS     R2,#+24
   \   00000082   0x4651             MOV      R1,R10
   \   00000084   0x4620             MOV      R0,R4
   \   00000086   0x.... 0x....      BL       u8g_WriteSequence
   \   0000008A   0xF109 0x0910      ADD      R9,R9,#+16
   \   0000008E   0xF10B 0x0B08      ADD      R11,R11,#+8
   \                     ??u8g_dev_ssd1351_128x128_hicolor_fn_8: (+1)
   \   00000092   0x4658             MOV      R0,R11
   \   00000094   0xF898 0x1005      LDRB     R1,[R8, #+5]
   \   00000098   0xB2C0             UXTB     R0,R0
   \   0000009A   0x4288             CMP      R0,R1
   \   0000009C   0xD3EC             BCC.N    ??u8g_dev_ssd1351_128x128_hicolor_fn_7
   \   0000009E   0x1C7F             ADDS     R7,R7,#+1
   \                     ??u8g_dev_ssd1351_128x128_hicolor_fn_6: (+1)
   \   000000A0   0x4638             MOV      R0,R7
   \   000000A2   0xB2C0             UXTB     R0,R0
   \   000000A4   0x42B0             CMP      R0,R6
   \   000000A6   0xDA02             BGE.N    ??u8g_dev_ssd1351_128x128_hicolor_fn_9
   \   000000A8   0xF04F 0x0B00      MOV      R11,#+0
   \   000000AC   0xE7F1             B.N      ??u8g_dev_ssd1351_128x128_hicolor_fn_8
   \                     ??u8g_dev_ssd1351_128x128_hicolor_fn_9: (+1)
   \   000000AE   0x2200             MOVS     R2,#+0
   \   000000B0   0x4651             MOV      R1,R10
   \   000000B2   0x4620             MOV      R0,R4
   \   000000B4   0x.... 0x....      BL       u8g_SetChipSelect
   \   000000B8   0xE7BB             B.N      ??u8g_dev_ssd1351_128x128_hicolor_fn_4
   \                     ??u8g_dev_ssd1351_128x128_hicolor_fn_3: (+1)
   \   000000BA   0x2030             MOVS     R0,#+48
   \   000000BC   0xE7C3             B.N      ??u8g_dev_ssd1351_128x128_hicolor_fn_5
    696          }
    697          

   \                                 In section .text, align 4, keep-with-next
    698          uint8_t u8g_dev_ssd1351_128x128gh_hicolor_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg)
    699          {
   \                     u8g_dev_ssd1351_128x128gh_hicolor_fn: (+1)
   \   00000000   0xE92D 0x4FF4      PUSH     {R2,R4-R11,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x468A             MOV      R10,R1
   \   00000008   0x461D             MOV      R5,R3
    700            switch(msg)
   \   0000000A   0x4610             MOV      R0,R2
   \   0000000C   0x280A             CMP      R0,#+10
   \   0000000E   0xD006             BEQ.N    ??u8g_dev_ssd1351_128x128gh_hicolor_fn_0
   \   00000010   0x2814             CMP      R0,#+20
   \   00000012   0xD01A             BEQ.N    ??u8g_dev_ssd1351_128x128gh_hicolor_fn_1
   \   00000014   0x2815             CMP      R0,#+21
   \   00000016   0xD01E             BEQ.N    ??u8g_dev_ssd1351_128x128gh_hicolor_fn_2
   \   00000018   0x2848             CMP      R0,#+72
   \   0000001A   0xD04E             BEQ.N    ??u8g_dev_ssd1351_128x128gh_hicolor_fn_3
   \   0000001C   0xE009             B.N      ??u8g_dev_ssd1351_128x128gh_hicolor_fn_4
    701            {
    702              case U8G_DEV_MSG_INIT:
    703                u8g_InitCom(u8g, dev, U8G_SPI_CLK_CYCLE_50NS);
   \                     ??u8g_dev_ssd1351_128x128gh_hicolor_fn_0: (+1)
   \   0000001E   0x2201             MOVS     R2,#+1
   \   00000020   0x4620             MOV      R0,R4
   \   00000022   0x.... 0x....      BL       u8g_InitCom
    704                u8g_WriteEscSeqP(u8g, dev, u8g_dev_ssd1351_128x128gh_init_seq);
   \   00000026   0xBF00             Nop      
   \   00000028   0x....             ADR.N    R2,u8g_dev_ssd1351_128x128gh_init_seq
   \   0000002A   0x4651             MOV      R1,R10
   \   0000002C   0x4620             MOV      R0,R4
   \   0000002E   0x.... 0x....      BL       u8g_WriteEscSeqP
    705                break;
   \                     ??u8g_dev_ssd1351_128x128gh_hicolor_fn_4: (+1)
   \   00000032   0x462B             MOV      R3,R5
    706              case U8G_DEV_MSG_STOP:
    707                break;
    708              case U8G_DEV_MSG_PAGE_FIRST:
    709                u8g_WriteEscSeqP(u8g, dev, u8g_dev_ssd1351_128x128_column_seq);
    710                break;
    711              case U8G_DEV_MSG_PAGE_NEXT:
    712                {
    713                  u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
    714                  uint8_t i, j;
    715                  uint8_t page_height;
    716          	uint8_t *ptr = pb->buf;
    717          
    718          	u8g_SetChipSelect(u8g, dev, 1);
    719          
    720                  page_height = pb->p.page_y1;
    721                  page_height -= pb->p.page_y0;
    722                  page_height++;
    723                  for( j = 0; j < page_height; j++ )
    724                  {
    725          	    for (i = 0; i < pb->width; i+=RGB332_STREAM_BYTES)
    726          	    {
    727          	      u8g_ssd1351_hicolor_to_stream(ptr);
    728          	      u8g_WriteSequence(u8g, dev, RGB332_STREAM_BYTES*3, u8g_ssd1351_stream_bytes);
    729          	      ptr += RGB332_STREAM_BYTES*2;
    730          	    }
    731          	  
    732                  }
    733          
    734          	u8g_SetChipSelect(u8g, dev, 0);
    735          	
    736                }
    737                break;    /* continue to base fn */
    738              case U8G_DEV_MSG_GET_MODE:
    739               return U8G_MODE_HICOLOR;
    740            }
    741            return u8g_dev_pbxh16_base_fn(u8g, dev, msg, arg);
   \   00000034   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   00000038   0x4651             MOV      R1,R10
   \   0000003A   0x4620             MOV      R0,R4
   \   0000003C   0xB001             ADD      SP,SP,#+4
   \   0000003E   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   00000042   0x.... 0x....      B.W      u8g_dev_pbxh16_base_fn
   \                     ??u8g_dev_ssd1351_128x128gh_hicolor_fn_5: (+1)
   \   00000046   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}   ;; return
   \                     ??u8g_dev_ssd1351_128x128gh_hicolor_fn_1: (+1)
   \   0000004A   0xBF00             Nop      
   \   0000004C   0x....             ADR.N    R2,u8g_dev_ssd1351_128x128_column_seq
   \   0000004E   0x4620             MOV      R0,R4
   \   00000050   0x.... 0x....      BL       u8g_WriteEscSeqP
   \   00000054   0xE7ED             B.N      ??u8g_dev_ssd1351_128x128gh_hicolor_fn_4
   \                     ??u8g_dev_ssd1351_128x128gh_hicolor_fn_2: (+1)
   \   00000056   0xF8DA 0x8004      LDR      R8,[R10, #+4]
   \   0000005A   0xF8D8 0x9008      LDR      R9,[R8, #+8]
   \   0000005E   0x2201             MOVS     R2,#+1
   \   00000060   0x4620             MOV      R0,R4
   \   00000062   0x.... 0x....      BL       u8g_SetChipSelect
   \   00000066   0xF898 0x0003      LDRB     R0,[R8, #+3]
   \   0000006A   0xF898 0x6002      LDRB     R6,[R8, #+2]
   \   0000006E   0x1B86             SUBS     R6,R0,R6
   \   00000070   0x1C76             ADDS     R6,R6,#+1
   \   00000072   0xB2F6             UXTB     R6,R6
   \   00000074   0x2700             MOVS     R7,#+0
   \   00000076   0xE013             B.N      ??u8g_dev_ssd1351_128x128gh_hicolor_fn_6
   \                     ??u8g_dev_ssd1351_128x128gh_hicolor_fn_7: (+1)
   \   00000078   0x4648             MOV      R0,R9
   \   0000007A   0x.... 0x....      BL       u8g_ssd1351_hicolor_to_stream
   \   0000007E   0x....             LDR.N    R3,??DataTable9
   \   00000080   0x2218             MOVS     R2,#+24
   \   00000082   0x4651             MOV      R1,R10
   \   00000084   0x4620             MOV      R0,R4
   \   00000086   0x.... 0x....      BL       u8g_WriteSequence
   \   0000008A   0xF109 0x0910      ADD      R9,R9,#+16
   \   0000008E   0xF10B 0x0B08      ADD      R11,R11,#+8
   \                     ??u8g_dev_ssd1351_128x128gh_hicolor_fn_8: (+1)
   \   00000092   0x4658             MOV      R0,R11
   \   00000094   0xF898 0x1005      LDRB     R1,[R8, #+5]
   \   00000098   0xB2C0             UXTB     R0,R0
   \   0000009A   0x4288             CMP      R0,R1
   \   0000009C   0xD3EC             BCC.N    ??u8g_dev_ssd1351_128x128gh_hicolor_fn_7
   \   0000009E   0x1C7F             ADDS     R7,R7,#+1
   \                     ??u8g_dev_ssd1351_128x128gh_hicolor_fn_6: (+1)
   \   000000A0   0x4638             MOV      R0,R7
   \   000000A2   0xB2C0             UXTB     R0,R0
   \   000000A4   0x42B0             CMP      R0,R6
   \   000000A6   0xDA02             BGE.N    ??u8g_dev_ssd1351_128x128gh_hicolor_fn_9
   \   000000A8   0xF04F 0x0B00      MOV      R11,#+0
   \   000000AC   0xE7F1             B.N      ??u8g_dev_ssd1351_128x128gh_hicolor_fn_8
   \                     ??u8g_dev_ssd1351_128x128gh_hicolor_fn_9: (+1)
   \   000000AE   0x2200             MOVS     R2,#+0
   \   000000B0   0x4651             MOV      R1,R10
   \   000000B2   0x4620             MOV      R0,R4
   \   000000B4   0x.... 0x....      BL       u8g_SetChipSelect
   \   000000B8   0xE7BB             B.N      ??u8g_dev_ssd1351_128x128gh_hicolor_fn_4
   \                     ??u8g_dev_ssd1351_128x128gh_hicolor_fn_3: (+1)
   \   000000BA   0x2030             MOVS     R0,#+48
   \   000000BC   0xE7C3             B.N      ??u8g_dev_ssd1351_128x128gh_hicolor_fn_5
    742          }
    743          
    744          

   \                                 In section .bss, align 4
    745          uint8_t u8g_dev_ssd1351_128x128_byte_buf[WIDTH*PAGE_HEIGHT] U8G_NOCOMMON ; 
   \                     u8g_dev_ssd1351_128x128_byte_buf:
   \   00000000                      DS8 1024
    746          

   \                                 In section .data, align 4
    747          u8g_pb_t u8g_dev_ssd1351_128x128_byte_pb = { {PAGE_HEIGHT, HEIGHT, 0, 0, 0},  WIDTH, u8g_dev_ssd1351_128x128_byte_buf};  
   \                     u8g_dev_ssd1351_128x128_byte_pb:
   \   00000000   0x08 0x80          DC8 8, 128, 0, 0, 0, 128, 0, 0
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x00 0x00    
   \   00000008   0x........         DC32 u8g_dev_ssd1351_128x128_byte_buf

   \                                 In section .data, align 4
    748          u8g_dev_t u8g_dev_ssd1351_128x128_332_sw_spi = { u8g_dev_ssd1351_128x128_332_fn, &u8g_dev_ssd1351_128x128_byte_pb, U8G_COM_SW_SPI };
   \                     u8g_dev_ssd1351_128x128_332_sw_spi:
   \   00000000   0x........         DC32 u8g_dev_ssd1351_128x128_332_fn, u8g_dev_ssd1351_128x128_byte_pb
   \              0x........   
   \   00000008   0x........         DC32 u8g_com_null_fn

   \                                 In section .data, align 4
    749          u8g_dev_t u8g_dev_ssd1351_128x128_332_hw_spi = { u8g_dev_ssd1351_128x128_332_fn, &u8g_dev_ssd1351_128x128_byte_pb, U8G_COM_HW_SPI };
   \                     u8g_dev_ssd1351_128x128_332_hw_spi:
   \   00000000   0x........         DC32 u8g_dev_ssd1351_128x128_332_fn, u8g_dev_ssd1351_128x128_byte_pb
   \              0x........   
   \   00000008   0x........         DC32 u8g_com_null_fn

   \                                 In section .data, align 4
    750          u8g_dev_t u8g_dev_ssd1351_128x128gh_332_sw_spi = { u8g_dev_ssd1351_128x128gh_332_fn, &u8g_dev_ssd1351_128x128_byte_pb, U8G_COM_SW_SPI };
   \                     u8g_dev_ssd1351_128x128gh_332_sw_spi:
   \   00000000   0x........         DC32 u8g_dev_ssd1351_128x128gh_332_fn, u8g_dev_ssd1351_128x128_byte_pb
   \              0x........   
   \   00000008   0x........         DC32 u8g_com_null_fn

   \                                 In section .data, align 4
    751          u8g_dev_t u8g_dev_ssd1351_128x128gh_332_hw_spi = { u8g_dev_ssd1351_128x128gh_332_fn, &u8g_dev_ssd1351_128x128_byte_pb, U8G_COM_HW_SPI };
   \                     u8g_dev_ssd1351_128x128gh_332_hw_spi:
   \   00000000   0x........         DC32 u8g_dev_ssd1351_128x128gh_332_fn, u8g_dev_ssd1351_128x128_byte_pb
   \              0x........   
   \   00000008   0x........         DC32 u8g_com_null_fn
    752          
    753          //u8g_dev_t u8g_dev_ssd1351_128x128_idx_sw_spi = { u8g_dev_ssd1351_128x128_idx_fn, &u8g_dev_ssd1351_128x128_byte_pb, U8G_COM_SW_SPI };
    754          //u8g_dev_t u8g_dev_ssd1351_128x128_idx_hw_spi = { u8g_dev_ssd1351_128x128_idx_fn, &u8g_dev_ssd1351_128x128_byte_pb, U8G_COM_HW_SPI };
    755          
    756          
    757          /* only half of the height, because two bytes are needed for one pixel */

   \                                 In section .data, align 4
    758          u8g_pb_t u8g_dev_ssd1351_128x128_hicolor_byte_pb = { {PAGE_HEIGHT/2, HEIGHT, 0, 0, 0},  WIDTH, u8g_dev_ssd1351_128x128_byte_buf}; 
   \                     u8g_dev_ssd1351_128x128_hicolor_byte_pb:
   \   00000000   0x04 0x80          DC8 4, 128, 0, 0, 0, 128, 0, 0
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x00 0x00    
   \   00000008   0x........         DC32 u8g_dev_ssd1351_128x128_byte_buf

   \                                 In section .data, align 4
    759          u8g_dev_t u8g_dev_ssd1351_128x128_hicolor_sw_spi = { u8g_dev_ssd1351_128x128_hicolor_fn, &u8g_dev_ssd1351_128x128_hicolor_byte_pb, U8G_COM_SW_SPI };
   \                     u8g_dev_ssd1351_128x128_hicolor_sw_spi:
   \   00000000   0x........         DC32 u8g_dev_ssd1351_128x128_hicolor_fn
   \   00000004   0x........         DC32 u8g_dev_ssd1351_128x128_hicolor_byte_pb, u8g_com_null_fn
   \              0x........   

   \                                 In section .data, align 4
    760          u8g_dev_t u8g_dev_ssd1351_128x128_hicolor_hw_spi = { u8g_dev_ssd1351_128x128_hicolor_fn, &u8g_dev_ssd1351_128x128_hicolor_byte_pb, U8G_COM_HW_SPI };
   \                     u8g_dev_ssd1351_128x128_hicolor_hw_spi:
   \   00000000   0x........         DC32 u8g_dev_ssd1351_128x128_hicolor_fn
   \   00000004   0x........         DC32 u8g_dev_ssd1351_128x128_hicolor_byte_pb, u8g_com_null_fn
   \              0x........   

   \                                 In section .data, align 4
    761          u8g_dev_t u8g_dev_ssd1351_128x128gh_hicolor_sw_spi = { u8g_dev_ssd1351_128x128gh_hicolor_fn, &u8g_dev_ssd1351_128x128_hicolor_byte_pb, U8G_COM_SW_SPI };
   \                     u8g_dev_ssd1351_128x128gh_hicolor_sw_spi:
   \   00000000   0x........         DC32 u8g_dev_ssd1351_128x128gh_hicolor_fn
   \   00000004   0x........         DC32 u8g_dev_ssd1351_128x128_hicolor_byte_pb, u8g_com_null_fn
   \              0x........   

   \                                 In section .data, align 4
    762          u8g_dev_t u8g_dev_ssd1351_128x128gh_hicolor_hw_spi = { u8g_dev_ssd1351_128x128gh_hicolor_fn, &u8g_dev_ssd1351_128x128_hicolor_byte_pb, U8G_COM_HW_SPI };
   \                     u8g_dev_ssd1351_128x128gh_hicolor_hw_spi:
   \   00000000   0x........         DC32 u8g_dev_ssd1351_128x128gh_hicolor_fn
   \   00000004   0x........         DC32 u8g_dev_ssd1351_128x128_hicolor_byte_pb, u8g_com_null_fn
   \              0x........   
    763          
    764          

   \                                 In section .bss, align 4
    765          uint8_t u8g_dev_ssd1351_128x128_4x_byte_buf[WIDTH*PAGE_HEIGHT*4] U8G_NOCOMMON ; 
   \                     u8g_dev_ssd1351_128x128_4x_byte_buf:
   \   00000000                      DS8 4096
    766          

   \                                 In section .data, align 4
    767          u8g_pb_t u8g_dev_ssd1351_128x128_4x_332_byte_pb = { {PAGE_HEIGHT*4, HEIGHT, 0, 0, 0},  WIDTH, u8g_dev_ssd1351_128x128_4x_byte_buf};  
   \                     u8g_dev_ssd1351_128x128_4x_332_byte_pb:
   \   00000000   0x20 0x80          DC8 32, 128, 0, 0, 0, 128, 0, 0
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x00 0x00    
   \   00000008   0x........         DC32 u8g_dev_ssd1351_128x128_4x_byte_buf

   \                                 In section .data, align 4
    768          u8g_dev_t u8g_dev_ssd1351_128x128_4x_332_sw_spi = { u8g_dev_ssd1351_128x128_332_fn, &u8g_dev_ssd1351_128x128_4x_332_byte_pb, U8G_COM_SW_SPI };
   \                     u8g_dev_ssd1351_128x128_4x_332_sw_spi:
   \   00000000   0x........         DC32 u8g_dev_ssd1351_128x128_332_fn
   \   00000004   0x........         DC32 u8g_dev_ssd1351_128x128_4x_332_byte_pb, u8g_com_null_fn
   \              0x........   

   \                                 In section .data, align 4
    769          u8g_dev_t u8g_dev_ssd1351_128x128_4x_332_hw_spi = { u8g_dev_ssd1351_128x128_332_fn, &u8g_dev_ssd1351_128x128_4x_332_byte_pb, U8G_COM_HW_SPI };
   \                     u8g_dev_ssd1351_128x128_4x_332_hw_spi:
   \   00000000   0x........         DC32 u8g_dev_ssd1351_128x128_332_fn
   \   00000004   0x........         DC32 u8g_dev_ssd1351_128x128_4x_332_byte_pb, u8g_com_null_fn
   \              0x........   

   \                                 In section .data, align 4
    770          u8g_dev_t u8g_dev_ssd1351_128x128gh_4x_332_sw_spi = { u8g_dev_ssd1351_128x128gh_332_fn, &u8g_dev_ssd1351_128x128_4x_332_byte_pb, U8G_COM_SW_SPI };
   \                     u8g_dev_ssd1351_128x128gh_4x_332_sw_spi:
   \   00000000   0x........         DC32 u8g_dev_ssd1351_128x128gh_332_fn
   \   00000004   0x........         DC32 u8g_dev_ssd1351_128x128_4x_332_byte_pb, u8g_com_null_fn
   \              0x........   

   \                                 In section .data, align 4
    771          u8g_dev_t u8g_dev_ssd1351_128x128gh_4x_332_hw_spi = { u8g_dev_ssd1351_128x128gh_332_fn, &u8g_dev_ssd1351_128x128_4x_332_byte_pb, U8G_COM_HW_SPI };
   \                     u8g_dev_ssd1351_128x128gh_4x_332_hw_spi:
   \   00000000   0x........         DC32 u8g_dev_ssd1351_128x128gh_332_fn
   \   00000004   0x........         DC32 u8g_dev_ssd1351_128x128_4x_332_byte_pb, u8g_com_null_fn
   \              0x........   
    772          

   \                                 In section .data, align 4
    773          u8g_pb_t u8g_dev_ssd1351_128x128_4x_hicolor_byte_pb = { {PAGE_HEIGHT/2*4, HEIGHT, 0, 0, 0},  WIDTH, u8g_dev_ssd1351_128x128_4x_byte_buf}; 
   \                     u8g_dev_ssd1351_128x128_4x_hicolor_byte_pb:
   \   00000000   0x10 0x80          DC8 16, 128, 0, 0, 0, 128, 0, 0
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x00 0x00    
   \   00000008   0x........         DC32 u8g_dev_ssd1351_128x128_4x_byte_buf

   \                                 In section .data, align 4
    774          u8g_dev_t u8g_dev_ssd1351_128x128_4x_hicolor_sw_spi = { u8g_dev_ssd1351_128x128_hicolor_fn, &u8g_dev_ssd1351_128x128_4x_hicolor_byte_pb, U8G_COM_SW_SPI };
   \                     u8g_dev_ssd1351_128x128_4x_hicolor_sw_spi:
   \   00000000   0x........         DC32 u8g_dev_ssd1351_128x128_hicolor_fn
   \   00000004   0x........         DC32 u8g_dev_ssd1351_128x128_4x_hicolor_byte_pb, u8g_com_null_fn
   \              0x........   

   \                                 In section .data, align 4
    775          u8g_dev_t u8g_dev_ssd1351_128x128_4x_hicolor_hw_spi = { u8g_dev_ssd1351_128x128_hicolor_fn, &u8g_dev_ssd1351_128x128_4x_hicolor_byte_pb, U8G_COM_HW_SPI };
   \                     u8g_dev_ssd1351_128x128_4x_hicolor_hw_spi:
   \   00000000   0x........         DC32 u8g_dev_ssd1351_128x128_hicolor_fn
   \   00000004   0x........         DC32 u8g_dev_ssd1351_128x128_4x_hicolor_byte_pb, u8g_com_null_fn
   \              0x........   

   \                                 In section .data, align 4
    776          u8g_dev_t u8g_dev_ssd1351_128x128gh_4x_hicolor_sw_spi = { u8g_dev_ssd1351_128x128gh_hicolor_fn, &u8g_dev_ssd1351_128x128_4x_hicolor_byte_pb, U8G_COM_SW_SPI };
   \                     u8g_dev_ssd1351_128x128gh_4x_hicolor_sw_spi:
   \   00000000   0x........         DC32 u8g_dev_ssd1351_128x128gh_hicolor_fn
   \   00000004   0x........         DC32 u8g_dev_ssd1351_128x128_4x_hicolor_byte_pb, u8g_com_null_fn
   \              0x........   

   \                                 In section .data, align 4
    777          u8g_dev_t u8g_dev_ssd1351_128x128gh_4x_hicolor_hw_spi = { u8g_dev_ssd1351_128x128gh_hicolor_fn, &u8g_dev_ssd1351_128x128_4x_hicolor_byte_pb, U8G_COM_HW_SPI };
   \                     u8g_dev_ssd1351_128x128gh_4x_hicolor_hw_spi:
   \   00000000   0x........         DC32 u8g_dev_ssd1351_128x128gh_hicolor_fn
   \   00000004   0x........         DC32 u8g_dev_ssd1351_128x128_4x_hicolor_byte_pb, u8g_com_null_fn
   \              0x........   

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x........         DC32     u8g_ssd1351_stream_bytes

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x........         DC32     u8g_dev_ssd1351_128x128_r
    778          
    779          
    780          /*
    781          U8G_PB_DEV(u8g_dev_ssd1351_128x128_332_sw_spi, WIDTH, HEIGHT, PAGE_HEIGHT, u8g_dev_ssd1351_128x128_332_fn, U8G_COM_SW_SPI);
    782          U8G_PB_DEV(u8g_dev_ssd1351_128x128_332_hw_spi, WIDTH, HEIGHT, PAGE_HEIGHT, u8g_dev_ssd1351_128x128_332_fn, U8G_COM_HW_SPI);
    783          
    784          U8G_PB_DEV(u8g_dev_ssd1351_128x128_idx_sw_spi, WIDTH, HEIGHT, PAGE_HEIGHT, u8g_dev_ssd1351_128x128_idx_fn, U8G_COM_SW_SPI);
    785          U8G_PB_DEV(u8g_dev_ssd1351_128x128_idx_hw_spi, WIDTH, HEIGHT, PAGE_HEIGHT, u8g_dev_ssd1351_128x128_idx_fn, U8G_COM_HW_SPI);
    786          */
    787          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   u8g_dev_ssd1351_128x128_332_fn
        40   -> u8g_InitCom
        40   -> u8g_SetChipSelect
        40   -> u8g_WriteEscSeqP
        40   -> u8g_WriteSequence
         0   -> u8g_dev_pb8h8_base_fn
        40   -> u8g_ssd1351_to_stream
      40   u8g_dev_ssd1351_128x128_hicolor_fn
        40   -> u8g_InitCom
        40   -> u8g_SetChipSelect
        40   -> u8g_WriteEscSeqP
        40   -> u8g_WriteSequence
         0   -> u8g_dev_pbxh16_base_fn
        40   -> u8g_ssd1351_hicolor_to_stream
      40   u8g_dev_ssd1351_128x128_idx_fn
        40   -> u8g_InitCom
        40   -> u8g_SetChipSelect
        40   -> u8g_WriteByte
        40   -> u8g_WriteEscSeqP
         0   -> u8g_dev_pb8h8_base_fn
      40   u8g_dev_ssd1351_128x128gh_332_fn
        40   -> u8g_InitCom
        40   -> u8g_SetChipSelect
        40   -> u8g_WriteEscSeqP
        40   -> u8g_WriteSequence
         0   -> u8g_dev_pb8h8_base_fn
        40   -> u8g_ssd1351_to_stream
      40   u8g_dev_ssd1351_128x128gh_hicolor_fn
        40   -> u8g_InitCom
        40   -> u8g_SetChipSelect
        40   -> u8g_WriteEscSeqP
        40   -> u8g_WriteSequence
         0   -> u8g_dev_pbxh16_base_fn
        40   -> u8g_ssd1351_hicolor_to_stream
       8   u8g_ssd1351_hicolor_to_stream
       4   u8g_ssd1351_to_stream


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable9
       4  ??DataTable9_1
     192  u8g_dev_ssd1351_128x128_332_fn
      12  u8g_dev_ssd1351_128x128_332_hw_spi
      12  u8g_dev_ssd1351_128x128_332_sw_spi
      12  u8g_dev_ssd1351_128x128_4x_332_byte_pb
      12  u8g_dev_ssd1351_128x128_4x_332_hw_spi
      12  u8g_dev_ssd1351_128x128_4x_332_sw_spi
    4096  u8g_dev_ssd1351_128x128_4x_byte_buf
      12  u8g_dev_ssd1351_128x128_4x_hicolor_byte_pb
      12  u8g_dev_ssd1351_128x128_4x_hicolor_hw_spi
      12  u8g_dev_ssd1351_128x128_4x_hicolor_sw_spi
    1024  u8g_dev_ssd1351_128x128_byte_buf
      12  u8g_dev_ssd1351_128x128_byte_pb
      28  u8g_dev_ssd1351_128x128_column_seq
      12  u8g_dev_ssd1351_128x128_hicolor_byte_pb
     190  u8g_dev_ssd1351_128x128_hicolor_fn
      12  u8g_dev_ssd1351_128x128_hicolor_hw_spi
      12  u8g_dev_ssd1351_128x128_hicolor_sw_spi
     238  u8g_dev_ssd1351_128x128_idx_fn
     212  u8g_dev_ssd1351_128x128_init_seq
     768  u8g_dev_ssd1351_128x128_r
          u8g_dev_ssd1351_128x128_g
          u8g_dev_ssd1351_128x128_b
     190  u8g_dev_ssd1351_128x128gh_332_fn
      12  u8g_dev_ssd1351_128x128gh_332_hw_spi
      12  u8g_dev_ssd1351_128x128gh_332_sw_spi
      12  u8g_dev_ssd1351_128x128gh_4x_332_hw_spi
      12  u8g_dev_ssd1351_128x128gh_4x_332_sw_spi
      12  u8g_dev_ssd1351_128x128gh_4x_hicolor_hw_spi
      12  u8g_dev_ssd1351_128x128gh_4x_hicolor_sw_spi
     190  u8g_dev_ssd1351_128x128gh_hicolor_fn
      12  u8g_dev_ssd1351_128x128gh_hicolor_hw_spi
      12  u8g_dev_ssd1351_128x128gh_hicolor_sw_spi
     212  u8g_dev_ssd1351_128x128gh_init_seq
      62  u8g_ssd1351_hicolor_to_stream
      24  u8g_ssd1351_stream_bytes
      56  u8g_ssd1351_to_stream

 
 5 912 bytes in section .bss
   240 bytes in section .data
 1 578 bytes in section .text
 
 1 578 bytes of CODE memory
 6 152 bytes of DATA memory

Errors: none
Warnings: none
