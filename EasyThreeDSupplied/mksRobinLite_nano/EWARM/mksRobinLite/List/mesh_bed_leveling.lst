###############################################################################
#
# IAR ANSI C/C++ Compiler V8.30.1.114/W32 for ARM         07/Apr/2021  11:05:03
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\mesh_bed_leveling.cpp
#    Command line =  
#        -f C:\Users\PLT\AppData\Local\Temp\EW7E72.tmp
#        (C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\mesh_bed_leveling.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D MKS_ROBIN -D MARLIN -D __arm__ -D
#        USE_MKS_WIFI --preprocess=s
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List -lC
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List -lA
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List
#        --diag_suppress Pa050 -o
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\Obj
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.1\arm\inc\c\DLib_Config_Full.h" -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Inc\ -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Src\ -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/Inc\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/CMSIS/Include\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/STM32MKS-3dPrinter\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/Common\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/l6474\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Drivers/BSP/MotorControl\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/Third_Party/u8glib_arm_v1.17/src\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/arduino\
#        -I
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Middlewares/arduino/avr\
#        -I C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM/../Inc/Logo\ -Om --c++
#        --no_exceptions --no_rtti -I "D:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.1\arm\CMSIS\Core\Include\" -I "D:\Program
#        Files (x86)\IAR Systems\Embedded Workbench
#        8.1\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\List\mesh_bed_leveling.lst
#    Object file  =  
#        C:\Users\PLT\Desktop\mksRobinLite_nano\EWARM\mksRobinLite\Obj\mesh_bed_leveling.o
#
###############################################################################

C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\mesh_bed_leveling.cpp
      1          /**
      2           * Marlin 3D Printer Firmware
      3           * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
      4           *
      5           * Based on Sprinter and grbl.
      6           * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
      7           *
      8           * This program is free software: you can redistribute it and/or modify
      9           * it under the terms of the GNU General Public License as published by
     10           * the Free Software Foundation, either version 3 of the License, or
     11           * (at your option) any later version.
     12           *
     13           * This program is distributed in the hope that it will be useful,
     14           * but WITHOUT ANY WARRANTY; without even the implied warranty of
     15           * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     16           * GNU General Public License for more details.
     17           *
     18           * You should have received a copy of the GNU General Public License
     19           * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     20           *
     21           */
     22          
     23          #include "mesh_bed_leveling.h"

    #define SDSS   18
            ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\pins_MKS_ROBIN_LITE.h",161  Warning[Pa181]: 
          incompatible redefinition of macro "SDSS" (declared at line 62)

  #define UNUSED(x) ((void)(x))
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pa181]: 
          incompatible redefinition of macro "UNUSED" (declared at line 88 of
          "C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marl
          in\macros.h")

  #define PRINT_LED_PIN         PDout(2)
          ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Drivers\BSP\STM32MKS-3dPrinter\mks_fastio.h",14  Warning[Pa181]: 
          incompatible redefinition of macro "PRINT_LED_PIN" (declared at line
          146 of "C:\Users\PLT\Desktop\mksRobinLite_nano\Inc\main.h")

        int8_t cx = (x - (MESH_MIN_X)) * (1.0 / (MESH_X_DIST));
                    ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\mesh_bed_leveling.h",85  Warning[Pa093]: 
          implicit conversion from floating point to integer

        int8_t cy = (y - (MESH_MIN_Y)) * (1.0 / (MESH_Y_DIST));
                    ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\mesh_bed_leveling.h",90  Warning[Pa093]: 
          implicit conversion from floating point to integer

        int8_t px = (x - (MESH_MIN_X) + 0.5 * (MESH_X_DIST)) * (1.0 / (MESH_X_DIST));
                    ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\mesh_bed_leveling.h",95  Warning[Pa093]: 
          implicit conversion from floating point to integer

        int8_t py = (y - (MESH_MIN_Y) + 0.5 * (MESH_Y_DIST)) * (1.0 / (MESH_Y_DIST));
                    ^
"C:\Users\PLT\Desktop\mksRobinLite_nano\Middlewares\Third_Party\Marlin\mesh_bed_leveling.h",100  Warning[Pa093]: 
          implicit conversion from floating point to integer
     24          
     25          //#if ENABLED(MESH_BED_LEVELING)
     26          #if 1 /*--mks cfg-- MESH_BED_LEVELING */

   \                                 In section .text, align 2, keep-with-next
     27            mesh_bed_leveling mbl;
   \   static __intrinsic __interwork __softfp void __sti__routine()
   \                     __sti__routine: (+1)
   \        0x0   0x....             LDR.N    R0,??DataTable3
   \        0x2                      REQUIRE _ZN17mesh_bed_levelingC1Ev
   \        0x2                      ;; // Fall through to label mesh_bed_leveling::mesh_bed_leveling()

   \                                 In section .bss, align 1
   \                     mbl:
   \        0x0                      DS8 1
     28          

   \                                 In section .bss, align 4
     29            uint8_t mesh_bed_leveling::status;
   \                     _ZN17mesh_bed_leveling6statusE:
   \        0x0                      DS8 1
   \        0x1                      DS8 3
     30          
     31            float mesh_bed_leveling::z_offset,
   \                     _ZN17mesh_bed_leveling8z_offsetE:
   \        0x4                      DS8 4
     32              #if 0  	//mks
     33                  mesh_bed_leveling::z_values[GRID_MAX_POINTS_X][GRID_MAX_POINTS_Y],
     34                  mesh_bed_leveling::index_to_xpos[GRID_MAX_POINTS_X],
     35                  mesh_bed_leveling::index_to_ypos[GRID_MAX_POINTS_Y];
     36          	#else
     37          	mesh_bed_leveling::z_values[GRID_MAX_POINTS_X_MAX][GRID_MAX_POINTS_Y_MAX],
   \                     _ZN17mesh_bed_leveling8z_valuesE:
   \        0x8                      DS8 1024

   \                                 In section .bss, align 4
     38          	mesh_bed_leveling::index_to_xpos[GRID_MAX_POINTS_X_MAX],
   \                     _ZN17mesh_bed_leveling13index_to_xposE:
   \        0x0                      DS8 64
     39          	mesh_bed_leveling::index_to_ypos[GRID_MAX_POINTS_Y_MAX];
   \                     _ZN17mesh_bed_leveling13index_to_yposE:
   \       0x40                      DS8 64
     40          	
     41          	#endif
     42          

   \                                 In section .text, align 2, keep-with-next
   \   __code __interwork __softfp mesh_bed_leveling::subobject mesh_bed_leveling()
   \                     _ZN17mesh_bed_levelingC2Ev: (+1)
   \        0x0   0x....             B.N      _ZN17mesh_bed_levelingC1Ev

   \                                 In section .text, align 2, keep-with-next
     43            mesh_bed_leveling::mesh_bed_leveling() {
   \                     _ZN17mesh_bed_levelingC1Ev: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0x4607             MOV      R7,R0
     44              for (uint8_t i = 0; i < GRID_MAX_POINTS_X; ++i)
   \        0x6   0x2500             MOVS     R5,#+0
   \        0x8   0x.... 0x....      LDR.W    R8,??DataTable3_1
   \        0xC   0xE02A             B.N      ??mesh_bed_leveling_0
     45                index_to_xpos[i] = MESH_MIN_X + i * (MESH_X_DIST);
   \                     ??mesh_bed_leveling_1: (+1)
   \        0xE   0xF898 0x0098      LDRB     R0,[R8, #+152]
   \       0x12   0x.... 0x....      BL       __aeabi_ui2f
   \       0x16   0x4606             MOV      R6,R0
   \       0x18   0xF8D8 0x0008      LDR      R0,[R8, #+8]
   \       0x1C   0x4631             MOV      R1,R6
   \       0x1E   0x.... 0x....      BL       __aeabi_fadd
   \       0x22   0x4681             MOV      R9,R0
   \       0x24   0x4628             MOV      R0,R5
   \       0x26   0x.... 0x....      BL       __aeabi_ui2f
   \       0x2A   0x4682             MOV      R10,R0
   \       0x2C   0xF8D8 0x0014      LDR      R0,[R8, #+20]
   \       0x30   0x4631             MOV      R1,R6
   \       0x32   0x.... 0x....      BL       __aeabi_fsub
   \       0x36   0x4649             MOV      R1,R9
   \       0x38   0x.... 0x....      BL       __aeabi_fsub
   \       0x3C   0x4606             MOV      R6,R0
   \       0x3E   0x1E64             SUBS     R4,R4,#+1
   \       0x40   0x4620             MOV      R0,R4
   \       0x42   0x.... 0x....      BL       __aeabi_i2f
   \       0x46   0x4601             MOV      R1,R0
   \       0x48   0x4630             MOV      R0,R6
   \       0x4A   0x.... 0x....      BL       __aeabi_fdiv
   \       0x4E   0x4651             MOV      R1,R10
   \       0x50   0x.... 0x....      BL       __aeabi_fmul
   \       0x54   0x4649             MOV      R1,R9
   \       0x56   0x.... 0x....      BL       __aeabi_fadd
   \       0x5A   0x....             LDR.N    R1,??DataTable3_2
   \       0x5C   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \       0x60   0x1C6D             ADDS     R5,R5,#+1
   \       0x62   0xB2ED             UXTB     R5,R5
   \                     ??mesh_bed_leveling_0: (+1)
   \       0x64   0xF108 0x0960      ADD      R9,R8,#+96
   \       0x68   0xF899 0x4000      LDRB     R4,[R9, #+0]
   \       0x6C   0x42A5             CMP      R5,R4
   \       0x6E   0xDBCE             BLT.N    ??mesh_bed_leveling_1
     46              for (uint8_t i = 0; i < GRID_MAX_POINTS_Y; ++i)
   \       0x70   0xF04F 0x0A00      MOV      R10,#+0
   \       0x74   0xE02D             B.N      ??mesh_bed_leveling_2
     47                index_to_ypos[i] = MESH_MIN_Y + i * (MESH_Y_DIST);
   \                     ??mesh_bed_leveling_3: (+1)
   \       0x76   0xF898 0x0098      LDRB     R0,[R8, #+152]
   \       0x7A   0x.... 0x....      BL       __aeabi_ui2f
   \       0x7E   0x4683             MOV      R11,R0
   \       0x80   0xF8D8 0x000C      LDR      R0,[R8, #+12]
   \       0x84   0x4659             MOV      R1,R11
   \       0x86   0x.... 0x....      BL       __aeabi_fadd
   \       0x8A   0x4605             MOV      R5,R0
   \       0x8C   0x4650             MOV      R0,R10
   \       0x8E   0x.... 0x....      BL       __aeabi_ui2f
   \       0x92   0x4606             MOV      R6,R0
   \       0x94   0xF8D8 0x0018      LDR      R0,[R8, #+24]
   \       0x98   0x4659             MOV      R1,R11
   \       0x9A   0x.... 0x....      BL       __aeabi_fsub
   \       0x9E   0x4629             MOV      R1,R5
   \       0xA0   0x.... 0x....      BL       __aeabi_fsub
   \       0xA4   0x4683             MOV      R11,R0
   \       0xA6   0x1E64             SUBS     R4,R4,#+1
   \       0xA8   0x4620             MOV      R0,R4
   \       0xAA   0x.... 0x....      BL       __aeabi_i2f
   \       0xAE   0x4601             MOV      R1,R0
   \       0xB0   0x4658             MOV      R0,R11
   \       0xB2   0x.... 0x....      BL       __aeabi_fdiv
   \       0xB6   0x4631             MOV      R1,R6
   \       0xB8   0x.... 0x....      BL       __aeabi_fmul
   \       0xBC   0x4629             MOV      R1,R5
   \       0xBE   0x.... 0x....      BL       __aeabi_fadd
   \       0xC2   0x....             LDR.N    R1,??DataTable3_2
   \       0xC4   0xEB01 0x018A      ADD      R1,R1,R10, LSL #+2
   \       0xC8   0x6408             STR      R0,[R1, #+64]
   \       0xCA   0xF10A 0x0A01      ADD      R10,R10,#+1
   \       0xCE   0xFA5F 0xFA8A      UXTB     R10,R10
   \                     ??mesh_bed_leveling_2: (+1)
   \       0xD2   0xF899 0x4001      LDRB     R4,[R9, #+1]
   \       0xD6   0x45A2             CMP      R10,R4
   \       0xD8   0xDBCD             BLT.N    ??mesh_bed_leveling_3
     48              reset();
   \       0xDA   0x.... 0x....      BL       _ZN17mesh_bed_leveling5resetEv
     49            }
   \       0xDE   0x4638             MOV      R0,R7
   \       0xE0   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}   ;; return
     50          

   \                                 In section .text, align 2, keep-with-next
     51            void mesh_bed_leveling::reset() {
     52              status = MBL_STATUS_NONE;
   \                     _ZN17mesh_bed_leveling5resetEv: (+1)
   \        0x0   0x....             LDR.N    R0,??DataTable3_3
   \        0x2   0x2100             MOVS     R1,#+0
   \        0x4   0x7001             STRB     R1,[R0, #+0]
     53              z_offset = 0;
   \        0x6   0x6041             STR      R1,[R0, #+4]
     54              ZERO(z_values);
   \        0x8   0x460A             MOV      R2,R1
   \        0xA   0xF44F 0x6180      MOV      R1,#+1024
   \        0xE   0x3008             ADDS     R0,R0,#+8
   \       0x10   0x.... 0x....      B.W      __aeabi_memset4
     55            }
     56            /*--mks cfg-- LCD_ MESH_BED_LEVELING */

   \                                 In section .text, align 2, keep-with-next
     57          void mesh_bed_leveling::meshInit() {
   \                     _ZN17mesh_bed_leveling8meshInitEv: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
     58          	  for (uint8_t i = 0; i < GRID_MAX_POINTS_X; ++i)
   \        0x4   0x2500             MOVS     R5,#+0
   \        0x6   0xE028             B.N      ??meshInit_0
     59          		index_to_xpos[i] = MESH_MIN_X + i * (MESH_X_DIST);      // #define MESH_MIN_X (X_MIN_POS + MESH_INSET)
   \                     ??meshInit_1: (+1)
   \        0x8   0xF894 0x0098      LDRB     R0,[R4, #+152]
   \        0xC   0x.... 0x....      BL       __aeabi_ui2f
   \       0x10   0x4606             MOV      R6,R0
   \       0x12   0x68A0             LDR      R0,[R4, #+8]
   \       0x14   0x4631             MOV      R1,R6
   \       0x16   0x.... 0x....      BL       __aeabi_fadd
   \       0x1A   0x4680             MOV      R8,R0
   \       0x1C   0x4628             MOV      R0,R5
   \       0x1E   0x.... 0x....      BL       __aeabi_ui2f
   \       0x22   0x4681             MOV      R9,R0
   \       0x24   0x6960             LDR      R0,[R4, #+20]
   \       0x26   0x4631             MOV      R1,R6
   \       0x28   0x.... 0x....      BL       __aeabi_fsub
   \       0x2C   0x4641             MOV      R1,R8
   \       0x2E   0x.... 0x....      BL       __aeabi_fsub
   \       0x32   0x4604             MOV      R4,R0
   \       0x34   0x1E7F             SUBS     R7,R7,#+1
   \       0x36   0x4638             MOV      R0,R7
   \       0x38   0x.... 0x....      BL       __aeabi_i2f
   \       0x3C   0x4601             MOV      R1,R0
   \       0x3E   0x4620             MOV      R0,R4
   \       0x40   0x.... 0x....      BL       __aeabi_fdiv
   \       0x44   0x4649             MOV      R1,R9
   \       0x46   0x.... 0x....      BL       __aeabi_fmul
   \       0x4A   0x4641             MOV      R1,R8
   \       0x4C   0x.... 0x....      BL       __aeabi_fadd
   \       0x50   0x....             LDR.N    R1,??DataTable3_2
   \       0x52   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \       0x56   0x1C6D             ADDS     R5,R5,#+1
   \       0x58   0xB2ED             UXTB     R5,R5
   \                     ??meshInit_0: (+1)
   \       0x5A   0x....             LDR.N    R4,??DataTable3_1
   \       0x5C   0xF104 0x0660      ADD      R6,R4,#+96
   \       0x60   0x7837             LDRB     R7,[R6, #+0]
   \       0x62   0x42BD             CMP      R5,R7
   \       0x64   0xDBD0             BLT.N    ??meshInit_1
     60          	  for (uint8_t i = 0; i < GRID_MAX_POINTS_Y; ++i)
   \       0x66   0x2500             MOVS     R5,#+0
   \       0x68   0xE02A             B.N      ??meshInit_2
     61          		index_to_ypos[i] = MESH_MIN_Y + i * (MESH_Y_DIST);      // #define MESH_MIN_Y (Y_MIN_POS + MESH_INSET)
   \                     ??meshInit_3: (+1)
   \       0x6A   0xF894 0x0098      LDRB     R0,[R4, #+152]
   \       0x6E   0x.... 0x....      BL       __aeabi_ui2f
   \       0x72   0x4607             MOV      R7,R0
   \       0x74   0x68E0             LDR      R0,[R4, #+12]
   \       0x76   0x4639             MOV      R1,R7
   \       0x78   0x.... 0x....      BL       __aeabi_fadd
   \       0x7C   0x4681             MOV      R9,R0
   \       0x7E   0x4628             MOV      R0,R5
   \       0x80   0x.... 0x....      BL       __aeabi_ui2f
   \       0x84   0x4682             MOV      R10,R0
   \       0x86   0x69A0             LDR      R0,[R4, #+24]
   \       0x88   0x4639             MOV      R1,R7
   \       0x8A   0x.... 0x....      BL       __aeabi_fsub
   \       0x8E   0x4649             MOV      R1,R9
   \       0x90   0x.... 0x....      BL       __aeabi_fsub
   \       0x94   0x4607             MOV      R7,R0
   \       0x96   0xF1A8 0x0801      SUB      R8,R8,#+1
   \       0x9A   0x4640             MOV      R0,R8
   \       0x9C   0x.... 0x....      BL       __aeabi_i2f
   \       0xA0   0x4601             MOV      R1,R0
   \       0xA2   0x4638             MOV      R0,R7
   \       0xA4   0x.... 0x....      BL       __aeabi_fdiv
   \       0xA8   0x4651             MOV      R1,R10
   \       0xAA   0x.... 0x....      BL       __aeabi_fmul
   \       0xAE   0x4649             MOV      R1,R9
   \       0xB0   0x.... 0x....      BL       __aeabi_fadd
   \       0xB4   0x....             LDR.N    R1,??DataTable3_2
   \       0xB6   0xEB01 0x0185      ADD      R1,R1,R5, LSL #+2
   \       0xBA   0x6408             STR      R0,[R1, #+64]
   \       0xBC   0x1C6D             ADDS     R5,R5,#+1
   \       0xBE   0xB2ED             UXTB     R5,R5
   \                     ??meshInit_2: (+1)
   \       0xC0   0xF896 0x8001      LDRB     R8,[R6, #+1]
   \       0xC4   0x4545             CMP      R5,R8
   \       0xC6   0xDBD0             BLT.N    ??meshInit_3
     62            	}
   \       0xC8   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \        0x0   0x....'....        DC32     mbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \        0x0   0x....'....        DC32     mksCfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \        0x0   0x....'....        DC32     _ZN17mesh_bed_leveling13index_to_xposE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \        0x0   0x....'....        DC32     _ZN17mesh_bed_leveling6statusE
     63          #endif  // MESH_BED_LEVELING  
     64          
     65          //  #define MESH_MIN_X (X_MIN_POS + MESH_INSET)
     66          //  #define MESH_MAX_X (X_MAX_POS - (MESH_INSET))
     67          //  #define MESH_MIN_Y (Y_MIN_POS + MESH_INSET)
     68          //  #define MESH_MAX_Y (Y_MAX_POS - (MESH_INSET))
     69            
     70          //      #define MESH_X_DIST ((MESH_MAX_X - (MESH_MIN_X)) / (GRID_MAX_POINTS_X - 1))
     71          //      #define MESH_Y_DIST ((MESH_MAX_Y - (MESH_MIN_Y)) / (GRID_MAX_POINTS_Y - 1))

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   __sti__routine()
         0   -> mesh_bed_leveling::mesh_bed_leveling()
      32   mesh_bed_leveling::meshInit()
        32   -> __aeabi_fadd
        32   -> __aeabi_fdiv
        32   -> __aeabi_fmul
        32   -> __aeabi_fsub
        32   -> __aeabi_i2f
        32   -> __aeabi_ui2f
      40   mesh_bed_leveling::mesh_bed_leveling()
        40   -> __aeabi_fadd
        40   -> __aeabi_fdiv
        40   -> __aeabi_fmul
        40   -> __aeabi_fsub
        40   -> __aeabi_i2f
        40   -> __aeabi_ui2f
        40   -> mesh_bed_leveling::reset()
       0   mesh_bed_leveling::reset()
         0   -> __aeabi_memset4
       0   mesh_bed_leveling::subobject mesh_bed_leveling()
         0   -> mesh_bed_leveling::mesh_bed_leveling()


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       2  __sti__routine()
       1  mbl
     128  mesh_bed_leveling::index_to_xpos
          mesh_bed_leveling::index_to_ypos
     204  mesh_bed_leveling::meshInit()
     228  mesh_bed_leveling::mesh_bed_leveling()
      20  mesh_bed_leveling::reset()
    1032  mesh_bed_leveling::status
          mesh_bed_leveling::z_offset
          mesh_bed_leveling::z_values
       2  mesh_bed_leveling::subobject mesh_bed_leveling()
       4  -- Other

 
 1 161 bytes in section .bss
     4 bytes in section .init_array
   472 bytes in section .text
 
   476 bytes of CODE memory
 1 161 bytes of DATA memory

Errors: none
Warnings: 7
